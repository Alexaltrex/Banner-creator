{"version":3,"sources":["reportWebVitals.ts","Store/selectors/app-selectors.ts","Store/reducers/app-reducer.ts","Utils/lang.ts","Components/Header/HeaderLang.tsx","Store/reducers/editor-reducer.ts","Store/reducers/workspace-reducer.tsx","Store/reducers/text-reducer.tsx","Components/Header/Header.tsx","Components/common/PageNotFound.tsx","Components/Main/CreateNew/CreateNewItemGraph.tsx","Components/Main/CreateNew/CreateNewItem.tsx","Components/common/RenderTextField.tsx","Store/selectors/editor-selectors.ts","Components/Main/CreateNew/CreateNewCustom.tsx","Components/Main/CreateNew/CreateNew.tsx","Components/Main/Editor/MainSidebar/MainSidebar.tsx","Utils/CONST.ts","Components/Main/Editor/SecondarySidebar/SecondarySidebarTitle.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/BackgroundTabs.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Color/SetColorButton.tsx","Components/common/SelectColorPopover.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Color/SelectColorButton.tsx","Types/types.ts","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Color/Color.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Gradient/GradientStyleButton.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Gradient/GradientStyle.tsx","Components/common/SelectColorButtonCustom.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Gradient/GradientColor.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Gradient/Gradient.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/ImageTabs.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/MyImages/MyImagesItem.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/MyImages/MyImages.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Settings/SettingsAlignButton.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Settings/SettingsAlign.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Settings/SettingsScaleMode.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Settings/Settings.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Image.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/BackgroundBorder.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Background.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarText/Text.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebar.tsx","Store/selectors/workspace-selectors.ts","Components/Main/Editor/Toolbar/ToolbarZoom.tsx","Components/Main/Editor/Toolbar/ToolbarZoomPlus.tsx","Components/Main/Editor/Toolbar/ToolbarZoomMinus.tsx","Components/Main/Editor/Toolbar/ToolbarDownload.tsx","Utils/validators.ts","Components/Main/Editor/Toolbar/DownloadDialog/FileNameForm.tsx","Components/Main/Editor/Toolbar/DownloadDialog/JpegQuality.tsx","Components/common/RenderTextFieldStartAdornment.tsx","Components/Main/Editor/Toolbar/DownloadDialog/LinkForm.tsx","Components/Main/Editor/Toolbar/DownloadDialog/DownloadDialog.tsx","Components/Main/Editor/Toolbar/Toolbar.tsx","Components/Main/Editor/Banner/BannerCanvas/BannerCanvasBorder.tsx","Store/selectors/text-selectors.ts","Components/Main/Editor/Banner/BannerCSS/BannerTextForm.tsx","DragAndDrop/Dnd.ts","Components/Main/Editor/Banner/BannerCSS/BannerCSSText.tsx","Components/Main/Editor/Banner/BannerCSS/BannerCSSTexts.tsx","Components/Main/Editor/Banner/BannerCanvas/BannerCanvasBackground.tsx","Components/Main/Editor/Banner/BannerCanvas/BannerCanvasTexts.tsx","Components/Main/Editor/Banner/BannerCanvas/BannerCanvasWrapper.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelText/ButtonFontStyle.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelText/ButtonLowerCase.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelText/ButtonUpperCase.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelText/LeftPanelText.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelColor.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanel.tsx","Components/Main/Editor/Workspace/Workspace.tsx","Components/Main/Editor/Editor.tsx","Components/Main/Main.tsx","App.tsx","Store/store.ts","Components/common/ErrorBoundary.tsx","AppContainer.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getLang","state","app","lang","getIsCreated","isCreated","initialState","appAC","type","appReducer","action","Lang","translate","phrase","rus","eng","HeaderLang","classes","useStyles","dispatch","useDispatch","useSelector","React","useState","anchorEl","setAnchorEl","title","englishLabel","handleClick","event","currentTarget","handleClose","handleCloseRus","handleCloseEng","useHeaderLang","Tooltip","placement","tooltip","arrow","Button","className","button","startIcon","endIcon","aria-controls","aria-haspopup","onClick","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","selected","makeStyles","color","marginRight","textTransform","backgroundColor","size","width","height","mainSidebarItem","showSecondSidebar","secondarySidebarBackgroundTabIndex","backgroundStyle","useBorder","borderColor","backgroundStyleColor","backgroundStyleGradient","gradientStyle","colorStart","colorEnd","backgroundStyleImage","images","currentImage","scaleMode","align","imageTabIndex","canvasUrl","background","border","text","isLoading","editorAC","src","name","layer","url","editorReducer","find","el","length","readUploadedFileAsUrl","inputFile","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","zoom","downloadCase","jpegQuality","refLeftPanel","isDownloadDialogOpen","fileName","fileNameFormIsValid","link","linkFormIsValid","workspaceReducer","workspaceAC","texts","selectedTextId","textReducer","content","element","fontSize","top","position","left","fontStyle","fontFamily","lowerCase","upperCase","hover","editParameters","editText","map","difference","y","x","filter","textAC","Header","logo","createNewLabel","onCreateNewHandler","useHeader","header","toolBar","Typography","variant","noWrap","component","RouterLink","to","brown","zIndex","maxWidth","margin","boxSizing","padding","flexGrow","PageNotFound","pageNotFoundLabel","usePageNotFound","CreateNewItemGraph","props","w","h","graph","indigo","CreateNewItem","sizeLabel","onClickHandler","useCreateNewItem","Card","root","elevation","CardActionArea","cardActionArea","CardContent","cardContent","description","gutterBottom","grey","display","flexDirection","justifyContent","alignItems","RenderTextField","icon","label","input","meta","touched","invalid","error","custom","styles","iconLeft","TextField","InputProps","placeholder","helperText","transform","getSize","editor","getMainSidebarItem","getShowSecondSidebar","getSecondarySidebarBackgroundTabIndex","getBackgroundStyle","getBackgroundStyleColor","getUseBorder","getBorderColor","getGradientStyle","getColorStart","getColorEnd","getImageTabIndex","getImages","getCurrentImage","getScaleMode","getAlign","getCanvasUrl","ReduxForm","reduxForm","form","handleSubmit","onChangeHandler","setTimeout","submit","widthLabel","heightLabel","useStylesForm","parseHandler","value","replace","useForm","onSubmit","Field","field1","parse","onChange","field2","CreateNewCustom","viewForm","setViewForm","buttonLabel","customSizeLabel","disabled","onSubmitHandler","useCreateNewCustom","formWrapper","buttonWrapper","fullWidth","marginBottom","right","bottom","CreateNew","CreateNewElements","index","createNew","wrapper","maxHeight","flexWrap","MainSidebar","labels","changeHandler","newValue","useMainSidebar","icons","Tabs","indicator","orientation","Tab","tabRoot","labelIcon","theme","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","minWidth","minHeight","secondSidebarWidth","SecondarySidebarTitle","titleLabel","useSecondarySidebarTitle","typography","IconButton","BackgroundTabs","useSecondarySidebarBackgroundTabs","indicatorColor","textColor","tabs","borderBottom","Div","styled","div","SetColorButton","colorTitle","useSetColorButton","SelectColorPopover","onPickColor","propsColor","setColor","onAcceptHandler","useSelectColorPopover","marginTop","MainSidebarItemEnum","BackgroundTabIndexEnum","ImageTabIndexEnum","SelectColorButton","onPickColorHandler","useSelectColorButton","anchorOrigin","vertical","horizontal","transformOrigin","Color","colors","defaultPresetsLabel","useColor","pickColorButtonElements","scndSdbrBckgrndColor","colorsBlock","gridGap","gridTemplateColumns","GradientStyleButton","gradientStyleFromState","useGradientStyleButton","clsx","gradientStyleButton","radial","borderRadius","outline","GradientStyle","enable","SelectColorButtonCustom","tipTitle","anchorOriginVertical","anchorOriginHorizontal","transformOriginVertical","transformOriginHorizontal","headerLabel","tipTitleLabel","useSelectColorButtonCustom","GradientDiv","GradientColor","onSelectColorStartHandler","onSelectColorEndHandler","useGradientColor","gradientColor","buttons","Gradient","gradient","ImageTabs","useImageTabs","MyImagesItem","image","imgSrc","useMyImagesItem","alt","img","useImageMyImages","ref","useRef","imgCardElements","onChangeHandle","e","target","files","file","a","console","log","message","loadImage","current","click","MyImages","imageMyImages","accept","multiple","htmlFor","imagesWrapper","subWrapper","overflow","gridRowGap","SettingsAlignButton","ownAlign","onClickHandle","useAlignButton","alignButton","cursor","SettingsAlign","alignLabel","alignButtonsElements","useAlign","alignButtonWrapper","SettingsScaleMode","optionElements","scaleModeLabel","useScaleMode","Select","native","select","inputProps","Settings","Image","myImage","imageSetting","WhiteCheckbox","withStyles","Checkbox","BackgroundBorder","borderLabel","useBorderLabel","onSelectHandler","useBackgroundBorder","selectColorBlock","FormControlLabel","control","checked","formControlLabel","borderTop","checkbox","Background","Text","useSecondSidebarText","label1","label2","label3","lineHeight","SecondarySidebar","secondarySidebar","getZoom","workspace","getDownloadCase","getRefLeftPanel","getIsDownloadDialogOpen","getFileName","getFileNameFormIsValid","getJpegQuality","getLink","getLinkFormIsValid","ToolbarZoom","zoomlabel","listItemElements","ListItem","useToolbarZoom","List","ToolbarZoomPlus","zoomArray","findIndex","useToolbarZoomPlus","ToolbarZoomMinus","useToolbarZoomMinus","ToolbarDownload","downloadLabel","i","listItem","ListItemIcon","listItemIcon","ListItemText","primary","listItemText","useToolbarDownload","popover","fontWeight","required","undefined","shouldNotBeEmpty","test","valid","useEffect","autoFocus","field","validate","FileNameForm","initialValues","useFileNameForm","JpegQuality","marks","useJpegQuality","Slider","slider","min","max","step","valueLabelDisplay","RenderTextFieldStartAdornment","startAdornment","InputAdornment","LinkForm","DownloadDialog","contentLabel","nameLabel","cancelLabel","canvasAllUrl","download","linkLabel","copyLabel","canvasAll","document","createElement","ctxAll","getContext","imgBackground","drawImage","imgBorder","imgText","toDataURL","html","textareaRef","onCloseHandler","onCopyHandler","execCommand","useDownloadDialog","Dialog","DialogTitle","dialogTitle","DialogContent","DialogContentText","dialogContentText","textarea","rows","DialogActions","Link","underline","href","resize","Toolbar","editorToolbar","centerBlock","rightBlock","gridColumnGap","BannerCanvasBorder","canvasRef","canvasCtxRef","ctx","clearRect","strokeStyle","lineWidth","strokeRect","useBannerCanvasBackground","bannerCanvasBorder","style","getTexts","getSelectedTextId","onBlurHandler","onBlur","BannerTextForm","useBannerTextForm","blue","hide","ItemTypes","Span","span","useBannerText","wrapperRef","onOutsideClickHandler","contains","addEventListener","removeEventListener","useDrag","item","collect","monitor","isDragging","dragRef","toLowerCase","toUpperCase","onMouseEnterHandler","onMouseLeaveHandler","onMouseDownHandler","onMouseUpHandler","onDoubleClickHandler","BannerCSSText","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","onDoubleClick","clicked","protect","BannerCSSTexts","textElements","BannerCanvasBackground","fillStyle","fillRect","createLinearGradient","createRadialGradient","Math","sqrt","addColorStop","cw","ch","cx","cy","ix","iy","iw","ih","ch1","cw1","iw1","ih1","bannerCanvasBackground","BannerCanvasBackgroundMemo","memo","BannerCanvasTexts","font","fillText","textBaseline","useBannerCanvasTexts","bannerCanvasTexts","BannerCanvasTextsMemo","BannerCanvasWrapper","useDrop","drop","positionCursorDifference","getDifferenceFromInitialOffset","posDiffZoom","dropRef","useBannerCanvasWrapper","ButtonFontStyle","useButtonFontStyle","ButtonLowerCase","ButtonUpperCase","useButtonUpperCase","LeftPanelText","textLabel","fontSizeLabel","values","push","handleChange","onChangeSelectHandle","useLeftPanelText","formControlWrapper","FormControl","formControl","fontStyleBlock","LeftPanelColor","newColor","useLeftPanelColor","leftPanelColor","colorPicker","LeftPanel","leftPanelIndex","setLeftPanelIndex","colorLabel","deleteLabel","useLeftPanel","leftPanel","list","iconSelected","Row1","Div1","Div2","Row2","Div3","WorkspaceDiv","Workspace","leftPanelIsShow","useEditorWorkspace","Editor","mainSidebar","secondSidebarWrapper","secondSidebarWrapperHide","secondSidebar","flexShrink","transition","Main","main","exact","path","render","App","catchAllUnhandledErrors","alert","window","useApp","rootReducer","combineReducers","formReducer","middleware","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","ErrorBoundary","errorInfo","this","setState","whiteSpace","toString","children","Component","AppContainer","CssBaseline","DndProvider","backend","HTML5Backend","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ecadc648.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {StateType} from \"../store\";\r\n\r\nexport const getLang = (state: StateType) => state.app.lang;\r\nexport const getIsCreated = (state: StateType) => state.app.isCreated;\r\n\r\n","import {GetActionsType} from \"../store\";\r\nimport {LangType} from \"../../Types/types\";\r\n\r\nlet initialState = {\r\n    lang: 'eng' as LangType, // язык приложения\r\n    isCreated: false // создан или нет проект\r\n};\r\n\r\nconst appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'BANNER_CREATOR/APP/SET_LANG':\r\n            return {...state, lang: action.lang}\r\n        case 'BANNER_CREATOR/APP/SET_IS_CREATED': {\r\n            return {...state, isCreated: action.isCreated}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const appAC = {\r\n    setLang: (lang: LangType) => ({type: 'BANNER_CREATOR/APP/SET_LANG', lang} as const),\r\n    setIsCreated: (isCreated: boolean) => ({type: 'BANNER_CREATOR/APP/SET_IS_CREATED', isCreated} as const),\r\n};\r\n\r\nexport default appReducer;\r\n\r\n//============== TYPE ==================\r\nexport type InitialStateType = typeof initialState;\r\nexport type AppActionsType = GetActionsType<typeof appAC>;","import {LangType} from \"../Types/types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\n\r\nexport const Lang: LangObjectType = {\r\n    'English': {\r\n        'eng': 'English',\r\n        'rus': 'Русский'\r\n    },\r\n    'Change language': {\r\n        'eng': 'Change language',\r\n        'rus': 'Сменить язык'\r\n    },\r\n    'Banner creator': {\r\n        'eng': 'Banner creator',\r\n        'rus': 'Редактор баннеров'\r\n    },\r\n    'Create new': {\r\n        'eng': 'Create new',\r\n        'rus': 'Создать новый'\r\n    },\r\n    'Width': {\r\n        'eng': 'Width',\r\n        'rus': 'Ширина'\r\n    },\r\n    'Height': {\r\n        'eng': 'Height',\r\n        'rus': 'Высота'\r\n    },\r\n    'Create': {\r\n        'eng': 'Create',\r\n        'rus': 'Создать'\r\n    },\r\n    'Custom Size': {\r\n        'eng': 'Custom Size',\r\n        'rus': 'Задать размер'\r\n    },\r\n    'Background': {\r\n        'eng': 'Background',\r\n        'rus': 'Задний фон'\r\n    },\r\n    'Text': {\r\n        'eng': 'Text',\r\n        'rus': 'Текст'\r\n    },\r\n    'Color': {\r\n        'eng': 'Color',\r\n        'rus': 'Цвет'\r\n    },\r\n    'Gradient': {\r\n        'eng': 'Gradient',\r\n        'rus': 'Градиент'\r\n    },\r\n    'Texture': {\r\n        'eng': 'Texture',\r\n        'rus': 'Текстура'\r\n    },\r\n    'Image': {\r\n        'eng': 'Image',\r\n        'rus': 'Картинка'\r\n    },\r\n    'Default presets': {\r\n        'eng': 'Default presets',\r\n        'rus': 'Стандартные цвета'\r\n    },\r\n    'Border': {\r\n        'eng': 'Border',\r\n        'rus': 'Рамка'\r\n    },\r\n    'Use border': {\r\n        'eng': 'Use border',\r\n        'rus': 'С рамкой'\r\n    },\r\n    'Select color': {\r\n        'eng': 'Select color',\r\n        'rus': 'Выберите цвет'\r\n    },\r\n    'Select background color': {\r\n        'eng': 'Select background color',\r\n        'rus': 'Выберите цвет заднего фона'\r\n    },\r\n    'Select border color': {\r\n        'eng': 'Select border color',\r\n        'rus': 'Выберите цвет рамки'\r\n    },\r\n    'Select start color': {\r\n        'eng': 'Select start color',\r\n        'rus': 'Выберите начальный цвет'\r\n    },\r\n    'Select end color': {\r\n        'eng': 'Select end color',\r\n        'rus': 'Выберите конечный цвет'\r\n    },\r\n    'My images': {\r\n        'eng': 'My images',\r\n        'rus': 'Мои'\r\n    },\r\n    'Stock photos': {\r\n        'eng': 'Stock photos',\r\n        'rus': 'Стоковые'\r\n    },\r\n    'Settings': {\r\n        'eng': 'Settings',\r\n        'rus': 'Настройки'\r\n    },\r\n    'Scale mode': {\r\n        'eng': 'Scale mode',\r\n        'rus': 'Масштабирование'\r\n    },\r\n    'Align': {\r\n        'eng': 'Align',\r\n        'rus': 'Выравнивание'\r\n    },\r\n    'Exact fit': {\r\n        'eng': 'Exact fit',\r\n        'rus': 'Непропорционально вписать'\r\n    },\r\n    'Scale crop': {\r\n        'eng': 'Scale crop',\r\n        'rus': 'Пропорционально заполнить'\r\n    },\r\n    'No scale': {\r\n        'eng': 'No scale',\r\n        'rus': 'Заполнить без масштабирования'\r\n    },\r\n    'Maintain aspect': {\r\n        'eng': 'Maintain aspect',\r\n        'rus': 'Пропорционально вписать'\r\n    },\r\n    'Download': {\r\n        'eng': 'Download',\r\n        'rus': 'Скачать'\r\n    },\r\n    'Add text': {\r\n        'eng': 'Add text',\r\n        'rus': 'Добавить текст'\r\n    },\r\n    'Add header': {\r\n        'eng': 'Add header',\r\n        'rus': 'Заголовок'\r\n    },\r\n    'Add subheader': {\r\n        'eng': 'Add subheader',\r\n        'rus': 'Подзаголовок'\r\n    },\r\n    'Add body text': {\r\n        'eng': 'Add body text',\r\n        'rus': 'Обычный текст'\r\n    },\r\n    'Font size (px)': {\r\n        'eng': 'Font size (px)',\r\n        'rus': 'Размер шрифта (пикс)'\r\n    },\r\n    'Delete': {\r\n        'eng': 'Delete',\r\n        'rus': 'Удалить'\r\n    },\r\n    'Download created banner as': {\r\n        'eng': 'Download created banner as',\r\n        'rus': 'Загрузить созданный баннер как'\r\n    },\r\n    'Enter a file name:': {\r\n        'eng': 'Enter a file name:',\r\n        'rus': 'Введите имя файла:'\r\n    },\r\n    'Enter a link:': {\r\n        'eng': 'Enter a link:',\r\n        'rus': 'Введите ссылку:'\r\n    },\r\n    'Cancel': {\r\n        'eng': 'Cancel',\r\n        'rus': 'Закрыть'\r\n    },\r\n    'Copy': {\r\n        'eng': 'Copy',\r\n        'rus': 'Копировать'\r\n    },\r\n    'Quality of jpeg': {\r\n        'eng': 'Quality of jpeg',\r\n        'rus': 'Качество jpeg'\r\n    },\r\n};\r\n\r\n// const lang = useSelector(getLang);\r\n// translate(lang, '')\r\n\r\nexport const translate = (lang: LangType, phrase: string): string => {\r\n    return lang === 'rus' ? Lang[phrase].rus : Lang[phrase].eng\r\n};\r\n\r\ntype LangObjectType = {\r\n    [key: string]: {\r\n        'eng': string\r\n        'rus': string\r\n    }\r\n}\r\n\r\n","import Button from \"@material-ui/core/Button\";\r\nimport React, {ReactElement} from \"react\";\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {getLang} from \"../../Store/selectors/app-selectors\";\r\nimport {appAC} from \"../../Store/reducers/app-reducer\";\r\nimport {translate} from \"../../Utils/lang\";\r\n\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useHeaderLang = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const lang = useSelector(getLang);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleCloseRus = () => {\r\n        dispatch(appAC.setLang('rus'));\r\n        setAnchorEl(null);\r\n    };\r\n    const handleCloseEng = () => {\r\n        dispatch(appAC.setLang('eng'));\r\n        setAnchorEl(null);\r\n    };\r\n    const title = translate(lang, 'Change language');\r\n    const englishLabel = translate(lang, 'English')\r\n    return {classes, lang, anchorEl, title, englishLabel,\r\n        handleClick, handleClose, handleCloseRus,\r\n        handleCloseEng}\r\n}\r\n\r\n//======================= COMPONENT ===============================\r\nconst HeaderLang: React.FC<{}> = (): ReactElement => {\r\n    const {classes, lang, anchorEl, title, englishLabel,\r\n        handleClick, handleClose, handleCloseRus,\r\n        handleCloseEng} = useHeaderLang();\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={title} placement=\"bottom-start\"\r\n                     classes={{\r\n                         tooltip: classes.tooltip,\r\n                         arrow: classes.arrow\r\n                     }}>\r\n                <Button\r\n                    className={classes.button}\r\n                    startIcon={<LanguageIcon/>}\r\n                    endIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick}\r\n                >\r\n                    {englishLabel}\r\n                </Button>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleCloseEng}\r\n                          selected={lang === 'eng'}\r\n                >\r\n                    English\r\n                </MenuItem>\r\n                <MenuItem onClick={handleCloseRus}\r\n                          selected={lang === 'rus'}\r\n                >\r\n                    Русский\r\n                </MenuItem>\r\n            </Menu>\r\n        </>\r\n    )\r\n};\r\nexport default HeaderLang;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        color: 'white',\r\n        marginRight: 50,\r\n        textTransform: 'none'\r\n    },\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n})","import {BaseThunkType, GetActionsType} from \"../store\";\r\nimport {\r\n    BackgroundStyleColorType,\r\n    BackgroundStyleType, GradientStyleType,\r\n    MainSidebarItemEnum, ScaleModeType,\r\n    BackgroundTabIndexEnum,\r\n    SizeType,\r\n    AlignType, ImageTabIndexEnum, ImageType\r\n} from \"../../Types/types\";\r\nimport {AppActionsType} from \"./app-reducer\";\r\nimport {workspaceAC, WorkspaceActionsType} from \"./workspace-reducer\";\r\n\r\nconst initialState = {\r\n    size: { // размер баннера\r\n        width: null as null | number,\r\n        height: null as null | number,\r\n    },\r\n    mainSidebarItem: 0 as MainSidebarItemEnum, // пункт главной боковой панели\r\n    showSecondSidebar: true, // показать или скрыть вспомогательную боковую панель\r\n    secondarySidebarBackgroundTabIndex: 0 as BackgroundTabIndexEnum, // индекс активной вкладки на вспомогательной боковой панели 'Background'\r\n    backgroundStyle: 'color' as BackgroundStyleType,\r\n    useBorder: false, // есть ли рамка\r\n    borderColor: '#000', // цвет рамки\r\n    backgroundStyleColor: { // параметры монохромного заднего фона\r\n        color: '#fff'\r\n    } as BackgroundStyleColorType,\r\n    backgroundStyleGradient: { // параметры градиентного заднего фона\r\n        gradientStyle: 'horizontal' as GradientStyleType,\r\n        colorStart: '#000',\r\n        colorEnd: '#FFF'\r\n    },\r\n    backgroundStyleImage: {\r\n        images: [] as Array<ImageType>,\r\n        currentImage: null as null | ImageType,\r\n        scaleMode: 'Maintain aspect' as ScaleModeType,\r\n        align: 'center' as AlignType\r\n    },\r\n    imageTabIndex: 0 as ImageTabIndexEnum,\r\n    canvasUrl: { // урлы отрисованных канвасов для экспорта\r\n        background: null as null | string,\r\n        border: null as null | string,\r\n        text: null as null | string,\r\n    },\r\n    isLoading: false\r\n};\r\n//=================== REDUCER ===========================\r\nconst editorReducer = (state = initialState, action: EditorActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'EDITOR/SET_SIZE': {\r\n            return {...state, size: action.size}\r\n        }\r\n        case 'EDITOR/SET_MAIN_SIDEBAR_ITEM': {\r\n            return {...state, mainSidebarItem: action.mainSidebarItem}\r\n        }\r\n        case 'EDITOR/SET_SHOW_SECOND_SIDEBAR': {\r\n            return {...state, showSecondSidebar: action.showSecondSidebar}\r\n        }\r\n        case 'EDITOR/SET_SECONDARY_SIDEBAR_BACKGROUND_TAB_INDEX': {\r\n            return {...state, secondarySidebarBackgroundTabIndex: action.secondarySidebarBackgroundTabIndex}\r\n        }\r\n        case 'EDITOR/SET_BACKGROUND_STYLE': {\r\n            return {...state, backgroundStyle: action.backgroundStyle}\r\n        }\r\n        case 'EDITOR/SET_BACKGROUND_STYLE_COLOR': {\r\n            return {...state, backgroundStyleColor: action.backgroundStyleColor}\r\n        }\r\n        case 'EDITOR/SET_USE_BORDER': {\r\n            return {...state, useBorder: action.useBorder}\r\n        }\r\n        case 'EDITOR/SET_BORDER_COLOR': {\r\n            return {...state, borderColor: action.borderColor}\r\n        }\r\n        case 'EDITOR/SET_GRADIENT_STYLE': {\r\n            return {\r\n                ...state,\r\n                backgroundStyleGradient: {\r\n                    ...state.backgroundStyleGradient,\r\n                    gradientStyle: action.gradientStyle\r\n                }\r\n            }\r\n        }\r\n        case 'EDITOR/SET_COLOR_START': {\r\n            return {\r\n                ...state,\r\n                backgroundStyleGradient: {\r\n                    ...state.backgroundStyleGradient,\r\n                    colorStart: action.colorStart\r\n                }\r\n            }\r\n        }\r\n        case 'EDITOR/SET_COLOR_END': {\r\n            return {\r\n                ...state,\r\n                backgroundStyleGradient: {\r\n                    ...state.backgroundStyleGradient,\r\n                    colorEnd: action.colorEnd\r\n                }\r\n            }\r\n        }\r\n        case 'EDITOR/SET_REPLACE_COLOR': {\r\n            const colorStart = state.backgroundStyleGradient.colorStart;\r\n            const colorEnd = state.backgroundStyleGradient.colorEnd;\r\n            return {\r\n                ...state,\r\n                backgroundStyleGradient: {\r\n                    ...state.backgroundStyleGradient,\r\n                    colorEnd: colorStart,\r\n                    colorStart: colorEnd\r\n                }\r\n            }\r\n        }\r\n        case 'EDITOR/ADD_IMAGE': { // добавить и установить текущим\r\n            if (state.backgroundStyleImage.images.find(//\r\n                el => el.name === action.name\r\n            )) {\r\n                return state\r\n            } else {\r\n                const length = state.backgroundStyleImage.images.length\r\n                const id = length === 0 ? 1 : state.backgroundStyleImage.images[length - 1].id + 1;\r\n                return {\r\n                    ...state,\r\n                    backgroundStyleImage: {\r\n                        ...state.backgroundStyleImage,\r\n                        images: [\r\n                            ...state.backgroundStyleImage.images,\r\n                            {\r\n                                id: id,\r\n                                src: action.src,\r\n                                name: action.name\r\n                            }\r\n                        ],\r\n                        currentImage: {\r\n                            id: id,\r\n                            src: action.src,\r\n                            name: action.name\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case 'EDITOR/SET_CURRENT_IMAGE': {\r\n            const currentImage = state.backgroundStyleImage.images.find(el => el.id === action.id) as ImageType;\r\n            return {\r\n                ...state,\r\n                backgroundStyleImage: {\r\n                    ...state.backgroundStyleImage,\r\n                    currentImage: currentImage\r\n                }\r\n            }\r\n        }\r\n        case 'EDITOR/SET_IMAGE_TAB_INDEX': {\r\n            return {...state, imageTabIndex: action.imageTabIndex}\r\n        }\r\n        case 'EDITOR/SET_SCALE_MODE': {\r\n            return {\r\n                ...state,\r\n                backgroundStyleImage: {\r\n                    ...state.backgroundStyleImage,\r\n                    scaleMode: action.scaleMode\r\n                }\r\n            }\r\n        }\r\n        case 'EDITOR/SET_ALIGN': {\r\n            return {\r\n                ...state,\r\n                backgroundStyleImage: {\r\n                    ...state.backgroundStyleImage,\r\n                    align: action.align\r\n                }\r\n            }\r\n        }\r\n        case 'EDITOR/SET_CANVAS_URL': {\r\n            return {\r\n                ...state,\r\n                canvasUrl: {\r\n                    ...state.canvasUrl,\r\n                    [action.layer]: action.url\r\n                }\r\n            }\r\n        }\r\n        case 'EDITOR/SET_IS_LOADING': {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//=================== ACTION-CREATORS =====================\r\nexport const editorAC = {\r\n    setSize: (size: SizeType) => ({type: 'EDITOR/SET_SIZE', size} as const),\r\n    setMainSidebarItem: (mainSidebarItem: MainSidebarItemEnum) => ({\r\n        type: 'EDITOR/SET_MAIN_SIDEBAR_ITEM',\r\n        mainSidebarItem\r\n    } as const),\r\n    setShowSecondSidebar: (showSecondSidebar: boolean) => ({\r\n        type: 'EDITOR/SET_SHOW_SECOND_SIDEBAR',\r\n        showSecondSidebar\r\n    } as const),\r\n    setSecondarySidebarBackgroundTabIndex: (secondarySidebarBackgroundTabIndex: BackgroundTabIndexEnum) => ({\r\n        type: 'EDITOR/SET_SECONDARY_SIDEBAR_BACKGROUND_TAB_INDEX',\r\n        secondarySidebarBackgroundTabIndex\r\n    } as const),\r\n    setBackgroundStyle: (backgroundStyle: BackgroundStyleType) => ({\r\n        type: 'EDITOR/SET_BACKGROUND_STYLE',\r\n        backgroundStyle\r\n    } as const),\r\n    setBackgroundStyleColor: (backgroundStyleColor: BackgroundStyleColorType) => ({\r\n        type: 'EDITOR/SET_BACKGROUND_STYLE_COLOR',\r\n        backgroundStyleColor\r\n    } as const),\r\n    setUseBorder: (useBorder: boolean) => ({type: 'EDITOR/SET_USE_BORDER', useBorder} as const),\r\n    setBorderColor: (borderColor: string) => ({type: 'EDITOR/SET_BORDER_COLOR', borderColor} as const),\r\n    setGradientStyle: (gradientStyle: GradientStyleType) => ({\r\n        type: 'EDITOR/SET_GRADIENT_STYLE',\r\n        gradientStyle\r\n    } as const),\r\n    setColorStart: (colorStart: string) => ({\r\n        type: 'EDITOR/SET_COLOR_START',\r\n        colorStart\r\n    } as const),\r\n    setColorEnd: (colorEnd: string) => ({\r\n        type: 'EDITOR/SET_COLOR_END',\r\n        colorEnd\r\n    } as const),\r\n    replaceColor: () => ({type: 'EDITOR/SET_REPLACE_COLOR'} as const),\r\n    addImage: (src: string, name: string) => ({type: 'EDITOR/ADD_IMAGE', src, name} as const),\r\n    setImageTabIndex: (imageTabIndex: ImageTabIndexEnum) => ({\r\n        type: 'EDITOR/SET_IMAGE_TAB_INDEX',\r\n        imageTabIndex\r\n    } as const),\r\n    setScaleMode: (scaleMode: ScaleModeType) => ({type: 'EDITOR/SET_SCALE_MODE', scaleMode} as const),\r\n    setAlign: (align: AlignType) => ({type: 'EDITOR/SET_ALIGN', align} as const),\r\n    setCurrentImage: (id: number) => ({type: 'EDITOR/SET_CURRENT_IMAGE', id} as const),\r\n    setCanvasUrl: (layer: 'background' | 'border' | 'text', url: null |string) => ({\r\n        type: 'EDITOR/SET_CANVAS_URL',\r\n        layer,\r\n        url\r\n    } as const),\r\n    setIsLoading: (isLoading: boolean) => ({type: 'EDITOR/SET_IS_LOADING', isLoading} as const),\r\n};\r\nexport default editorReducer;\r\n\r\n//====================== THUNK-CREATORS =========================\r\nconst readUploadedFileAsUrl = (inputFile: File) => {\r\n    const reader = new FileReader();\r\n\r\n    return new Promise<null | string | ArrayBuffer>((resolve, reject) => {\r\n        reader.onerror = () => {\r\n            reader.abort();\r\n            reject(new DOMException(\"Problem parsing input file.\"));\r\n        };\r\n\r\n        reader.onload = () => {\r\n\r\n            resolve(reader.result);\r\n        };\r\n        reader.readAsDataURL(inputFile);\r\n    });\r\n};\r\n\r\nexport const loadImage = (file: File): ThunkType => async (dispatch) => {\r\n    try {\r\n        const src = await readUploadedFileAsUrl(file);\r\n        const name = file.name;\r\n\r\n        if (typeof src === 'string') {\r\n            dispatch(editorAC.addImage(src, name));\r\n            dispatch(editorAC.setBackgroundStyle('image'));\r\n            //dispatch(workspaceAC.setZoom(100));\r\n        }\r\n\r\n    } catch(e) {\r\n        console.log(e.message)\r\n    }\r\n\r\n}\r\n\r\n//============== TYPE ==================\r\nexport type InitialStateType = typeof initialState;\r\nexport type EditorActionsType = GetActionsType<typeof editorAC>;\r\ntype ThunkType = BaseThunkType<EditorActionsType | AppActionsType | WorkspaceActionsType>","import {DownloadCaseType, ZoomType} from \"../../Types/types\";\r\nimport {GetActionsType} from \"../store\";\r\n\r\nconst initialState = {\r\n    zoom: 100 as ZoomType, // масштаб рабочей области\r\n    downloadCase: 'PNG' as DownloadCaseType, // сохранить как\r\n    jpegQuality: 0.8, // качество jpeg изображения\r\n    refLeftPanel: null as null | React.MutableRefObject<null>,\r\n    isDownloadDialogOpen: false, // открыто или закрыто диалоговое окно сохранения баннера\r\n    fileName: 'my-banner',\r\n    fileNameFormIsValid: true,\r\n    link: 'test.com',\r\n    linkFormIsValid: true,\r\n};\r\n\r\n//=================== REDUCER ===========================\r\nconst workspaceReducer = (state = initialState, action: WorkspaceActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_ZOOM': {\r\n            return {...state, zoom: action.zoom}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_REF': {\r\n            return {...state, refLeftPanel: action.refLeftPanel}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_DOWNLOAD_CASE': {\r\n            return {...state, downloadCase: action.downloadCase}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_IS_DOWNLOAD_DIALOG_OPEN': {\r\n            return {...state, isDownloadDialogOpen: action.isDownloadDialogOpen}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_FILE_NAME': {\r\n            return {...state, fileName: action.fileName}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_LINK': {\r\n            return {...state, link: action.link}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_FILE_NAME_FORM_IS_VALID': {\r\n            return {...state, fileNameFormIsValid: action.fileNameFormIsValid}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_LINK_FORM_IS_VALID': {\r\n            return {...state, linkFormIsValid: action.linkFormIsValid}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_JPEG_QUALITY': {\r\n            return {...state, jpegQuality: action.jpegQuality}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default workspaceReducer;\r\n\r\n//=================== ACTION-CREATORS =====================\r\nexport const workspaceAC = {\r\n    setZoom: (zoom: ZoomType) => ({type: 'BANNER_CREATOR/WORKSPACE/SET_ZOOM', zoom} as const),\r\n    setRefLeftPanel: (refLeftPanel: null | React.MutableRefObject<null>) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_REF',\r\n        refLeftPanel\r\n    } as const),\r\n    setDownloadCase: (downloadCase: DownloadCaseType) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_DOWNLOAD_CASE',\r\n        downloadCase\r\n    } as const),\r\n    setIsDownloadDialogOpen: (isDownloadDialogOpen: boolean) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_IS_DOWNLOAD_DIALOG_OPEN',\r\n        isDownloadDialogOpen\r\n    } as const),\r\n    setFileName: (fileName: string) => ({type: 'BANNER_CREATOR/WORKSPACE/SET_FILE_NAME', fileName} as const),\r\n    setFileNameFormIsValid: (fileNameFormIsValid: boolean) => ({type: 'BANNER_CREATOR/WORKSPACE/SET_FILE_NAME_FORM_IS_VALID', fileNameFormIsValid} as const),\r\n    setJpegQuality: (jpegQuality: number) => ({type: 'BANNER_CREATOR/WORKSPACE/SET_JPEG_QUALITY', jpegQuality} as const),\r\n    setLink: (link: string) => ({type: 'BANNER_CREATOR/WORKSPACE/SET_LINK', link} as const),\r\n    setLinkFormIsValid: (linkFormIsValid: boolean) => ({type: 'BANNER_CREATOR/WORKSPACE/SET_LINK_FORM_IS_VALID', linkFormIsValid} as const),\r\n};\r\n\r\n//============== TYPE ==================\r\nexport type InitialStateType = typeof initialState;\r\nexport type WorkspaceActionsType = GetActionsType<typeof workspaceAC>;","import {elementType, TextType} from \"../../Types/types\";\r\nimport {GetActionsType} from \"../store\";\r\nimport {XYCoord} from \"react-dnd\";\r\n\r\n\r\nconst initialState = {\r\n    texts: [] as Array<TextType>,\r\n    selectedTextId: null as null | number, // id выделенного текста\r\n};\r\n\r\n//=================== REDUCER ===========================\r\nconst textReducer = (state = initialState, action: textActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'BANNER_CREATOR/TEXT/ADD_TEXT': {\r\n            const id = state.texts.length ? state.texts[state.texts.length-1].id + 1 : 1;\r\n            const content = action.element === 'header' ? 'Header' : action.element === 'subheader' ? 'Subheader' : 'Body text';\r\n            const fontSize = action.element === 'header' ? 32 : action.element === 'subheader' ? 24 : 16;\r\n            const top = action.element === 'header' ? 10 : action.element === 'subheader' ? 52 : 86;\r\n            return {\r\n                ...state,\r\n                texts: [\r\n                    ...state.texts,\r\n                    {\r\n                        id: id,\r\n                        content: content,\r\n                        position: {\r\n                            top: top,\r\n                            left: 10\r\n                        },\r\n                        fontSize: fontSize,\r\n                        fontStyle: 'normal',\r\n                        fontFamily: 'arial',\r\n                        color: '#000',\r\n                        lowerCase: false,\r\n                        upperCase: false,\r\n                        hover: false,\r\n                        selected: false,\r\n                        editParameters: false,\r\n                        editText: false,\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_HOVER': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                hover: action.hover\r\n                            })\r\n                        }\r\n\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_SELECTED': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                selected: action.selected\r\n                            })\r\n                        }\r\n\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_EDIT_PARAMETERS': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                editParameters: action.editParameters\r\n                            })\r\n                        }\r\n\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_EDIT_TEXT': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                editText: action.editText\r\n                            })\r\n                        }\r\n\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_FONT_SIZE': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                fontSize: action.fontSize\r\n                            })\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_FONT_STYLE': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                fontStyle: action.fontStyle\r\n                            })\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_POSITION': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                position: {\r\n                                    top: el.position.top + action.difference.y,\r\n                                    left: el.position.left + action.difference.x\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_COLOR': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                color: action.color\r\n                            })\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_LOWER_CASE': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                lowerCase: action.lowerCase\r\n                            })\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_UPPER_CASE': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                upperCase: action.upperCase\r\n                            })\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_CONTENT': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => {\r\n                        if (el.id !== action.id) {\r\n                            return el\r\n                        } else {\r\n                            return ({\r\n                                ...el,\r\n                                content: action.content\r\n                            })\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_SELECTED_TEXT_ID': {\r\n            return {\r\n                ...state, selectedTextId: action.selectedTextId\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/REMOVE_TEXT': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.filter(el => el.id !== action.id)\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/REMOVE_TEXT_ALL': {\r\n            return {\r\n                ...state, texts: []\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default textReducer;\r\n\r\n//=================== ACTION-CREATORS =====================\r\nexport const textAC = {\r\n    addText: (element: elementType) => ({type: 'BANNER_CREATOR/TEXT/ADD_TEXT', element} as const),\r\n    removeText: (id: number) => ({type: 'BANNER_CREATOR/TEXT/REMOVE_TEXT', id} as const),\r\n    removeTextAll: () => ({type: 'BANNER_CREATOR/TEXT/REMOVE_TEXT_ALL'} as const),\r\n    setHover: (id: number, hover: boolean) => ({type: 'BANNER_CREATOR/TEXT/SET_HOVER', id, hover} as const),\r\n    setSelected: (id: number, selected: boolean) => ({type: 'BANNER_CREATOR/TEXT/SET_SELECTED', id, selected} as const),\r\n    setFontSize: (id: number, fontSize: number) => ({type: 'BANNER_CREATOR/TEXT/SET_FONT_SIZE', id, fontSize} as const),\r\n    setFontStyle: (id: number, fontStyle: 'normal' | 'italic') => ({type: 'BANNER_CREATOR/TEXT/SET_FONT_STYLE', id, fontStyle} as const),\r\n    setLowerCase: (id: number, lowerCase: boolean) => ({type: 'BANNER_CREATOR/TEXT/SET_LOWER_CASE', id, lowerCase} as const),\r\n    setUpperCase: (id: number, upperCase: boolean) => ({type: 'BANNER_CREATOR/TEXT/SET_UPPER_CASE', id, upperCase} as const),\r\n    setPosition: (id: number, difference: XYCoord) => ({type: 'BANNER_CREATOR/TEXT/SET_POSITION', id, difference} as const),\r\n    setColor: (id: number, color: string) => ({type: 'BANNER_CREATOR/TEXT/SET_COLOR', id, color} as const),\r\n    setContent: (id: number, content: string) => ({type: 'BANNER_CREATOR/TEXT/SET_CONTENT', id, content} as const),\r\n    setEditParameters: (id: number, editParameters: boolean) => ({type: 'BANNER_CREATOR/TEXT/SET_EDIT_PARAMETERS', id, editParameters} as const),\r\n    setEditText: (id: number, editText: boolean) => ({type: 'BANNER_CREATOR/TEXT/SET_EDIT_TEXT', id, editText} as const),\r\n    setSelectedTextId: (selectedTextId: number) => ({type: 'BANNER_CREATOR/TEXT/SET_SELECTED_TEXT_ID', selectedTextId} as const),\r\n};\r\n\r\n//============== TYPE ==================\r\nexport type InitialStateType = typeof initialState;\r\nexport type textActionsType = GetActionsType<typeof textAC>;","import React, {ReactElement} from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport HeaderLang from \"./HeaderLang\";\r\nimport {translate} from \"../../Utils/lang\";\r\nimport {getLang} from \"../../Store/selectors/app-selectors\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {editorAC} from \"../../Store/reducers/editor-reducer\";\r\nimport {workspaceAC} from \"../../Store/reducers/workspace-reducer\";\r\nimport {textAC} from \"../../Store/reducers/text-reducer\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useHeader = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const logo = translate(lang, 'Banner creator');\r\n    const createNewLabel = translate(lang, 'Create new');\r\n    const dispatch = useDispatch();\r\n    const onCreateNewHandler = () => {\r\n        dispatch(editorAC.setSize({\r\n            width: null,\r\n            height: null\r\n        }));\r\n        dispatch(editorAC.setBackgroundStyle('color'));\r\n        dispatch(editorAC.setBackgroundStyleColor({color: '#FFF'}));\r\n        dispatch(editorAC.setUseBorder(false));\r\n        dispatch(workspaceAC.setZoom(100));\r\n        dispatch(textAC.removeTextAll());\r\n        dispatch(editorAC.setMainSidebarItem(0));\r\n        dispatch(editorAC.setSecondarySidebarBackgroundTabIndex(0));\r\n        dispatch(editorAC.setImageTabIndex(0));\r\n        dispatch(editorAC.setBorderColor('#000'));\r\n    };\r\n    return {\r\n        classes, logo, createNewLabel, onCreateNewHandler\r\n    }\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst Header: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, logo, createNewLabel, onCreateNewHandler\r\n    } = useHeader();\r\n\r\n    return (\r\n        <div className={classes.header}>\r\n            <Toolbar className={classes.toolBar}>\r\n                <Typography variant=\"h6\" noWrap className={classes.logo}>\r\n                    {logo}\r\n                </Typography>\r\n                <HeaderLang/>\r\n                <Button color=\"inherit\"\r\n                        variant='contained'\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.button}\r\n                        onClick={onCreateNewHandler}\r\n                        component={RouterLink}\r\n                        to='/'>\r\n                    {createNewLabel}\r\n                </Button>\r\n            </Toolbar>\r\n        </div>\r\n    );\r\n};\r\nexport default Header;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        backgroundColor: brown[900],\r\n        height: 64,\r\n        zIndex: 100\r\n    },\r\n    toolBar: {\r\n        maxWidth: 1000,\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: '0 auto',\r\n        boxSizing: 'border-box',\r\n        padding: '0 10px',\r\n    },\r\n    logo: {\r\n        flexGrow: 1,\r\n        color: 'white'\r\n    },\r\n    button: {\r\n        textTransform: 'none'\r\n    },\r\n});\r\n\r\n\r\n","import React, {ReactElement} from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../Utils/lang\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst usePageNotFound = () => {\r\n    const lang = useSelector(getLang);\r\n    const pageNotFoundLabel = translate(lang, 'Page not found')\r\n    return {pageNotFoundLabel}\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst PageNotFound: React.FC<{}> = (): ReactElement => {\r\n    const {pageNotFoundLabel} = usePageNotFound();\r\n\r\n    return (\r\n        <Typography align='center'\r\n                    color='secondary'\r\n                    variant='h6'>\r\n            {pageNotFoundLabel}\r\n        </Typography>\r\n    )\r\n\r\n};\r\nexport default PageNotFound;\r\n\r\n\r\n","import React from \"react\";\r\nimport {ReactElement} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\n\r\n//================= COMPONENTS ========================\r\nconst CreateNewItemGraph: React.FC<PropsType> = (props): ReactElement => {\r\n    const {width, height} = props;\r\n    let w = 130;\r\n    let h = height * w / width;\r\n    if (h > 68) {\r\n        h = 68;\r\n        w = h * width / height;\r\n    }\r\n    const useStyles = makeStyles({\r\n        graph: {\r\n            width: w,\r\n            height: h,\r\n            border: '3px solid darkblue',\r\n            boxSizing: 'border-box',\r\n            backgroundColor: indigo[400]\r\n        },\r\n    });\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.graph}/>\r\n    )\r\n};\r\nexport default CreateNewItemGraph;\r\n\r\n//============== TYPE ====================\r\ntype PropsType = {\r\n    width: number\r\n    height: number\r\n}","import React from \"react\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {editorAC} from \"../../../Store/reducers/editor-reducer\";\r\nimport CreateNewItemGraph from \"./CreateNewItemGraph\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport {appAC} from \"../../../Store/reducers/app-reducer\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useCreateNewItem = (width: number, height: number) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setSize({width, height}));\r\n        dispatch(appAC.setIsCreated(true));\r\n    };\r\n    return {\r\n        classes, onClickHandler\r\n    }\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst CreateNewItem: React.FC<PropsType> = (props) => {\r\n    const {sizeLabel, width, height} = props;\r\n    const {\r\n        classes, onClickHandler\r\n    } = useCreateNewItem(width, height);\r\n\r\n    return (\r\n        <Card className={classes.root} elevation={6}>\r\n            <CardActionArea component={RouterLink}\r\n                            className={classes.cardActionArea}\r\n                            onClick={onClickHandler}\r\n                            to='/editor'>\r\n                <CardContent className={classes.cardContent}>\r\n                    <div className={classes.graph}>\r\n                        <CreateNewItemGraph width={width} height={height}/>\r\n                    </div>\r\n                    <div className={classes.description}>\r\n                        <Typography gutterBottom variant=\"subtitle2\" component=\"h6\" align='center'>\r\n                            {sizeLabel}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body2\" component=\"h6\" align='center'>\r\n                            {`${width} x ${height} px`}\r\n                        </Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n};\r\nexport default CreateNewItem;\r\n\r\n//=================== TYPE ==============\r\ntype PropsType = {\r\n    sizeLabel: string\r\n    width: number\r\n    height: number\r\n}\r\n\r\n//================= STYLES ================\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 150,\r\n        height: 150,\r\n        margin: 5,\r\n        '&:hover': {\r\n            backgroundColor: grey[200]\r\n        }\r\n    },\r\n    cardActionArea: {\r\n        height: '100%'\r\n    },\r\n    cardContent: {\r\n        padding: 0,\r\n        '&:last-child': {\r\n            //paddingBottom: 5\r\n        },\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    graph: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    description: {\r\n        padding: 5,\r\n    }\r\n});","import {OutlinedInputProps, TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst RenderTextField: React.FC<PropsType> = (props) => {\r\n    const {icon, label, input, meta: {touched, invalid, error}, classes, ...custom} = props;\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            {icon &&\r\n            <div className={styles.iconLeft}>\r\n                {icon}\r\n            </div>}\r\n            <TextField\r\n                InputProps={classes ? {classes} as Partial<OutlinedInputProps> : null}\r\n                variant=\"outlined\"\r\n                label={label}\r\n                placeholder={label}\r\n                error={touched && invalid}\r\n                helperText={touched && error}\r\n                {...input}\r\n                {...custom}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RenderTextField;\r\n\r\n//======================= TYPES =====================\r\ntype PropsType = {\r\n    icon: React.ReactElement\r\n    label: string\r\n    input: any\r\n    meta: {\r\n        touched: boolean\r\n        invalid: boolean\r\n        error: string\r\n    }\r\n    classes?: any\r\n}\r\n//========================= STYLES ===================\r\nconst useStyles = makeStyles({\r\n        root: {\r\n            position: 'relative',\r\n            width: '100%',\r\n            '& .MuiFormLabel-root': {\r\n                backgroundColor: 'white',\r\n            }\r\n        },\r\n        label: {\r\n            backgroundColor: 'white'\r\n        },\r\n        iconLeft: {\r\n            position: 'absolute',\r\n            left: -5,\r\n            top: '50%',\r\n            transform: 'translate(-100%, -50%)'\r\n        }\r\n    }\r\n);\r\n\r\n\r\n","import {StateType} from \"../store\";\r\nexport const getSize = (state: StateType) => state.editor.size;\r\nexport const getMainSidebarItem = (state: StateType) => state.editor.mainSidebarItem;\r\nexport const getShowSecondSidebar = (state: StateType) => state.editor.showSecondSidebar;\r\nexport const getSecondarySidebarBackgroundTabIndex = (state: StateType) => state.editor.secondarySidebarBackgroundTabIndex;\r\nexport const getBackgroundStyle = (state: StateType) => state.editor.backgroundStyle;\r\nexport const getBackgroundStyleColor = (state: StateType) => state.editor.backgroundStyleColor;\r\nexport const getUseBorder = (state: StateType) => state.editor.useBorder;\r\nexport const getBorderColor = (state: StateType) => state.editor.borderColor;\r\nexport const getGradientStyle = (state: StateType) => state.editor.backgroundStyleGradient.gradientStyle;\r\nexport const getColorStart = (state: StateType) => state.editor.backgroundStyleGradient.colorStart;\r\nexport const getColorEnd = (state: StateType) => state.editor.backgroundStyleGradient.colorEnd;\r\nexport const getImageTabIndex = (state: StateType) => state.editor.imageTabIndex;\r\nexport const getImages = (state: StateType) => state.editor.backgroundStyleImage.images;\r\nexport const getCurrentImage = (state: StateType) => state.editor.backgroundStyleImage.currentImage;\r\nexport const getScaleMode = (state: StateType) => state.editor.backgroundStyleImage.scaleMode;\r\nexport const getAlign = (state: StateType) => state.editor.backgroundStyleImage.align;\r\nexport const getCanvasUrl = (state: StateType) => state.editor.canvasUrl;\r\nexport const getIsLoading = (state: StateType) => state.editor.isLoading;","import React, {ReactElement, useState} from \"react\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../Utils/lang\";\r\nimport {reduxForm, Field, InjectedFormProps, submit} from \"redux-form\";\r\nimport RenderTextField from \"../../common/RenderTextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {editorAC} from \"../../../Store/reducers/editor-reducer\";\r\nimport {getSize} from \"../../../Store/selectors/editor-selectors\";\r\nimport {appAC} from \"../../../Store/reducers/app-reducer\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useForm = () => {\r\n    const lang = useSelector(getLang);\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        setTimeout(() => dispatch(submit('size')));\r\n    };\r\n    const widthLabel = translate(lang, 'Width');\r\n    const heightLabel = translate(lang, 'Height');\r\n    const classes = useStylesForm();\r\n    const parseHandler = (value: string) => {\r\n        return value.replace(/\\D/ig, '')\r\n    };\r\n    return {\r\n        onChangeHandler, widthLabel, heightLabel,\r\n        classes, parseHandler\r\n    }\r\n}\r\n\r\n//========================== FORM =======================================\r\nconst Form: React.FC<FormPropsType> = ({handleSubmit}) => {\r\n    const {\r\n        onChangeHandler, widthLabel, heightLabel,\r\n        classes, parseHandler\r\n    } = useForm();\r\n    return (\r\n        <form onSubmit={handleSubmit}\r\n              className={classes.form}\r\n        >\r\n            <div>\r\n                <Field name='width'\r\n                       className={classes.field1}\r\n                       component={RenderTextField}\r\n                       parse={parseHandler}\r\n                       label={widthLabel}\r\n                       size='small'\r\n                       onChange={onChangeHandler}\r\n                />\r\n                <Field name='height'\r\n                       className={classes.field2}\r\n                       component={RenderTextField}\r\n                       label={heightLabel}\r\n                       size='small'\r\n                       onChange={onChangeHandler}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n//================================== REDUX-FORM ======================================\r\nconst ReduxForm = reduxForm<FormParamsType, FormOwnPropsType>({\r\n    form: 'size',\r\n})(Form);\r\n\r\n//======================== CUSTOM HOOK =========================\r\nconst useCreateNewCustom = () => {\r\n    const classes = useStyles();\r\n    const [viewForm, setViewForm] = useState(false);\r\n    const onClickHandler = () => {\r\n        setViewForm(true);\r\n    };\r\n    const dispatch = useDispatch();\r\n    const onSubmitHandler = (value: FormParamsType) => {\r\n        dispatch(editorAC.setSize({\r\n            width: +value.width,\r\n            height: +value.height\r\n        }));\r\n        dispatch(appAC.setIsCreated(true));\r\n    };\r\n    const lang = useSelector(getLang);\r\n    const buttonLabel = translate(lang, 'Create');\r\n    const customSizeLabel = translate(lang, 'Custom Size');\r\n    const size = useSelector(getSize);\r\n    const disabled = !(size && size.width && size.height)\r\n    return {\r\n        classes, viewForm, onClickHandler, disabled,\r\n        onSubmitHandler, buttonLabel, customSizeLabel\r\n    }\r\n};\r\n\r\n//========================= COMPONENT =======================\r\nconst CreateNewCustom: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, viewForm, onClickHandler, disabled,\r\n        onSubmitHandler, buttonLabel, customSizeLabel\r\n    } = useCreateNewCustom();\r\n\r\n    return (\r\n        <Card className={classes.root} elevation={6}>\r\n            {\r\n                !viewForm\r\n                    ? <CardActionArea\r\n                        className={classes.cardActionArea}\r\n                        component='button'\r\n                        onClick={onClickHandler}\r\n                    >\r\n                        <div className={classes.graph}>\r\n                            <AddIcon className={classes.icon}/>\r\n                        </div>\r\n                        <div className={classes.description}>\r\n                            <Typography gutterBottom variant=\"subtitle2\" component=\"h6\" align='center'>\r\n                                {customSizeLabel}\r\n                            </Typography>\r\n                        </div>\r\n                    </CardActionArea>\r\n                    : <div className={classes.formWrapper}>\r\n                        <ReduxForm onSubmit={onSubmitHandler}/>\r\n                        <div className={classes.buttonWrapper}>\r\n                            <Button className={classes.button}\r\n                                    disabled={disabled}\r\n                                    component={RouterLink}\r\n                                    to='/editor'\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    fullWidth\r\n                            >\r\n                                {buttonLabel}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </Card>\r\n    )\r\n};\r\nexport default CreateNewCustom;\r\n\r\n//=================== TYPE ==============\r\ntype FormPropsType =\r\n    InjectedFormProps<FormParamsType, FormOwnPropsType>\r\n    & FormOwnPropsType;\r\ntype FormParamsType = {\r\n    width: string\r\n    height: string\r\n}\r\ntype FormOwnPropsType = {};\r\n\r\n//================= STYLES ================\r\nconst useStylesForm = makeStyles({\r\n    field1: {\r\n        backgroundColor: 'white',\r\n        marginBottom: 10,\r\n    },\r\n    field2: {\r\n        backgroundColor: 'white',\r\n    },\r\n    form: {\r\n        padding: '10px 10px 0 10px',\r\n    }\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 150,\r\n        height: 150,\r\n        margin: 5,\r\n    },\r\n    cardActionArea: {\r\n        height: '100%',\r\n        //display: 'flex',\r\n        //flexDirection: 'column',\r\n        //justifyContent: 'flex-end',\r\n        position: 'relative'\r\n    },\r\n    icon: {\r\n        transform: 'scale(3)'\r\n    },\r\n    graph: {\r\n        width: '100%',\r\n        //flexGrow: 1,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 110\r\n    },\r\n    description: {\r\n        padding: 5,\r\n        height: 40,\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0\r\n    },\r\n    formWrapper: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    buttonWrapper: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: '0 10px'\r\n    },\r\n    button: {\r\n        textTransform: 'none'\r\n    }\r\n});","import React, {ReactElement} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport CreateNewItem from \"./CreateNewItem\";\r\nimport CreateNewCustom from \"./CreateNewCustom\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useCreateNew = () => {\r\n    const classes = useStyles();\r\n    return {\r\n        classes,\r\n    }\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst CreateNew: React.FC<{}> = (): ReactElement => {\r\n    const {classes} = useCreateNew();\r\n\r\n    const sizes = [\r\n        {\r\n            label: 'Large Rectangle',\r\n            width: 336,\r\n            height: 280\r\n        },\r\n        {\r\n            label: 'Medium Rectangle',\r\n            width: 300,\r\n            height: 250\r\n        },\r\n        {\r\n            label: 'Leaderboard',\r\n            width: 728,\r\n            height: 90\r\n        },\r\n        {\r\n            label: 'Large Mobile',\r\n            width: 320,\r\n            height: 100\r\n        },\r\n        {\r\n            label: 'Main Banner',\r\n            width: 468,\r\n            height: 60\r\n        },\r\n        {\r\n            label: 'Half Page',\r\n            width: 300,\r\n            height: 600\r\n        },\r\n        {\r\n            label: 'Square',\r\n            width: 250,\r\n            height: 250\r\n        },\r\n        {\r\n            label: 'Half Banner',\r\n            width: 234,\r\n            height: 60\r\n        },\r\n        {\r\n            label: 'Vertical Banner',\r\n            width: 120,\r\n            height: 240\r\n        },\r\n        {\r\n            label: 'Small Rectangle',\r\n            width: 180,\r\n            height: 150\r\n        },\r\n        {\r\n            label: 'Mobile Banner',\r\n            width: 300,\r\n            height: 50\r\n        },\r\n    ];\r\n    const CreateNewElements = sizes.map(\r\n        (el, index) => <CreateNewItem key={index}\r\n                                      sizeLabel={el.label}\r\n                                      width={el.width}\r\n                                      height={el.height}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={classes.createNew}>\r\n            <div className={classes.wrapper}>\r\n                <CreateNewCustom/>\r\n                {CreateNewElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreateNew\r\n\r\n//================= STYLES ================\r\nconst useStyles = makeStyles({\r\n    createNew: {\r\n        maxWidth: 1000,\r\n        width: '100%',\r\n        margin: '0 auto',\r\n        height: 'calc(100vh - 64px)',\r\n        padding: 10\r\n    },\r\n    wrapper: {\r\n        maxHeight: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    }\r\n});","import React, {ReactElement} from \"react\";\r\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\r\nimport TextFieldsSharpIcon from '@material-ui/icons/TextFieldsSharp';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../Store/selectors/app-selectors\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport {getMainSidebarItem} from \"../../../../Store/selectors/editor-selectors\";\r\nimport {editorAC} from \"../../../../Store/reducers/editor-reducer\";\r\nimport {translate} from \"../../../../Utils/lang\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useMainSidebar = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const labels = [];\r\n    labels[0] = translate(lang, 'Background');\r\n    labels[1] = translate(lang, 'Text');\r\n    const mainSidebarItem = useSelector(getMainSidebarItem);\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setShowSecondSidebar(true))\r\n    };\r\n    const changeHandler = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        dispatch(editorAC.setMainSidebarItem(newValue));\r\n    };\r\n    return {\r\n        classes, mainSidebarItem, onClickHandler,\r\n        changeHandler, labels\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst MainSidebar: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, mainSidebarItem, onClickHandler,\r\n        changeHandler, labels\r\n    } = useMainSidebar();\r\n    const icons = [\r\n        <ViewComfyIcon/>,\r\n        <TextFieldsSharpIcon/>\r\n    ];\r\n\r\n    return (\r\n        <Tabs\r\n            classes={{\r\n                indicator: classes.indicator\r\n            }}\r\n            orientation=\"vertical\"\r\n            value={mainSidebarItem}\r\n            onChange={changeHandler}\r\n        >\r\n            <Tab\r\n                label={labels[0]}\r\n                onClick={onClickHandler}\r\n                icon={icons[0]}\r\n                classes={{\r\n                    wrapper: classes.wrapper,\r\n                    selected: classes.selected,\r\n                    root: classes.tabRoot,\r\n                    labelIcon: classes.labelIcon\r\n                }}/>\r\n            <Tab label={labels[1]}\r\n                 onClick={onClickHandler}\r\n                 icon={icons[1]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                     labelIcon: classes.labelIcon\r\n                 }}/>\r\n        </Tabs>\r\n    )\r\n};\r\nexport default MainSidebar;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    cardContent: {\r\n        paddingLeft: 5,\r\n        paddingTop: 5,\r\n        paddingRight: 5,\r\n        '&:last-child': {\r\n            paddingBottom: 5\r\n        }\r\n    },\r\n    indicator: {\r\n        width: 3,\r\n        left: 'auto',\r\n        right: 0,\r\n        backgroundColor: 'white'\r\n    },\r\n    wrapper: {\r\n        fontSize: 12,\r\n        textTransform: 'none',\r\n        '& > *:first-child': {\r\n            marginBottom: '0!important'\r\n        }\r\n    },\r\n    selected: {\r\n        color: grey[50],\r\n        backgroundColor: brown[600]\r\n    },\r\n    tabRoot: {\r\n        padding: 0,\r\n        marginLeft: 0,\r\n        color: 'white',\r\n        maxWidth: '100%',\r\n        minWidth: '100%',\r\n    },\r\n    labelIcon: {\r\n        minHeight: 50,\r\n    }\r\n}));","export const mainSidebarWidth = 80;\r\nexport const secondSidebarWidth = 250;\r\nexport const editorToolbarHeight = 50;","import ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../Utils/lang\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {getShowSecondSidebar} from \"../../../../Store/selectors/editor-selectors\";\r\nimport {editorAC} from \"../../../../Store/reducers/editor-reducer\";\r\n\r\n//================= CUSTOM HOOK =====================\r\nconst useSecondarySidebarTitle = (title: string) => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const dispatch = useDispatch();\r\n    const showSecondSidebar = useSelector(getShowSecondSidebar);\r\n    const titleLabel = translate(lang, title);\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setShowSecondSidebar(!showSecondSidebar));\r\n    };\r\n    return {\r\n        classes, titleLabel, onClickHandler\r\n    }\r\n};\r\n\r\n//================= COMPONENT ======================\r\nconst SecondarySidebarTitle: React.FC<PropsType> = ({title})  => {\r\n    const {\r\n        classes, titleLabel, onClickHandler\r\n    } = useSecondarySidebarTitle(title);\r\n\r\n    return (\r\n        <div className={classes.title}>\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n            >\r\n                {titleLabel}\r\n            </Typography>\r\n            <IconButton onClick={onClickHandler}\r\n                        className={classes.icon}\r\n                        size='small'\r\n            >\r\n                <ArrowBackIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n};\r\nexport default SecondarySidebarTitle;\r\n\r\n//============= TYPE ===============\r\ntype PropsType = {\r\n    title: string\r\n};\r\n\r\n//============ STYLES =================\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingLeft: 10\r\n    },\r\n    typography: {\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        color: 'white'\r\n    }\r\n});","import {Tabs, Theme} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSecondarySidebarBackgroundTabIndex} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport React from \"react\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\n\r\n//====================== CUSTOM HOOK ====================\r\nconst useSecondarySidebarBackgroundTabs = () => {\r\n    const secondarySidebarBackgroundTabIndex = useSelector(getSecondarySidebarBackgroundTabIndex)\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        dispatch(editorAC.setSecondarySidebarBackgroundTabIndex(newValue))\r\n    };\r\n    const lang = useSelector(getLang);\r\n    const labels = [];\r\n    labels[0] = translate(lang, 'Color');\r\n    labels[1] = translate(lang, 'Gradient');\r\n    labels[2] = translate(lang, 'Image');\r\n    const classes = useStyles();\r\n    return {\r\n        secondarySidebarBackgroundTabIndex,\r\n        onChangeHandler, classes, labels\r\n    }\r\n}\r\n\r\n//======================= COMPONENT ====================\r\nconst BackgroundTabs: React.FC<{}> = () => {\r\n    const {\r\n        secondarySidebarBackgroundTabIndex,\r\n        onChangeHandler, classes, labels\r\n    } = useSecondarySidebarBackgroundTabs()\r\n    return (\r\n        <Tabs\r\n            value={secondarySidebarBackgroundTabIndex}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={onChangeHandler}\r\n            classes={{\r\n                indicator: classes.indicator\r\n            }}\r\n            className={classes.tabs}\r\n        >\r\n            <Tab label={labels[0]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n            <Tab label={labels[1]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n            <Tab label={labels[2]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n        </Tabs>\r\n    )\r\n};\r\nexport default BackgroundTabs;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    tabs: {\r\n        margin: '0 10px',\r\n        minHeight: 0,\r\n        borderBottom: `1px solid #aaa`,\r\n        '& .MuiTabs-flexContainer': {\r\n            justifyContent: 'space-between'\r\n        }\r\n    },\r\n    indicator: {\r\n        height: 3,\r\n        backgroundColor: 'white'\r\n    },\r\n    wrapper: {\r\n        fontSize: 12,\r\n        color: 'white',\r\n        textTransform: 'none',\r\n        '& > *:first-child': {\r\n            marginBottom: '0!important'\r\n        }\r\n    },\r\n    selected: {\r\n        color: 'white'\r\n    },\r\n    tabRoot: {\r\n        flexGrow: 1,\r\n        marginLeft: 0,\r\n        color: 'white',\r\n        maxWidth: 'auto',\r\n        minWidth: 'auto',\r\n        padding: 5,\r\n        minHeight: 0\r\n    },\r\n}));","import React, {ReactElement} from \"react\";\r\nimport styled from 'styled-components';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst Div = styled.div`\r\n  background: ${(props) => props.color};\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useSetColorButton = (color: string) => {\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setBackgroundStyleColor({color}));\r\n        dispatch(editorAC.setBackgroundStyle('color'));\r\n    };\r\n    const classes = useStyles();\r\n    return {\r\n        onClickHandler, classes\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst SetColorButton: React.FC<PropsType> = (props): ReactElement => {\r\n    const { color, colorTitle } = props;\r\n    const {\r\n        onClickHandler, classes\r\n    } = useSetColorButton(color);\r\n    return (\r\n        <Tooltip title={colorTitle} placement=\"right\" arrow\r\n                 classes={{\r\n                     tooltip: classes.tooltip,\r\n                     arrow: classes.arrow\r\n                 }}>\r\n            <Div color={color}\r\n                 onClick={onClickHandler}\r\n            />\r\n        </Tooltip>\r\n    )\r\n};\r\nexport default SetColorButton;\r\n\r\n//========================== TYPE =======================\r\ntype PropsType = {\r\n    color: string\r\n    colorTitle: string\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n});\r\n","import React, {useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {HexColorPicker} from \"react-colorful\";\r\nimport './../../css/styles.css'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styled from \"styled-components\";\r\n\r\n//===================== CUSTOM HOOK ===================\r\nconst useSelectColorPopover = (\r\n    onPickColor: (color: string) => void,\r\n    handleClose: () => void,\r\n    propsColor: string\r\n) => {\r\n    const [color, setColor] = useState(propsColor);\r\n    const onAcceptHandler = () => {\r\n        onPickColor(color);\r\n        handleClose();\r\n    };\r\n    const classes = useStyles();\r\n    return {\r\n        color, setColor,\r\n        onAcceptHandler, classes\r\n    }\r\n};\r\n\r\n//==================== STYLED =========================\r\nconst Div = styled.div`\r\n        width:  ${(props: {width: number}) => `${props.width}px`};\r\n        padding: 15px;\r\n`;\r\n\r\n//==================== COMPONENT ======================\r\nconst SelectColorPopover: React.FC<PropsType> = (props) => {\r\n    const {header, onPickColor, handleClose, propsColor, width = 230} = props;\r\n    const {\r\n        color, setColor,\r\n        onAcceptHandler, classes\r\n    } = useSelectColorPopover(onPickColor, handleClose, propsColor);\r\n    return (\r\n        <Div width={width}>\r\n            <Typography variant='subtitle2' className={classes.title}>\r\n                {header}\r\n            </Typography>\r\n\r\n            <HexColorPicker color={color} onChange={setColor}/>\r\n            <Button variant='contained'\r\n                    color='primary'\r\n                    fullWidth\r\n                    className={classes.button}\r\n                    onClick={onAcceptHandler}\r\n            >\r\n                Select\r\n            </Button>\r\n\r\n        </Div>\r\n    )\r\n};\r\nexport default SelectColorPopover;\r\n\r\n//=========================== TYPE =======================\r\ntype PropsType = {\r\n    header: string\r\n    onPickColor: (color: string) => void\r\n    handleClose: () => void\r\n    propsColor: string\r\n    width?: number\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        marginTop: 10,\r\n        textTransform: 'none'\r\n    },\r\n    title: {\r\n        marginBottom: 10\r\n    }\r\n});","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\nimport SelectColorPopover from \"../../../../../common/SelectColorPopover\";\r\nimport Popover from \"@material-ui/core/Popover/Popover\";\r\n\r\nconst Div = styled.div`\r\n  background: #fff;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content:center;\r\n  align-items: center;\r\n`;\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useSelectColorButton = () => {\r\n    const lang = useSelector(getLang);\r\n    const title = translate(lang, 'Select color');\r\n    const header = translate(lang, 'Select background color');\r\n    const dispatch = useDispatch();\r\n    const onPickColorHandler = (color: string) => {\r\n        dispatch(editorAC.setBackgroundStyleColor({color}))\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const classes = useStyles();\r\n    return {\r\n        title, onPickColorHandler, header,\r\n        onClickHandler, open, anchorEl,\r\n        handleClose, classes\r\n    }\r\n}\r\n\r\n//============== COMPONENT =================\r\nconst SelectColorButton: React.FC<{}> = () => {\r\n    const {\r\n        title, onPickColorHandler, header,\r\n        onClickHandler, open, anchorEl,\r\n        handleClose, classes\r\n    } = useSelectColorButton();\r\n    return (\r\n        <>\r\n            <Tooltip title={title} placement=\"right\" arrow\r\n                     classes={{\r\n                         tooltip: classes.tooltip,\r\n                         arrow: classes.arrow\r\n                     }}>\r\n                <Div onClick={onClickHandler}\r\n                >\r\n                    <AddIcon fontSize='large'/>\r\n                </Div>\r\n            </Tooltip>\r\n            <Popover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <SelectColorPopover header={header}\r\n                                    onPickColor={onPickColorHandler}\r\n                                    handleClose={handleClose}\r\n                                    propsColor='#FFF'\r\n                />\r\n            </Popover>\r\n\r\n        </>\r\n    )\r\n};\r\nexport default SelectColorButton;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","export type LangType = 'eng' | 'rus'\r\nexport type SizeType = {\r\n    width: number | null\r\n    height: number | null\r\n}\r\nexport enum MainSidebarItemEnum {\r\n    background = 0,\r\n    text = 1,\r\n}\r\nexport type BackgroundStyleType = 'color' | 'gradient' | 'texture' | 'image'\r\nexport enum BackgroundTabIndexEnum {\r\n    color = 0,\r\n    gradient = 1,\r\n    image = 2\r\n}\r\nexport type BackgroundStyleColorType = {\r\n    color: string\r\n}\r\nexport type GradientStyleType = 'horizontal' | 'vertical' | 'radial'\r\nexport type ScaleModeType = 'Exact fit' | 'Scale crop' | 'No scale' | 'Maintain aspect'\r\nexport type AlignType = 'left-top' | 'center-top' | 'right-top' |\r\n    'left-center' | 'center' | 'right-center' |\r\n    'left-bottom' | 'center-bottom' | 'right-bottom'\r\nexport enum ImageTabIndexEnum {\r\n    myImage = 0,\r\n    imageSetting = 1\r\n}\r\nexport type ImageType = {\r\n    id: number\r\n    src: string\r\n    name: string\r\n}\r\nexport type ZoomType = 10 | 25 | 50 | 75 | 100 | 150 | 200 | 300 | 400\r\nexport type DownloadCaseType = 'PNG' | 'JPEG' | 'HTML'\r\nexport type elementType = 'header' | 'subheader' | 'body'\r\nexport type TextType = {\r\n    id: number\r\n    content: string\r\n    position: {\r\n        top: number\r\n        left: number\r\n    }\r\n    fontSize: number\r\n    fontStyle: 'normal' | 'italic'\r\n    fontFamily: string\r\n    color: string\r\n    lowerCase: boolean\r\n    upperCase: boolean\r\n    hover: boolean\r\n    selected: boolean\r\n    editParameters: boolean\r\n    editText: boolean\r\n\r\n}","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React, {ReactElement} from \"react\";\r\nimport SetColorButton from \"./SetColorButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport SelectColorButton from \"./SelectColorButton\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useColor = () => {\r\n    const classes = useStyles();\r\n    const colors = [\r\n        {color: '#f44336', colorTitle: 'Red'},\r\n        {color: '#e91e63', colorTitle: 'Pink'},\r\n        {color: '#9c27b0', colorTitle: 'Purple'},\r\n        {color: '#673ab7', colorTitle: 'Deep Purple'},\r\n        {color: '#3f51b5', colorTitle: 'Indigo'},\r\n        {color: '#2196f3', colorTitle: 'Blue'},\r\n        {color: '#03a9f4', colorTitle: 'Light Blue'},\r\n        {color: '#00bcd4', colorTitle: 'Cyan'},\r\n        {color: '#009688', colorTitle: 'Teal'},\r\n        {color: '#4caf50', colorTitle: 'Green'},\r\n        {color: '#8bc34a', colorTitle: 'Light Green'},\r\n        {color: '#cddc39', colorTitle: 'Lime'},\r\n        {color: '#ffeb3b', colorTitle: 'Yellow'},\r\n        {color: '#ffc107', colorTitle: 'Amber'},\r\n        {color: '#ff9800', colorTitle: 'Orange'},\r\n        {color: '#ff5722', colorTitle: 'Deep Orange'},\r\n        {color: '#795548', colorTitle: 'Brown'},\r\n        {color: '#9e9e9e', colorTitle: 'Grey'},\r\n        {color: '#607d8b', colorTitle: 'Blue Grey'},\r\n    ];\r\n    const lang = useSelector(getLang);\r\n    const defaultPresetsLabel = translate(lang, 'Default presets');\r\n\r\n    return {\r\n        classes, colors, defaultPresetsLabel,\r\n\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Color: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, colors, defaultPresetsLabel,\r\n    } = useColor();\r\n    const pickColorButtonElements = colors.map(\r\n        el => <SetColorButton key={el.color}\r\n                              color={el.color}\r\n                              colorTitle={el.colorTitle}\r\n        />\r\n    );\r\n    return (\r\n        <div className={classes.scndSdbrBckgrndColor}>\r\n            <div className={classes.colorsBlock}>\r\n                <SelectColorButton />\r\n                <SetColorButton color='#fff' colorTitle='White'/>\r\n                <SetColorButton color='#858585' colorTitle='Grey'/>\r\n                <SetColorButton color='#000' colorTitle='Black' />\r\n            </div>\r\n            <Typography variant='body2' className={classes.typography}>\r\n                {defaultPresetsLabel}\r\n            </Typography>\r\n            <div className={classes.colorsBlock}>\r\n                {pickColorButtonElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Color;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    scndSdbrBckgrndColor: {\r\n        margin: '20px 10px',\r\n        flexGrow: 1\r\n    },\r\n    colorsBlock: {\r\n        display: 'grid',\r\n        gridGap: 10,\r\n        gridTemplateColumns: 'repeat(4, 1fr)'\r\n    },\r\n    typography: {\r\n        color: '#fff',\r\n        margin: '20px 0 10px'\r\n    }\r\n});\r\n\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport {GradientStyleType} from \"../../../../../../Types/types\";\r\nimport clsx from \"clsx\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport {getBackgroundStyle, getGradientStyle} from \"../../../../../../Store/selectors/editor-selectors\";\r\nimport {getZoom} from \"../../../../../../Store/selectors/workspace-selectors\";\r\nimport {workspaceAC} from \"../../../../../../Store/reducers/workspace-reducer\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useGradientStyleButton = (gradientStyle: GradientStyleType) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const gradientStyleFromState = useSelector(getGradientStyle);\r\n    const backgroundStyle = useSelector(getBackgroundStyle);\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setBackgroundStyle('gradient'));\r\n        dispatch(editorAC.setGradientStyle(gradientStyle));\r\n    };\r\n    return {\r\n        classes, onClickHandler, gradientStyleFromState,\r\n        backgroundStyle\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst GradientStyleButton: React.FC<PropsType> = (props) => {\r\n    const {\r\n        gradientStyle\r\n    } = props;\r\n    const {\r\n        classes, onClickHandler, gradientStyleFromState,\r\n        backgroundStyle\r\n    } = useGradientStyleButton(gradientStyle);\r\n\r\n    return (\r\n        <div onClick={onClickHandler}\r\n             className={clsx(\r\n                 classes.gradientStyleButton,\r\n                 gradientStyle === 'horizontal' && classes.horizontal,\r\n                 gradientStyle === 'vertical' && classes.vertical,\r\n                 gradientStyle === 'radial' && classes.radial,\r\n                 backgroundStyle === 'gradient' && gradientStyleFromState === gradientStyle && classes.selected\r\n             )}/>\r\n    )\r\n};\r\nexport default GradientStyleButton;\r\n\r\n//================= TYPE =============\r\ntype PropsType = {\r\n    gradientStyle: GradientStyleType\r\n}\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    gradientStyleButton: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 10,\r\n        border: '2px solid black',\r\n        boxSizing: 'border-box',\r\n    },\r\n    horizontal: {\r\n        background: 'linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(255,255,255,1) 100%)'\r\n    },\r\n    vertical: {\r\n        background: 'linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(0,0,0,1) 100%)'\r\n    },\r\n    radial: {\r\n        background: 'radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(0,0,0,1) 100%)'\r\n    },\r\n    selected: {\r\n        outline: '2px solid #FFF'\r\n    }\r\n});\r\n\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React, {ReactElement} from \"react\";\r\nimport GradientStyleButton from \"./GradientStyleButton\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useGradientStyle = () => {\r\n    const classes = useStyles();\r\n    return {\r\n        classes\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst GradientStyle: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes\r\n    } = useGradientStyle()\r\n    return (\r\n        <div className={classes.gradientStyle}>\r\n            <GradientStyleButton gradientStyle='horizontal'/>\r\n            <GradientStyleButton gradientStyle='vertical'/>\r\n            <GradientStyleButton gradientStyle='radial'/>\r\n        </div>\r\n    )\r\n};\r\nexport default GradientStyle;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    gradientStyle: {\r\n        margin: '20px 10px',\r\n        display: 'grid',\r\n        gridGap: 10,\r\n        gridTemplateColumns: 'repeat(4, 1fr)'\r\n    }\r\n});\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport SelectColorPopover from \"./SelectColorPopover\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../Utils/lang\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst Div = styled.div`\r\n  background: ${(props: DivPropsType) => props.enable ? props.color : 'none'};;\r\n  width: ${(props: DivPropsType) => `${props.size}px`};\r\n  height: ${(props: DivPropsType) => `${props.size}px`};\r\n  border-radius: 2px;\r\n  border: 2px solid #fff;\r\n  cursor: ${(props: DivPropsType) => props.enable ? 'pointer' : 'auto'};\r\n  display: flex;\r\n  justify-content:center;\r\n  align-items: center;\r\n`;\r\n\r\n//==================== CUSTOM HOOK ==========================\r\nconst useSelectColorButtonCustom = (\r\n    enable: boolean, header: string, tipTitle: string | undefined\r\n) => {\r\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n        if (enable) {\r\n            setAnchorEl(event.currentTarget);\r\n        }\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const lang = useSelector(getLang);\r\n    const headerLabel = translate(lang, header);\r\n    const tipTitleLabel = tipTitle ? translate(lang, tipTitle) : '';\r\n    const classes = useStyles();\r\n    return {\r\n        onClickHandler, open, anchorEl, classes,\r\n        handleClose, headerLabel, tipTitleLabel,\r\n    }\r\n};\r\n\r\n//===================== COMPONENT ===========================\r\nconst SelectColorButtonCustom: React.FC<PropsType> = (props) => {\r\n    const {\r\n        color, enable, onPickColorHandler, size = 50, tipTitle, header,\r\n        anchorOriginVertical = 'top', anchorOriginHorizontal = 'left',\r\n        transformOriginVertical = 'top', transformOriginHorizontal = 'left'\r\n    } = props;\r\n\r\n    const {\r\n        onClickHandler, open, anchorEl, classes,\r\n        handleClose, headerLabel, tipTitleLabel,\r\n    } = useSelectColorButtonCustom(enable, header, tipTitle);\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                {\r\n                    tipTitle\r\n                        ? <Tooltip title={tipTitleLabel} placement=\"right\" arrow\r\n                                   classes={{\r\n                                       tooltip: classes.tooltip,\r\n                                       arrow: classes.arrow\r\n                                   }}>\r\n                            <Div size={size}\r\n                                 enable={enable}\r\n                                 color={color}\r\n                                 onClick={onClickHandler}\r\n                            />\r\n                        </Tooltip>\r\n                        : <Div size={size}\r\n                               enable={enable}\r\n                               color={color}\r\n                               onClick={onClickHandler}\r\n                        />\r\n                }\r\n            </>\r\n            <Popover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: anchorOriginVertical,\r\n                    horizontal: anchorOriginHorizontal,\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: transformOriginVertical,\r\n                    horizontal: transformOriginHorizontal,\r\n                }}\r\n            >\r\n                <SelectColorPopover header={headerLabel}\r\n                                    onPickColor={onPickColorHandler}\r\n                                    handleClose={handleClose}\r\n                                    propsColor={color}\r\n                />\r\n            </Popover>\r\n        </>\r\n    )\r\n};\r\nexport default SelectColorButtonCustom;\r\n\r\n//==================== TYPE ===================\r\ntype PropsType = {\r\n    tipTitle?: string | undefined\r\n    color: string\r\n    enable: boolean\r\n    onPickColorHandler: (color: string) => void\r\n    size?: number\r\n    header: string\r\n    anchorOriginVertical?: 'top' | 'center' | 'bottom' | number\r\n    anchorOriginHorizontal?: 'left' | 'center' | 'right' | number\r\n    transformOriginVertical?: 'top' | 'center' | 'bottom' | number\r\n    transformOriginHorizontal?: 'left' | 'center' | 'right' | number\r\n};\r\ntype DivPropsType = {\r\n    size: number\r\n    color: string\r\n    enable: boolean\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n});\r\n\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport SelectColorButtonCustom from \"../../../../../common/SelectColorButtonCustom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getColorEnd, getColorStart} from \"../../../../../../Store/selectors/editor-selectors\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport styled from \"styled-components\";\r\n\r\n//===================== CUSTOM HOOK ===================\r\nconst useGradientColor = () => {\r\n    const classes = useStyles();\r\n    const colorStart = useSelector(getColorStart);\r\n    const colorEnd = useSelector(getColorEnd);\r\n    const dispatch = useDispatch()\r\n    const onSelectColorStartHandler = (color: string) => {\r\n        dispatch(editorAC.setColorStart(color))\r\n    };\r\n    const onSelectColorEndHandler = (color: string) => {\r\n        dispatch(editorAC.setColorEnd(color))\r\n    };\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.replaceColor())\r\n    };\r\n    return {\r\n        classes, colorStart, colorEnd, onClickHandler,\r\n        onSelectColorStartHandler, onSelectColorEndHandler\r\n    }\r\n};\r\n\r\nconst GradientDiv = styled.div`\r\n    height: 25px;\r\n    margin-top: 5px;\r\n    background: ${\r\n    (props: PropsType) =>  `linear-gradient(90deg, ${props.colorStart} 0%, ${props.colorEnd} 100%)`\r\n};\r\n`\r\n\r\n//==================== COMPONENT ======================\r\nconst GradientColor: React.FC<{}> = () => {\r\n    const {\r\n        classes, colorStart, colorEnd, onClickHandler,\r\n        onSelectColorStartHandler, onSelectColorEndHandler\r\n    } = useGradientColor();\r\n\r\n    return (\r\n        <div className={classes.gradientColor}>\r\n            <div className={classes.buttons}>\r\n                <SelectColorButtonCustom\r\n                    color={colorStart}\r\n                    enable={true}\r\n                    onPickColorHandler={onSelectColorStartHandler}\r\n                    size={25}\r\n                    tipTitle='Select color'\r\n                    header='Select start color'\r\n                    anchorOriginVertical='top'\r\n                    anchorOriginHorizontal='left'\r\n                    transformOriginVertical='top'\r\n                    transformOriginHorizontal='left'\r\n                />\r\n                <IconButton size='small' onClick={onClickHandler}>\r\n                    <CachedIcon className={classes.icon}/>\r\n                </IconButton>\r\n                <SelectColorButtonCustom\r\n                    color={colorEnd}\r\n                    enable={true}\r\n                    onPickColorHandler={onSelectColorEndHandler}\r\n                    size={25}\r\n                    tipTitle='Select color'\r\n                    header='Select end color'\r\n                    anchorOriginVertical='top'\r\n                    anchorOriginHorizontal='right'\r\n                    transformOriginVertical='top'\r\n                    transformOriginHorizontal='right'\r\n                />\r\n            </div>\r\n            <GradientDiv colorStart={colorStart}\r\n                         colorEnd={colorEnd}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default GradientColor;\r\n\r\n//==================== TYPE ===================\r\ntype PropsType = {\r\n    colorStart: string\r\n    colorEnd: string\r\n}\r\n\r\n//==================== STYLES ===============\r\nconst useStyles = makeStyles({\r\n    gradientColor: {\r\n        padding: '0 10px',\r\n        marginBottom: 10\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    icon: {\r\n        color: 'white'\r\n    },\r\n});","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React, {ReactElement} from \"react\";\r\nimport GradientStyle from \"./GradientStyle\";\r\nimport GradientColor from \"./GradientColor\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useGradient = () => {\r\n    const classes = useStyles();\r\n    return {\r\n        classes\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Gradient: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes\r\n    } = useGradient()\r\n    return (\r\n        <div className={classes.gradient}>\r\n            <GradientStyle/>\r\n            <GradientColor/>\r\n        </div>\r\n    )\r\n};\r\nexport default Gradient;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    gradient: {\r\n        flexGrow: 1\r\n    }\r\n});\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getImageTabIndex,\r\n} from \"../../../../../../Store/selectors/editor-selectors\";\r\nimport React from \"react\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Tabs, Theme} from \"@material-ui/core\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\n//====================== CUSTOM HOOK ====================\r\nconst useImageTabs = () => {\r\n    const imageTabIndex = useSelector(getImageTabIndex);\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        dispatch(editorAC.setImageTabIndex(newValue));\r\n    };\r\n    const lang = useSelector(getLang);\r\n    const labels = [];\r\n    labels[0] = translate(lang, 'My images');\r\n    labels[1] = translate(lang, 'Settings');\r\n    const classes = useStyles();\r\n    return {\r\n        imageTabIndex, onChangeHandler, classes,\r\n        labels\r\n    }\r\n};\r\n\r\n//======================= COMPONENT ====================\r\nconst ImageTabs: React.FC<{}> = () => {\r\n    const {\r\n        imageTabIndex, onChangeHandler, classes,\r\n        labels\r\n    } = useImageTabs();\r\n    return (\r\n        <Tabs\r\n            value={imageTabIndex}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={onChangeHandler}\r\n            classes={{\r\n                indicator: classes.indicator\r\n            }}\r\n            className={classes.tabs}\r\n        >\r\n            <Tab label={labels[0]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n            <Tab label={labels[1]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n        </Tabs>\r\n    )\r\n};\r\nexport default ImageTabs;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    tabs: {\r\n        minHeight: 0,\r\n        borderBottom: `1px solid #aaa`,\r\n        '& .MuiTabs-flexContainer': {\r\n            justifyContent: 'space-between'\r\n        }\r\n    },\r\n    indicator: {\r\n        height: 3,\r\n        backgroundColor: 'white'\r\n    },\r\n    wrapper: {\r\n        fontSize: 12,\r\n        color: 'white',\r\n        textTransform: 'none',\r\n        '& > *:first-child': {\r\n            marginBottom: '0!important'\r\n        }\r\n    },\r\n    selected: {\r\n        color: 'white'\r\n    },\r\n    tabRoot: {\r\n        flexGrow: 1,\r\n        marginLeft: 0,\r\n        color: 'white',\r\n        maxWidth: 'auto',\r\n        minWidth: 'auto',\r\n        padding: 5,\r\n        minHeight: 0\r\n    },\r\n}));","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport {ImageType} from \"../../../../../../../Types/types\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {editorAC} from \"../../../../../../../Store/reducers/editor-reducer\";\r\n\r\n//================== CUSTOM HOOK ================\r\nconst useMyImagesItem = (image: ImageType) => {\r\n    const classes = useStylesForm();\r\n    const imgSrc = image.src as string;\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setBackgroundStyle('image'));\r\n        dispatch(editorAC.setCurrentImage(image.id));\r\n    };\r\n    return {\r\n        classes, imgSrc, onClickHandler\r\n    }\r\n};\r\n\r\n//================== COMPONENT =================\r\nconst MyImagesItem: React.FC<PropsType> = ({image}) => {\r\n    const {\r\n        classes, imgSrc, onClickHandler\r\n    } = useMyImagesItem(image);\r\n\r\n    return (\r\n        <Card elevation={6}>\r\n            <CardActionArea onClick={onClickHandler}>\r\n                <img src={imgSrc} alt=\"\" className={classes.img}/>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n};\r\nexport default MyImagesItem\r\n//=============== TYPE ===============\r\ntype PropsType = {\r\n   image: ImageType\r\n}\r\n\r\n//================= STYLES ================\r\nconst useStylesForm = makeStyles({\r\n    img: {\r\n        width: 110,\r\n        display: 'block'\r\n    }\r\n})","import Button from \"@material-ui/core/Button\";\r\nimport BackupIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\r\nimport React, {ChangeEvent, useRef} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loadImage} from \"../../../../../../../Store/reducers/editor-reducer\";\r\nimport {getImages} from \"../../../../../../../Store/selectors/editor-selectors\";\r\nimport MyImagesItem from \"./MyImagesItem\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useImageMyImages = () => {\r\n    const classes = useStyles();\r\n    const ref = useRef<HTMLInputElement>(null);\r\n    const dispatch = useDispatch();\r\n    const images = useSelector(getImages);\r\n\r\n    const imgCardElements = images.map(\r\n        el => <MyImagesItem image={el}/>\r\n    );\r\n\r\n    const onChangeHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            const file = e.target.files[0];\r\n            dispatch(loadImage(file))\r\n        }\r\n    };\r\n    const onClickHandler = () => {\r\n        if (ref && ref.current) {\r\n            ref.current.click()\r\n        }\r\n\r\n    };\r\n    return {\r\n        classes, onChangeHandle, onClickHandler,\r\n        ref, imgCardElements\r\n    }\r\n};\r\n\r\n//================= COMPONENT ========================\r\nconst MyImages: React.FC<{}> = () => {\r\n    const {\r\n        classes, onChangeHandle, onClickHandler,\r\n        ref, imgCardElements\r\n    } = useImageMyImages();\r\n\r\n    return (\r\n        <div className={classes.imageMyImages}>\r\n            <div>\r\n                <input\r\n                    ref={ref}\r\n                    accept=\"image/*\"\r\n                    onChange={onChangeHandle}\r\n                    className={classes.input}\r\n                    id=\"12345\"\r\n                    multiple\r\n                    type=\"file\"\r\n                />\r\n                <label htmlFor=\"12345\"\r\n                       className={classes.label}\r\n                >\r\n                    <Button\r\n                        variant='contained'\r\n                        fullWidth\r\n                        //component\r\n                        startIcon={<BackupIcon/>}\r\n                        className={classes.button}\r\n                        onClick={onClickHandler}\r\n                    >\r\n                        Upload image\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div className={classes.imagesWrapper}>\r\n                <div className={classes.subWrapper}>\r\n                    {imgCardElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default MyImages\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n        imageMyImages: {\r\n            boxSizing: 'border-box',\r\n            padding: '10px 0',\r\n            height: 'calc(100vh - 64px - 117px - 32px)'\r\n        },\r\n        input: {\r\n            display: 'none'\r\n        },\r\n        label: {\r\n            display: 'block'\r\n        },\r\n        button: {\r\n            //color: 'white',\r\n            textTransform: 'none',\r\n            backgroundColor:\r\n                'white',\r\n            marginBottom: 20\r\n        },\r\n        img: {\r\n            width: 110,\r\n            borderRadius: 5,\r\n            '&:not(:last-child)': {\r\n                marginBottom: 20\r\n            }\r\n        },\r\n        imagesWrapper: {\r\n            width: 230,\r\n            height: 'calc(100vh - 64px - 117px - 32px - 56px)',\r\n            overflow: 'auto',\r\n        },\r\n        subWrapper: {\r\n            maxHeight: '100%',\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gridGap: 10,\r\n            gridRowGap: 10,\r\n            alignItems: 'start',\r\n        }\r\n    })\r\n;","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAlign} from \"../../../../../../../Store/selectors/editor-selectors\";\r\nimport {AlignType} from \"../../../../../../../Types/types\";\r\nimport clsx from \"clsx\";\r\nimport {editorAC} from \"../../../../../../../Store/reducers/editor-reducer\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useAlignButton = (ownAlign: AlignType) => {\r\n    const classes = useStyles();\r\n    const align = useSelector(getAlign);\r\n    const dispatch = useDispatch();\r\n    const onClickHandle = () => {\r\n        dispatch(editorAC.setAlign(ownAlign))\r\n    };\r\n    return {\r\n        classes, align, onClickHandle\r\n    }\r\n};\r\n\r\n//================= COMPONENT ========================\r\nconst SettingsAlignButton: React.FC<PropsType> = ({ownAlign}) => {\r\n    const {\r\n        classes, align, onClickHandle\r\n    } = useAlignButton(ownAlign);\r\n\r\n    return (\r\n        <div className={clsx(classes.alignButton, align === ownAlign && classes.selected)}\r\n             onClick={onClickHandle}\r\n        />\r\n    )\r\n};\r\nexport default SettingsAlignButton\r\n\r\n//====================== TYPE =====================\r\ntype PropsType = {\r\n    ownAlign: AlignType\r\n}\r\n\r\n//===================== STYLES ====================\r\nconst useStyles = makeStyles({\r\n    alignButton: {\r\n        width: 12,\r\n        height: 12,\r\n        boxSizing: 'border-box',\r\n        border: '2px solid #ccc',\r\n        cursor: 'pointer'\r\n    },\r\n    selected: {\r\n        backgroundColor: 'white',\r\n        border: '2px solid #FFF'\r\n    }\r\n});","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport SettingsAlignButton from \"./SettingsAlignButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../../Utils/lang\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {AlignType} from \"../../../../../../../Types/types\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useAlign = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const alignLabel = translate(lang, 'Align');\r\n    const aligns = [\r\n        'left-top',\r\n        'center-top',\r\n        'right-top',\r\n        'left-center',\r\n        'center',\r\n        'right-center',\r\n        'left-bottom',\r\n        'center-bottom',\r\n        'right-bottom'\r\n    ] as Array<AlignType>;\r\n    const alignButtonsElements = aligns.map(\r\n        el => <SettingsAlignButton key={el} ownAlign={el}/>\r\n    );\r\n\r\n    return {\r\n        classes, alignLabel, alignButtonsElements\r\n    }\r\n};\r\n\r\n//================= COMPONENT ========================\r\nconst SettingsAlign: React.FC<{}> = () => {\r\n    const {\r\n        classes, alignLabel, alignButtonsElements\r\n    } = useAlign();\r\n\r\n    return (\r\n        <div className={classes.align}>\r\n            <Typography className={classes.typography}\r\n                        variant='body2'\r\n            >\r\n                {alignLabel}\r\n            </Typography>\r\n            <div className={classes.alignButtonWrapper}>\r\n                {alignButtonsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default SettingsAlign\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    align: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    typography: {\r\n        color: '#fff',\r\n        marginRight: 20\r\n    },\r\n    alignButtonWrapper: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 1fr 1fr',\r\n        gridGap: 12,\r\n        width: 60\r\n    }\r\n\r\n});","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Select, Typography} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getScaleMode} from \"../../../../../../../Store/selectors/editor-selectors\";\r\nimport {getLang} from \"../../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../../Utils/lang\";\r\nimport {ScaleModeType} from \"../../../../../../../Types/types\";\r\nimport {editorAC} from \"../../../../../../../Store/reducers/editor-reducer\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useScaleMode = () => {\r\n    const classes = useStyles();\r\n    const scaleMode = useSelector(getScaleMode);\r\n    const lang = useSelector(getLang);\r\n    const labels = ['Maintain aspect', 'Exact fit', 'Scale crop', 'No scale'];\r\n    const optionElements = labels.map(\r\n        el => <option key={el} value={el}>{translate(lang, el)}</option>\r\n    );\r\n    const scaleModeLabel = translate(lang, 'Scale mode');\r\n    const dispatch = useDispatch()\r\n    const onChangeHandler = (event: React.ChangeEvent<{name?: string; value: unknown }>) => {\r\n        const value = event.target.value as ScaleModeType\r\n        dispatch(editorAC.setScaleMode(value))\r\n    };\r\n    return {\r\n        classes, scaleMode, onChangeHandler, optionElements,\r\n        scaleModeLabel\r\n    }\r\n};\r\n\r\n//================= COMPONENT ========================\r\nconst SettingsScaleMode: React.FC<{}> = () => {\r\n    const {\r\n        classes, scaleMode, onChangeHandler, optionElements,\r\n        scaleModeLabel\r\n    } = useScaleMode();\r\n\r\n    return (\r\n        <div className={classes.scaleMode}>\r\n            <Typography className={classes.typography}\r\n                        variant='body2'\r\n            >\r\n                {scaleModeLabel}\r\n            </Typography>\r\n            <Select\r\n                native\r\n                value={scaleMode}\r\n                onChange={onChangeHandler}\r\n                className={classes.select}\r\n                inputProps={{\r\n                    name: 'scale-mode',\r\n                    id: 'scale-mode-native-simple',\r\n                }}\r\n            >\r\n                {optionElements}\r\n            </Select>\r\n        </div>\r\n    )\r\n};\r\nexport default SettingsScaleMode\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    scaleMode: {\r\n        margin: '10px 0 20px'\r\n    },\r\n    select: {\r\n        backgroundColor: brown[100]\r\n    },\r\n    typography: {\r\n        color: '#fff',\r\n        marginBottom: 5\r\n    },\r\n});","import React from \"react\";\r\nimport SettingsAlign from \"./SettingsAlign\";\r\nimport SettingsScaleMode from \"./SettingsScaleMode\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getScaleMode} from \"../../../../../../../Store/selectors/editor-selectors\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useImageSettings = () => {\r\n    const scaleMode = useSelector(getScaleMode);\r\n    return {\r\n        scaleMode\r\n    }\r\n};\r\n\r\n//================= COMPONENT ========================\r\nconst Settings: React.FC<{}> = () => {\r\n    const {\r\n        scaleMode\r\n    } = useImageSettings();\r\n\r\n    return (\r\n        <div>\r\n            <SettingsScaleMode/>\r\n            {\r\n                scaleMode !== 'Exact fit' &&\r\n                <SettingsAlign/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Settings;","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport ImageTabs from \"./ImageTabs\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getImageTabIndex} from \"../../../../../../Store/selectors/editor-selectors\";\r\nimport {ImageTabIndexEnum} from \"../../../../../../Types/types\";\r\nimport MyImages from \"./MyImages/MyImages\";\r\nimport Settings from \"./Settings/Settings\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useImage = () => {\r\n    const classes = useStyles();\r\n    const imageTabIndex = useSelector(getImageTabIndex);\r\n    return {\r\n        classes, imageTabIndex,\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Image: React.FC<{}> = () => {\r\n    const {\r\n        classes, imageTabIndex,\r\n    } = useImage();\r\n\r\n    return (\r\n        <div className={classes.image}>\r\n            <ImageTabs/>\r\n            {\r\n                imageTabIndex === ImageTabIndexEnum.myImage &&\r\n                    <MyImages/>\r\n            }\r\n            {\r\n                imageTabIndex === ImageTabIndexEnum.imageSetting &&\r\n                <Settings/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Image;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    image: {\r\n        flexGrow: 1,\r\n        padding: '0 10px',\r\n        marginBottom: 10,\r\n        height: 'calc(100vh - 64px - 117px)'\r\n    },\r\n    buttonWrapper: {\r\n        marginTop: 20\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    label: {\r\n        display: 'block'\r\n    },\r\n    button: {\r\n        textTransform: 'none',\r\n        backgroundColor: 'white'\r\n    }\r\n});\r\n\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport {CheckboxProps, FormControlLabel} from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport SelectColorButtonCustom from \"../../../../common/SelectColorButtonCustom\";\r\nimport {getBorderColor, getUseBorder} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst WhiteCheckbox = withStyles({\r\n    root: {\r\n        color: 'white',\r\n        '&$checked': {\r\n            color: 'white',\r\n        },\r\n    }\r\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\r\n\r\n//===================== CUSTOM HOOK ===================\r\nconst useBackgroundBorder = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const useBorder = useSelector(getUseBorder);\r\n    const borderColor = useSelector(getBorderColor);\r\n    const borderLabel = translate(lang, 'Border');\r\n    const useBorderLabel = translate(lang, 'Use border');\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        if (useBorder) {\r\n            dispatch(editorAC.setCanvasUrl('border', null))\r\n            dispatch(editorAC.setBorderColor('#000'));\r\n        }\r\n        dispatch(editorAC.setUseBorder(!useBorder))\r\n    };\r\n    const onSelectHandler = (color: string) => {\r\n        dispatch(editorAC.setBorderColor(color))\r\n    };\r\n    return {\r\n        classes, borderLabel, useBorderLabel,\r\n        useBorder, onChangeHandler, onSelectHandler,\r\n        borderColor\r\n    }\r\n};\r\n\r\n//==================== COMPONENT ======================\r\nconst BackgroundBorder: React.FC<{}> = () => {\r\n    const {\r\n        classes, borderLabel, useBorderLabel,\r\n        useBorder, onChangeHandler, onSelectHandler,\r\n        borderColor\r\n    } = useBackgroundBorder();\r\n\r\n    return (\r\n        <div className={classes.border}>\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n            >\r\n                {borderLabel}\r\n            </Typography>\r\n            <div className={classes.selectColorBlock}>\r\n                <FormControlLabel\r\n                    control={\r\n                        <WhiteCheckbox\r\n                            checked={useBorder}\r\n                            onChange={onChangeHandler}\r\n                        />\r\n                    }\r\n                    label={useBorderLabel}\r\n                    className={classes.formControlLabel}\r\n                />\r\n                <SelectColorButtonCustom\r\n                    color={borderColor}\r\n                    enable={useBorder}\r\n                    onPickColorHandler={onSelectHandler}\r\n                    size={25}\r\n                    tipTitle='Select color'\r\n                    header='Select border color'\r\n                    anchorOriginVertical='bottom'\r\n                    anchorOriginHorizontal='right'\r\n                    transformOriginVertical='bottom'\r\n                    transformOriginHorizontal='right'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default BackgroundBorder;\r\n\r\n//============ STYLES =================\r\nconst useStyles = makeStyles({\r\n    border: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        margin: '0 10px',\r\n        borderTop: '1px solid #ccc'\r\n    },\r\n    typography: {\r\n        color: 'white'\r\n    },\r\n    selectColorBlock: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    formControlLabel: {\r\n        color: 'white'\r\n    },\r\n    checkbox: {\r\n        color: 'white',\r\n        '&$checked': {\r\n            color: 'white'\r\n        }\r\n    },\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport SecondarySidebarTitle from \"../SecondarySidebarTitle\";\r\nimport BackgroundTabs from \"./BackgroundTabs\";\r\nimport Color from \"./Color/Color\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getSecondarySidebarBackgroundTabIndex} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {BackgroundTabIndexEnum} from \"../../../../../Types/types\";\r\nimport Gradient from \"./Gradient/Gradient\";\r\nimport Texture from \"./Texture/Texture\";\r\nimport Image from \"./Image/Image\";\r\nimport BackgroundBorder from \"./BackgroundBorder\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBackground = () => {\r\n    const classes = useStyles();\r\n    const secondarySidebarBackgroundTabIndex = useSelector(getSecondarySidebarBackgroundTabIndex)\r\n    return {\r\n        classes, secondarySidebarBackgroundTabIndex\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Background: React.FC<{}> = () => {\r\n    const {\r\n        classes, secondarySidebarBackgroundTabIndex\r\n    } = useBackground();\r\n\r\n    return (\r\n        <div className={classes.Background}>\r\n            <SecondarySidebarTitle title='Background'/>\r\n            <BackgroundTabs/>\r\n            {\r\n                secondarySidebarBackgroundTabIndex === BackgroundTabIndexEnum.color &&\r\n                <Color/>\r\n            }\r\n            {\r\n                secondarySidebarBackgroundTabIndex === BackgroundTabIndexEnum.gradient &&\r\n                <Gradient/>\r\n            }\r\n            {\r\n                secondarySidebarBackgroundTabIndex === BackgroundTabIndexEnum.image &&\r\n                <Image/>\r\n            }\r\n            <BackgroundBorder/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Background;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        backgroundColor: 'red'\r\n    },\r\n    Background: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: 'calc(100vh - 64px)',\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport SecondarySidebarTitle from \"../SecondarySidebarTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useSecondSidebarText = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const labels = [];\r\n    labels[0] = translate(lang, 'Add header');\r\n    labels[1] = translate(lang, 'Add subheader');\r\n    labels[2] = translate(lang, 'Add body text');\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = [];\r\n    onClickHandler[0] = () => {\r\n        dispatch(textAC.addText('header'));\r\n    };\r\n    onClickHandler[1] = () => {\r\n        dispatch(textAC.addText('subheader'));\r\n    };\r\n    onClickHandler[2] = () => {\r\n        dispatch(textAC.addText('body'));\r\n    };\r\n    return {classes, labels, onClickHandler}\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Text: React.FC<{}> = () => {\r\n    const {classes, labels, onClickHandler} = useSecondSidebarText();\r\n    return (\r\n        <div>\r\n            <SecondarySidebarTitle title='Add text' />\r\n            <div className={classes.buttons}>\r\n                <Button variant='outlined'\r\n                        onClick={onClickHandler[0]}\r\n                        fullWidth\r\n                        className={classes.button}\r\n                        classes={{\r\n                            label: classes.label1\r\n                        }}\r\n                >\r\n                    {labels[0]}\r\n                </Button>\r\n                <Button variant='outlined'\r\n                        onClick={onClickHandler[1]}\r\n                        fullWidth\r\n                        className={classes.button}\r\n                        classes={{\r\n                            label: classes.label2\r\n                        }}\r\n                >\r\n                    {labels[1]}\r\n                </Button>\r\n                <Button variant='outlined'\r\n                        onClick={onClickHandler[2]}\r\n                        fullWidth\r\n                        className={classes.button}\r\n                        classes={{\r\n                            label: classes.label3\r\n                        }}\r\n                >\r\n                    {labels[2]}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Text;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    buttons: {\r\n        margin: 10\r\n    },\r\n    button: {\r\n        height: 40,\r\n        textTransform: 'none',\r\n        color: '#eee',\r\n        backgroundColor: brown[400],\r\n        //border: '1px solid #ccc',\r\n        border: 'none',\r\n        '&:not(:last-child)': {\r\n            marginBottom: 10,\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: brown[300],\r\n            color: '#fff'\r\n        }\r\n    },\r\n    label1: {\r\n        fontSize: '32px',\r\n        lineHeight: '32px'\r\n    },\r\n    label2: {\r\n        fontSize: '24px',\r\n        lineHeight: '24px'\r\n    },\r\n    label3: {\r\n        fontSize: '16px',\r\n        lineHeight: '16px'\r\n    },\r\n});","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getMainSidebarItem} from \"../../../../Store/selectors/editor-selectors\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Background from \"./SecondarySidebarBackground/Background\";\r\nimport {MainSidebarItemEnum} from \"../../../../Types/types\";\r\nimport Text from \"./SecondarySidebarText/Text\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useSecondarySidebar = () => {\r\n    const classes = useStyles();\r\n    const mainSidebarItem = useSelector(getMainSidebarItem);\r\n    return {\r\n        classes, mainSidebarItem\r\n    }\r\n}\r\n\r\n//============== COMPONENT =================\r\nconst SecondarySidebar: React.FC<{}> = () => {\r\n    const {\r\n        classes, mainSidebarItem\r\n    } = useSecondarySidebar();\r\n    return (\r\n        <div className={classes.secondarySidebar}>\r\n            {\r\n                mainSidebarItem === MainSidebarItemEnum.background\r\n                && <Background/>\r\n            }\r\n            {\r\n                mainSidebarItem === MainSidebarItemEnum.text\r\n                && <Text/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default SecondarySidebar;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    secondarySidebar: {\r\n        height: 'calc(100vh - 64px)',\r\n    }\r\n})","import {StateType} from \"../store\";\r\n\r\nexport const getZoom = (state: StateType) => state.workspace.zoom;\r\nexport const getDownloadCase = (state: StateType) => state.workspace.downloadCase;\r\nexport const getRefLeftPanel = (state: StateType) => state.workspace.refLeftPanel;\r\nexport const getIsDownloadDialogOpen = (state: StateType) => state.workspace.isDownloadDialogOpen;\r\nexport const getFileName = (state: StateType) => state.workspace.fileName;\r\nexport const getFileNameFormIsValid = (state: StateType) => state.workspace.fileNameFormIsValid;\r\nexport const getJpegQuality = (state: StateType) => state.workspace.jpegQuality;\r\nexport const getLink = (state: StateType) => state.workspace.link;\r\nexport const getLinkFormIsValid = (state: StateType) => state.workspace.linkFormIsValid;\r\n\r\n\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getZoom} from \"../../../../Store/selectors/workspace-selectors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover/Popover\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\nimport {ZoomType} from \"../../../../Types/types\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useToolbarZoom = () => {\r\n    const classes = useStyles();\r\n    const zoom = useSelector(getZoom);\r\n    const zoomlabel = `${zoom}%`;\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n    const open = Boolean(anchorEl);\r\n    const zoomArray = [10, 25, 50, 75, 100, 150, 200, 300, 400];\r\n    const listItemElements = zoomArray.map(\r\n        el => {\r\n            const onClickListItemHandler = () => {\r\n                dispatch(workspaceAC.setZoom(el as ZoomType));\r\n                handleClose();\r\n            };\r\n            return (\r\n                <ListItem key={el}\r\n                          button\r\n                          onClick={onClickListItemHandler}\r\n                >\r\n                    {el}\r\n                </ListItem>\r\n            )\r\n        }\r\n    )\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return {\r\n        classes, zoomlabel, anchorEl, open,\r\n        onClickHandler, handleClose, listItemElements\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst ToolbarZoom: React.FC<{}> = () => {\r\n    const {\r\n        classes, zoomlabel, anchorEl, open,\r\n        onClickHandler, handleClose, listItemElements\r\n    } = useToolbarZoom();\r\n    return (\r\n        <>\r\n            <Button className={classes.button}\r\n                    onClick={onClickHandler}\r\n                    variant='outlined'\r\n            >\r\n                {zoomlabel}\r\n            </Button>\r\n            <Popover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>\r\n                    {listItemElements}\r\n                </List>\r\n            </Popover>\r\n        </>\r\n    )\r\n};\r\nexport default ToolbarZoom;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 36,\r\n        width: 50\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getZoom} from \"../../../../Store/selectors/workspace-selectors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\nimport {ZoomType} from \"../../../../Types/types\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useToolbarZoomPlus = () => {\r\n    const classes = useStyles();\r\n    const zoom = useSelector(getZoom);\r\n    const zoomArray = [10 , 25 , 50 , 75 , 100 , 150 , 200 , 300 , 400];\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        let index = zoomArray.findIndex(el => el === zoom);\r\n        if (index === zoomArray.length - 1) {\r\n            index = 0;\r\n        } else {\r\n            index += 1;\r\n        }\r\n        dispatch(workspaceAC.setZoom(zoomArray[index] as ZoomType))\r\n    };\r\n    const disabled = zoom === zoomArray[zoomArray.length - 1];\r\n    return {\r\n        classes, onClickHandler, disabled\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst ToolbarZoomPlus:React.FC<{}> = () => {\r\n    const {\r\n        classes, onClickHandler, disabled\r\n    } = useToolbarZoomPlus();\r\n    return (\r\n        <>\r\n            <Button className={classes.button}\r\n                    disabled={disabled}\r\n                    onClick={onClickHandler}\r\n            >\r\n                <Typography variant='h6'>\r\n                    +\r\n                </Typography>\r\n\r\n            </Button>\r\n\r\n        </>\r\n    )\r\n};\r\nexport default ToolbarZoomPlus;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 44\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getZoom} from \"../../../../Store/selectors/workspace-selectors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\nimport {ZoomType} from \"../../../../Types/types\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useToolbarZoomMinus = () => {\r\n    const classes = useStyles();\r\n    const zoom = useSelector(getZoom);\r\n    const zoomArray = [10, 25, 50, 75, 100, 150, 200, 300, 400];\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        let index = zoomArray.findIndex(el => el === zoom);\r\n        if (index === 0) {\r\n            index = zoomArray.length - 1;\r\n        } else {\r\n            index -= 1;\r\n        }\r\n        dispatch(workspaceAC.setZoom(zoomArray[index] as ZoomType))\r\n    };\r\n    const disabled = zoom === zoomArray[0];\r\n    return {\r\n        classes, onClickHandler, disabled\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst ToolbarZoomMinus: React.FC<{}> = () => {\r\n    const {\r\n        classes, onClickHandler, disabled\r\n    } = useToolbarZoomMinus();\r\n    return (\r\n        <>\r\n            <Button className={classes.button}\r\n                    disabled={disabled}\r\n                    onClick={onClickHandler}\r\n            >\r\n                <Typography variant='h6'>\r\n                    -\r\n                </Typography>\r\n\r\n            </Button>\r\n\r\n        </>\r\n    )\r\n};\r\nexport default ToolbarZoomMinus;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 44\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover/Popover\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\nimport {DownloadCaseType} from \"../../../../Types/types\";\r\nimport {getIsCreated, getLang} from \"../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../Utils/lang\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useToolbarDownload = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const isCreated = useSelector(getIsCreated)\r\n    const downloadLabel = translate(lang, 'Download')\r\n\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n    const open = Boolean(anchorEl);\r\n    const downloadCaseArray = ['PNG', 'JPEG', 'HTML'];\r\n    const icons = [\r\n        <CropOriginalIcon/>,\r\n        <ImageIcon/>,\r\n        <LanguageIcon/>\r\n    ];\r\n    const listItemElements = downloadCaseArray.map(\r\n        (el, i) => {\r\n            const onClickListItemHandler = () => {\r\n                dispatch(workspaceAC.setDownloadCase(el as DownloadCaseType));\r\n                dispatch(workspaceAC.setIsDownloadDialogOpen(true));\r\n                handleClose();\r\n            };\r\n            return (\r\n                <ListItem key={el}\r\n                          button\r\n                          onClick={onClickListItemHandler}\r\n                          className={classes.listItem}\r\n                >\r\n                    <ListItemIcon className={classes.listItemIcon}>\r\n                        {icons[i]}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={el}\r\n                                  classes={{\r\n                                      primary: classes.listItemText\r\n                                  }}\r\n                    />\r\n                </ListItem>\r\n            )\r\n        }\r\n    );\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return {\r\n        classes, downloadLabel, anchorEl,\r\n        open, onClickHandler, handleClose,\r\n        listItemElements, isCreated\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst ToolbarDownload: React.FC<{}> = () => {\r\n    const {\r\n        classes, downloadLabel, anchorEl,\r\n        open, onClickHandler, handleClose,\r\n        listItemElements, isCreated\r\n\r\n    } = useToolbarDownload();\r\n    return (\r\n        <>\r\n            <Button className={classes.button}\r\n                    color='primary'\r\n                    disabled={!isCreated}\r\n                    startIcon={<GetAppIcon/>}\r\n                    onClick={onClickHandler}\r\n                    variant='contained'\r\n            >\r\n                {downloadLabel}\r\n            </Button>\r\n            <Popover\r\n                open={open}\r\n                className={classes.popover}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n            >\r\n                <List>\r\n                    {listItemElements}\r\n                </List>\r\n            </Popover>\r\n        </>\r\n    )\r\n};\r\nexport default ToolbarDownload;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        textTransform: 'none'\r\n    },\r\n    popover: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItem: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n        '&:hover': {\r\n            backgroundColor: '#ccc'\r\n        }\r\n    },\r\n    listItemText: {\r\n        fontWeight: 700\r\n    },\r\n    listItemIcon: {\r\n        color: indigo[600],\r\n        minWidth: 30\r\n    }\r\n});","export const required: FieldValidatorType = (value) =>\r\n    value ? undefined : 'Field is required';\r\n\r\nexport const empty: EmptyType = (str: string): boolean => /^\\s+$/.test(str);\r\n\r\nexport const shouldNotBeEmpty: FieldValidatorType = (value) =>\r\n    empty(value) && value !== ''\r\n        ? 'Field should not be empty'\r\n        : undefined;\r\n\r\n//=========================== TYPES =====================================\r\ntype EmptyType = (str: string) => boolean\r\nexport type FieldValidatorType = (value: string) => string | undefined","import React, {useEffect} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm, submit} from \"redux-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport RenderTextField from \"../../../../common/RenderTextField\";\r\nimport {getFileName} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {required, shouldNotBeEmpty} from \"../../../../../Utils/validators\";\r\n\r\n//================= CUSTOM FORM HOOK =========================\r\nconst useForm = (valid: boolean) => {\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        setTimeout(() => dispatch(submit('fileName-form')));\r\n    };\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        dispatch(workspaceAC.setFileNameFormIsValid(valid));\r\n    }, [valid]);\r\n    return {\r\n        onChangeHandler, classes\r\n    }\r\n};\r\n\r\n//========================== FORM =======================================\r\nconst Form: React.FC<FormPropsType> = ({handleSubmit, valid}) => {\r\n    const {\r\n        onChangeHandler, classes\r\n    } = useForm(valid);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field name='fileName'\r\n                   autoFocus={true}\r\n                   component={RenderTextField}\r\n                   type=\"text\"\r\n                   size='small'\r\n                   className={classes.field}\r\n                   onChange={onChangeHandler}\r\n                   validate={[required, shouldNotBeEmpty]}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\n//================================== REDUX-FORM ======================================\r\nconst ReduxForm = reduxForm<FormParamsType, FormOwnPropsType>({\r\n    form: 'fileName-form',\r\n})(Form);\r\n\r\n//=========== CUSTOM COMPONENT HOOK =================\r\nconst useFileNameForm = () => {\r\n    const dispatch = useDispatch();\r\n    const onSubmitHandler = (value: FormParamsType) => {\r\n        dispatch(workspaceAC.setFileName(value.fileName))\r\n    };\r\n    const fileName = useSelector(getFileName)\r\n    const initialValues = {\r\n        fileName: fileName\r\n    };\r\n    return {\r\n        onSubmitHandler, initialValues\r\n    }\r\n};\r\n\r\n//================ COMPONENT =======================\r\nconst FileNameForm: React.FC<{}> = () => {\r\n    const {\r\n        onSubmitHandler, initialValues\r\n    } = useFileNameForm();\r\n    return (\r\n        <ReduxForm onSubmit={onSubmitHandler}\r\n                   initialValues={initialValues}\r\n        />\r\n    )\r\n};\r\nexport default FileNameForm;\r\n\r\n//=================== TYPE ==============\r\ntype FormPropsType =\r\n    InjectedFormProps<FormParamsType, FormOwnPropsType>\r\n    & FormOwnPropsType;\r\ntype FormParamsType = {\r\n    fileName: string\r\n}\r\ntype FormOwnPropsType = {};\r\n\r\n//================= STYLES ================\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        width: '100%'\r\n    }\r\n});","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getJpegQuality} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\n\r\n//============ CUSTOM HOOK ===============\r\nconst useJpegQuality = () => {\r\n    const jpegQuality = useSelector(getJpegQuality);\r\n    const lang = useSelector(getLang);\r\n    const label =  translate(lang, 'Quality of jpeg')\r\n\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = (e: any, value: number | number[]) => {\r\n        dispatch(workspaceAC.setJpegQuality(value as number))\r\n    };\r\n    const classes = useStyles();\r\n    const marks = [\r\n        {\r\n            value: 0.1,\r\n            label: '0.1',\r\n        },\r\n        {\r\n            value: 0.8,\r\n            label: '0.8',\r\n        },\r\n        {\r\n            value: 1,\r\n            label: '1.0',\r\n        },\r\n    ];\r\n    return {\r\n        classes, jpegQuality, onChangeHandler,\r\n        marks, label\r\n    }\r\n};\r\n\r\n//============= COMPONENT =================\r\nconst JpegQuality: React.FC<{}> = () => {\r\n    const {\r\n        classes, jpegQuality, onChangeHandler,\r\n        marks, label\r\n    } = useJpegQuality();\r\n    return (\r\n        <div className={classes.jpegQuality}>\r\n            <Typography>{label}</Typography>\r\n            <Slider className={classes.slider}\r\n                    min={.1}\r\n                    max={1}\r\n                    step={.1}\r\n                    value={jpegQuality}\r\n                    onChange={onChangeHandler}\r\n                    marks={marks}\r\n                    valueLabelDisplay=\"auto\"\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default JpegQuality;\r\n\r\n//============== STYLES ===================\r\nconst useStyles = makeStyles({\r\n    slider: {\r\n        margin: '10px 0',\r\n    },\r\n    jpegQuality: {\r\n        marginTop: 10\r\n    }\r\n});","import {TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nconst RenderTextFieldStartAdornment: React.FC<PropsType> = (props) => {\r\n    const {icon, label, input, meta: {touched, invalid, error}, classes, ...custom} = props;\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            {icon &&\r\n            <div className={styles.iconLeft}>\r\n                {icon}\r\n            </div>}\r\n            <TextField\r\n                InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">http://</InputAdornment>,\r\n                }}\r\n                variant=\"outlined\"\r\n                label={label}\r\n                placeholder={label}\r\n                error={touched && invalid}\r\n                helperText={touched && error}\r\n                {...input}\r\n                {...custom}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RenderTextFieldStartAdornment;\r\n\r\n//======================= TYPES ======================================================\r\ntype PropsType = {\r\n    icon: React.ReactElement\r\n    label: string\r\n    input: any\r\n    meta: {\r\n        touched: boolean\r\n        invalid: boolean\r\n        error: string\r\n    }\r\n    classes?: any\r\n}\r\n//========================= STYLES =============================================================\r\nconst useStyles = makeStyles({\r\n        root: {\r\n            position: 'relative',\r\n            width: '100%',\r\n            '& .MuiFormLabel-root': {\r\n                backgroundColor: 'white',\r\n            }\r\n        },\r\n        label: {\r\n            backgroundColor: 'white'\r\n        },\r\n        iconLeft: {\r\n            position: 'absolute',\r\n            left: -5,\r\n            top: '50%',\r\n            transform: 'translate(-100%, -50%)'\r\n        }\r\n    }\r\n);\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm, submit} from \"redux-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport {getLink} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {required, shouldNotBeEmpty} from \"../../../../../Utils/validators\";\r\nimport RenderTextFieldStartAdornment from \"../../../../common/RenderTextFieldStartAdornment\";\r\n\r\n//================= CUSTOM FORM HOOK =========================\r\nconst useForm = (valid: boolean) => {\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        setTimeout(() => dispatch(submit('link-form')));\r\n    };\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        dispatch(workspaceAC.setLinkFormIsValid(valid));\r\n    }, [valid]);\r\n    return {\r\n        onChangeHandler, classes\r\n    }\r\n};\r\n\r\n//========================== FORM =======================================\r\nconst Form: React.FC<FormPropsType> = ({handleSubmit, valid}) => {\r\n    const {\r\n        onChangeHandler, classes\r\n    } = useForm(valid);\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field name='link'\r\n                   autoFocus={true}\r\n                   component={RenderTextFieldStartAdornment}\r\n                   type=\"text\"\r\n                   size='small'\r\n                   className={classes.field}\r\n                   onChange={onChangeHandler}\r\n                   validate={[required, shouldNotBeEmpty]}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\n//================================== REDUX-FORM ======================================\r\nconst ReduxForm = reduxForm<FormParamsType, FormOwnPropsType>({\r\n    form: 'link-form',\r\n})(Form);\r\n\r\n//=========== CUSTOM COMPONENT HOOK =================\r\nconst useFileNameForm = () => {\r\n    const dispatch = useDispatch();\r\n    const onSubmitHandler = (value: FormParamsType) => {\r\n        dispatch(workspaceAC.setLink(value.link))\r\n    };\r\n    const link = useSelector(getLink)\r\n    const initialValues = {\r\n        link: link\r\n    };\r\n    return {\r\n        onSubmitHandler, initialValues\r\n    }\r\n};\r\n\r\n//================ COMPONENT =======================\r\nconst LinkForm: React.FC<{}> = () => {\r\n    const {\r\n        onSubmitHandler, initialValues\r\n    } = useFileNameForm();\r\n    return (\r\n        <ReduxForm onSubmit={onSubmitHandler}\r\n                   initialValues={initialValues}\r\n        />\r\n    )\r\n};\r\nexport default LinkForm;\r\n\r\n//=================== TYPE ==============\r\ntype FormPropsType =\r\n    InjectedFormProps<FormParamsType, FormOwnPropsType>\r\n    & FormOwnPropsType;\r\ntype FormParamsType = {\r\n    link: string\r\n}\r\ntype FormOwnPropsType = {};\r\n\r\n//================= STYLES ================\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        width: '100%'\r\n    }\r\n});","import {Dialog, makeStyles} from \"@material-ui/core\";\r\nimport React, {useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getDownloadCase,\r\n    getFileName,\r\n    getFileNameFormIsValid,\r\n    getIsDownloadDialogOpen, getJpegQuality, getLink, getLinkFormIsValid\r\n} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FileNameForm from \"./FileNameForm\";\r\nimport {getCanvasUrl, getSize} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport JpegQuality from \"./JpegQuality\";\r\nimport LinkForm from \"./LinkForm\";\r\n\r\n//============= CUSTOM HOOK ================\r\nconst useDownloadDialog = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const downloadCase = useSelector(getDownloadCase);\r\n    const contentLabel = translate(lang, 'Download created banner as');\r\n    const titleLabel = translate(lang, 'Download');\r\n    const nameLabel = translate(lang, 'Enter a file name:');\r\n    const cancelLabel = translate(lang, 'Cancel');\r\n    const isDownloadDialogOpen = useSelector(getIsDownloadDialogOpen);\r\n    const canvasUrl = useSelector(getCanvasUrl);\r\n    const fileName = useSelector(getFileName);\r\n    const size = useSelector(getSize);\r\n    const fileNameFormIsValid = useSelector(getFileNameFormIsValid);\r\n    const link = useSelector(getLink);\r\n    const linkFormIsValid = useSelector(getLinkFormIsValid);\r\n    const jpegQuality = useSelector(getJpegQuality);\r\n    const dispatch = useDispatch();\r\n    const onCloseHandler = () => {\r\n        dispatch(workspaceAC.setIsDownloadDialogOpen(false));\r\n    };\r\n    let canvasAllUrl = '';\r\n    let download = '';\r\n    const linkLabel = translate(lang, 'Enter a link:');\r\n    const copyLabel = translate(lang, 'Copy');\r\n\r\n    const canvasAll = document.createElement('canvas');\r\n    canvasAll.width = size.width as number;\r\n    canvasAll.height = size.height as number;\r\n    const ctxAll = canvasAll.getContext('2d');\r\n    const imgBackground = new Image();\r\n    imgBackground.src = canvasUrl.background as string;\r\n    ctxAll!.drawImage(imgBackground, 0, 0);\r\n\r\n    if (canvasUrl.border) {\r\n        const imgBorder = new Image();\r\n        imgBorder.src = canvasUrl.border as string;\r\n        ctxAll!.drawImage(imgBorder, 0, 0);\r\n    }\r\n\r\n    const imgText = new Image();\r\n    imgText.src = canvasUrl.text as string;\r\n    ctxAll!.drawImage(imgText, 0, 0);\r\n\r\n    //if (downloadCase === 'PNG') {\r\n    canvasAllUrl = canvasAll.toDataURL();\r\n    download = `${fileName}.png`\r\n    //}\r\n    if (downloadCase === 'JPEG') {\r\n        canvasAllUrl = canvasAll.toDataURL('image/jpeg', jpegQuality);\r\n        download = `${fileName}.jpg`\r\n    }\r\n    const html = `<a href=\"http://${link}\"><img src=${canvasAllUrl} width=\"${size.width}\" height=\"${size.height}\">`\r\n\r\n    const textareaRef = useRef(null);\r\n    const onCopyHandler = () => {\r\n        if (textareaRef !== null) {\r\n            // @ts-ignore\r\n            textareaRef.current.select();\r\n            document.execCommand('copy');\r\n        }\r\n    };\r\n\r\n    return {\r\n        isDownloadDialogOpen, onCloseHandler, titleLabel, classes,\r\n        downloadCase, contentLabel, nameLabel, canvasAllUrl, html,\r\n        fileNameFormIsValid, download, linkLabel, cancelLabel,\r\n        linkFormIsValid, textareaRef, copyLabel, onCopyHandler,\r\n    }\r\n};\r\n\r\n\r\n//============= COMPONENT ==================\r\nconst DownloadDialog: React.FC<{}> = () => {\r\n    const {\r\n        isDownloadDialogOpen, onCloseHandler, titleLabel, classes,\r\n        downloadCase, contentLabel, nameLabel, canvasAllUrl, html,\r\n        fileNameFormIsValid, download, linkLabel, cancelLabel,\r\n        linkFormIsValid, textareaRef, copyLabel, onCopyHandler\r\n    } = useDownloadDialog();\r\n\r\n    return (\r\n        <Dialog\r\n            open={isDownloadDialogOpen}\r\n            onClose={onCloseHandler}\r\n        >\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                {`${contentLabel} ${downloadCase}`}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n\r\n                {\r\n                    (downloadCase === 'PNG' || downloadCase === 'JPEG') &&\r\n                    <>\r\n                        <DialogContentText className={classes.dialogContentText}>\r\n                            {nameLabel}\r\n                        </DialogContentText>\r\n                        <FileNameForm/>\r\n                    </>\r\n                }\r\n\r\n                {\r\n                    downloadCase === 'HTML' &&\r\n                    <>\r\n                        <DialogContentText className={classes.dialogContentText}>\r\n                            {linkLabel}\r\n                        </DialogContentText>\r\n                        <LinkForm/>\r\n                        {\r\n                            linkFormIsValid &&\r\n                            <textarea ref={textareaRef}\r\n                                      className={classes.textarea}\r\n                                      rows={4}\r\n                                      value={html}\r\n\r\n                            />\r\n                        }\r\n                    </>\r\n                }\r\n\r\n                {\r\n                    downloadCase === 'JPEG' &&\r\n                    <JpegQuality/>\r\n                }\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                {\r\n                    fileNameFormIsValid ?\r\n                        <>\r\n                            {\r\n                                (downloadCase === 'PNG' || downloadCase === 'JPEG') &&\r\n                                <Link variant='subtitle2'\r\n                                      underline='none'\r\n                                      href={canvasAllUrl as string}\r\n                                      download={download}\r\n                                      className={classes.link}\r\n                                >\r\n                                    {titleLabel}\r\n                                </Link>\r\n                            }\r\n                        </>\r\n                        : <Typography variant='subtitle2'\r\n                                      color='textSecondary'\r\n                                      className={classes.typography}\r\n                        >\r\n                            {titleLabel}\r\n                        </Typography>\r\n                }\r\n                {\r\n                    downloadCase === 'HTML' && linkFormIsValid &&\r\n                    <Button onClick={onCopyHandler}\r\n                            className={classes.button}\r\n                            color=\"primary\"\r\n                            variant='outlined'\r\n                    >\r\n                        {copyLabel}\r\n                    </Button>\r\n                }\r\n                <Button onClick={onCloseHandler}\r\n                        variant='outlined'\r\n                        className={classes.button}\r\n                        color=\"primary\">\r\n                    {cancelLabel}\r\n                </Button>\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    )\r\n};\r\nexport default DownloadDialog;\r\n\r\n//=================== STYLES ===================\r\nconst useStyles = makeStyles({\r\n    dialogTitle: {\r\n        backgroundColor: indigo[600],\r\n        color: '#fff',\r\n        paddingTop: 5,\r\n        paddingBottom: 5\r\n    },\r\n    button: {\r\n        textTransform: 'none'\r\n    },\r\n    dialogContentText: {\r\n        color: '#000'\r\n    },\r\n    textarea: {\r\n        marginTop: 20,\r\n        width: '100%',\r\n        resize: 'none',\r\n        borderRadius: 5,\r\n        border: '1px solid #ccc',\r\n        '&:focus': {\r\n            border: '1px solid red'\r\n        }\r\n    },\r\n    link: {\r\n        border: '1px solid rgba(63, 81, 181, 0.5)',\r\n        borderRadius: 4,\r\n        padding: '6px 15px',\r\n        '&:hover': {\r\n            border: '1px solid rgba(63, 81, 181, 1)',\r\n        }\r\n    },\r\n    typography: {\r\n        border: '1px solid #ccc',\r\n        borderRadius: 4,\r\n        padding: '6px 15px',\r\n    }\r\n})\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {editorToolbarHeight} from \"../../../../Utils/CONST\";\r\nimport ToolbarZoom from \"./ToolbarZoom\";\r\nimport ToolbarZoomPlus from \"./ToolbarZoomPlus\";\r\nimport ToolbarZoomMinus from \"./ToolbarZoomMinus\";\r\nimport ToolbarDownload from \"./ToolbarDownload\";\r\nimport DownloadDialog from \"./DownloadDialog/DownloadDialog\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useEditorToolbar = () => {\r\n    const classes = useStyles();\r\n    return {classes}\r\n\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Toolbar: React.FC<{}> = () => {\r\n    const {classes} = useEditorToolbar();\r\n    return (\r\n        <div className={classes.editorToolbar}>\r\n            <div/>\r\n            <div className={classes.centerBlock}>\r\n                <ToolbarZoomMinus />\r\n                <ToolbarZoom />\r\n                <ToolbarZoomPlus />\r\n            </div>\r\n            <div className={classes.rightBlock}>\r\n                <ToolbarDownload/>\r\n            </div>\r\n            <DownloadDialog/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toolbar;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    editorToolbar: {\r\n        height: editorToolbarHeight,\r\n        boxSizing: 'border-box',\r\n        padding: '0 10px',\r\n        borderBottom: '1px solid #ccc',\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 1fr 1fr',\r\n        gridColumnGap: 10,\r\n        alignItems: 'center'\r\n    },\r\n    centerBlock: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    rightBlock: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    checked: {\r\n\r\n    }\r\n});","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getBorderColor,\r\n    getSize\r\n} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport React, {ReactElement, useEffect, useRef} from \"react\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerCanvasBackground = () => {\r\n    const classes = useStyles();\r\n    const size = useSelector(getSize);\r\n    const zoom = useSelector(getZoom);\r\n    const dispatch = useDispatch();\r\n    const borderColor = useSelector(getBorderColor);\r\n    let canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    let canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && size.width && size.height) {\r\n            canvasCtxRef.current = canvasRef.current.getContext('2d');\r\n            let ctx = canvasCtxRef.current;\r\n            ctx!.clearRect(0, 0, size.width, size.height);\r\n            ctx!.strokeStyle = borderColor;\r\n            ctx!.lineWidth = 4;\r\n            ctx!.strokeRect(0, 0, size.width, size.height);\r\n            dispatch(editorAC.setCanvasUrl('border', canvasRef.current.toDataURL()))\r\n        }\r\n    }, [size, borderColor]);\r\n\r\n    return {\r\n        classes, size, canvasRef, zoom\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCanvasBorder: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, size, canvasRef, zoom\r\n    } = useBannerCanvasBackground();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                size.width && size.height &&\r\n                <canvas\r\n                    className={classes.bannerCanvasBorder}\r\n                    ref={canvasRef}\r\n                    width={size.width}\r\n                    height={size.height}\r\n                    style={{\r\n                        transform: `scale(${zoom/100})`,\r\n                        transformOrigin: 'left top'\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n};\r\nexport default BannerCanvasBorder;\r\n\r\n//======================== STYLES ========================\r\nconst useStyles = makeStyles({\r\n    bannerCanvasBorder: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }\r\n});","import {StateType} from \"../store\";\r\n\r\nexport const getTexts = (state: StateType) => state.text.texts;\r\nexport const getSelectedTextId = (state: StateType) => state.text.selectedTextId;\r\n\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Field, InjectedFormProps, reduxForm, submit} from \"redux-form\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport {TextType} from \"../../../../../Types/types\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\n\r\n//================= CUSTOM FORM HOOK =========================\r\nconst useForm = (text: TextType) => {\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        setTimeout(() => dispatch(submit('text-form')));\r\n    };\r\n    const onBlurHandler = () => {\r\n        dispatch(textAC.setEditText(text.id, false));\r\n    };\r\n    const props = {\r\n        text: text\r\n    };\r\n    const classes = useStylesForm(props);\r\n    return {\r\n        onChangeHandler, classes, onBlurHandler,\r\n    }\r\n};\r\n\r\n//========================== FORM =======================================\r\nconst Form: React.FC<FormPropsType> = ({handleSubmit, text}) => {\r\n    const {\r\n        onChangeHandler, classes, onBlurHandler,\r\n    } = useForm(text);\r\n    return (\r\n        <form onSubmit={handleSubmit}\r\n              className={classes.form}\r\n        >\r\n            <Field name='text'\r\n                   component='input'\r\n                   type=\"text\"\r\n                   autoFocus={true}\r\n                   className={classes.field}\r\n                   onChange={onChangeHandler}\r\n                   onBlur={onBlurHandler}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\n//================================== REDUX-FORM ======================================\r\nconst ReduxForm = reduxForm<FormParamsType, FormOwnPropsType>({\r\n    form: 'text-form',\r\n})(Form);\r\n\r\n//======================== CUSTOM COMPONENT HOOK =========================\r\nconst useBannerTextForm = (id: number, content: string) => {\r\n    const dispatch = useDispatch();\r\n    const onSubmitHandler = (value: FormParamsType) => {\r\n        dispatch(textAC.setContent(id, value.text));\r\n    };\r\n    const initialValues = {\r\n        text: content\r\n    };\r\n    return {\r\n        onSubmitHandler, initialValues\r\n    }\r\n};\r\n\r\n//========================= COMPONENT =======================\r\nconst BannerTextForm: React.FC<ComponentPropsType> = ({text}) => {\r\n    const {\r\n        onSubmitHandler, initialValues\r\n    } = useBannerTextForm(text.id, text.content);\r\n    return (\r\n        <>\r\n            <ReduxForm onSubmit={onSubmitHandler}\r\n                       text={text}\r\n                       initialValues={initialValues}\r\n            />\r\n        </>\r\n    )\r\n};\r\nexport default BannerTextForm;\r\n\r\n//=================== TYPE ==============\r\ntype FormPropsType =\r\n    InjectedFormProps<FormParamsType, FormOwnPropsType>\r\n    & FormOwnPropsType;\r\ntype FormParamsType = {\r\n    text: string\r\n}\r\ntype FormOwnPropsType = {\r\n    text: TextType\r\n};\r\ntype ComponentPropsType = {\r\n    text: TextType\r\n}\r\n\r\n//================= STYLES ================\r\nconst useStylesForm = makeStyles({\r\n    form: (props: FormOwnPropsType) => ({\r\n        zIndex: 10,\r\n        position: 'absolute',\r\n        top: props.text.position.top,\r\n        left: props.text.position.left,\r\n    }),\r\n    field: (props: FormOwnPropsType) => ({\r\n        position: 'absolute',\r\n        fontSize: props.text.fontSize,\r\n        fontFamily: props.text.fontFamily,\r\n        lineHeight: `${props.text.fontSize}px`,\r\n        color: props.text.color,\r\n        top: 0,\r\n        left: 0,\r\n        backgroundColor: blue[50],\r\n        padding: 0,\r\n    }),\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n});\r\n","export const ItemTypes = {\r\n    TEXT: 'text'\r\n};\r\nexport type ItemType = {\r\n    type: string\r\n    id: number\r\n    x: number\r\n    y: number\r\n}","import {TextType} from \"../../../../../Types/types\";\r\nimport styled from \"styled-components\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport clsx from \"clsx\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {getRefLeftPanel, getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport BannerTextForm from \"./BannerTextForm\";\r\nimport {useDrag} from \"react-dnd\";\r\nimport {ItemTypes} from \"../../../../../DragAndDrop/Dnd\";\r\n\r\n//==================== STYLED ===================\r\nconst Span = styled.span`\r\n    position: absolute;\r\n    top: ${(props: PropsSpanType) => `${props.top * props.zoom / 100}px`};\r\n    left: ${(props: PropsSpanType) => `${props.left * props.zoom / 100}px`};\r\n    color: ${(props: PropsSpanType) => props.color};\r\n    font-size: ${(props: PropsSpanType) => `${props.fontSize * props.zoom / 100}px`};\r\n    line-height: ${(props: PropsSpanType) => `${props.fontSize * props.zoom / 100}px`};\r\n    font-family: ${(props: PropsSpanType) => props.fontFamily};\r\n    font-style: ${(props: PropsSpanType) => props.fontStyle};\r\n    user-select: none;\r\n`;\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerText = (text: TextType) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const wrapperRef = useRef(null);\r\n    const zoom = useSelector(getZoom);\r\n\r\n    const onMouseEnterHandler = () => {\r\n        dispatch(textAC.setHover(text.id, true))\r\n    };\r\n    const onMouseLeaveHandler = () => {\r\n        dispatch(textAC.setHover(text.id, false))\r\n    };\r\n\r\n    const onMouseDownHandler = () => {\r\n        dispatch(textAC.setSelected(text.id, true));\r\n\r\n    };\r\n    const onMouseUpHandler = () => {\r\n        dispatch(textAC.setSelected(text.id, false))\r\n    };\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(textAC.setEditParameters(text.id, true));\r\n        dispatch(textAC.setSelectedTextId(text.id))\r\n    };\r\n    const cb = () => {\r\n        dispatch(textAC.setEditParameters(text.id, false));\r\n    };\r\n    const onDoubleClickHandler = () => {\r\n        dispatch(textAC.setEditText(text.id, true));\r\n    };\r\n    const refLeftPanel = useSelector(getRefLeftPanel) as React.MutableRefObject<null>;\r\n    const onOutsideClickHandler = (event: MouseEvent): void => {\r\n        if (\r\n            // @ts-ignore\r\n            !wrapperRef.current.contains(event.target) &&\r\n            // @ts-ignore\r\n            !refLeftPanel.current.contains(event.target)\r\n        ) {\r\n            cb();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (text.editParameters) {\r\n            document.addEventListener(\"mousedown\", onOutsideClickHandler);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", onOutsideClickHandler);\r\n        };\r\n    }, [onOutsideClickHandler, text.editParameters]);\r\n\r\n    const [{isDragging}, dragRef] = useDrag({\r\n        item: {\r\n            id: text.id,\r\n            x: text.position.left,\r\n            y: text.position.top,\r\n            type: ItemTypes.TEXT\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    let content = text.content;\r\n    if (text.lowerCase) {\r\n        content = content.toLowerCase();\r\n    }\r\n    if (text.upperCase) {\r\n        content = content.toUpperCase();\r\n    }\r\n\r\n    return {\r\n        classes, onMouseEnterHandler, onMouseLeaveHandler,\r\n        onMouseDownHandler, onMouseUpHandler, wrapperRef,\r\n        onClickHandler, onDoubleClickHandler,\r\n        isDragging, dragRef, content, zoom\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCSSText: React.FC<PropsType> = ({text}) => {\r\n    const {\r\n        classes, onMouseEnterHandler, onMouseLeaveHandler,\r\n        onMouseDownHandler, onMouseUpHandler, wrapperRef,\r\n        onClickHandler, onDoubleClickHandler,\r\n        isDragging, dragRef, content, zoom\r\n    } = useBannerText(text);\r\n\r\n    if (isDragging) {\r\n        return <div ref={dragRef}/>\r\n    }\r\n\r\n    return (\r\n        <div ref={wrapperRef}>\r\n            {\r\n                text.editText &&\r\n                <BannerTextForm text={text}/>\r\n            }\r\n            <Span fontSize={text.fontSize}\r\n                  fontFamily={text.fontFamily}\r\n                  fontStyle={text.fontStyle}\r\n                  color={text.color}\r\n                  ref={dragRef}\r\n                  top={text.position.top}\r\n                  left={text.position.left}\r\n                  zoom={zoom}\r\n                  onMouseEnter={onMouseEnterHandler}\r\n                  onMouseLeave={onMouseLeaveHandler}\r\n                  onMouseDown={onMouseDownHandler}\r\n                  onMouseUp={onMouseUpHandler}\r\n                  onClick={onClickHandler}\r\n                  onDoubleClick={onDoubleClickHandler}\r\n                  className={clsx(\r\n                      text.hover && classes.hover,\r\n                      text.editParameters && classes.clicked,\r\n                      text.editText && classes.hide\r\n                  )}\r\n            >\r\n                {content}\r\n            </Span>\r\n        </div>\r\n    )\r\n};\r\nexport default BannerCSSText;\r\n\r\n//============== TYPE ================\r\ntype PropsType = {\r\n    text: TextType\r\n}\r\ntype PropsSpanType = {\r\n    top: number\r\n    left: number\r\n    fontSize: number\r\n    fontFamily: string\r\n    fontStyle: string\r\n    color: string\r\n    zoom: number\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    hover: {\r\n        outline: '1px solid #ccc',\r\n        cursor: 'move'\r\n    },\r\n    clicked: {\r\n        outline: '2px solid black',\r\n    },\r\n    protect: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0,0,0,0.5)'\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n","import React, {ReactElement} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getTexts} from \"../../../../../Store/selectors/text-selectors\";\r\nimport BannerCSSText from \"./BannerCSSText\";\r\n\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerTexts = () => {\r\n    const texts = useSelector(getTexts);\r\n    const textElements = texts.map(\r\n        el => <BannerCSSText key={el.id} text={el}/>\r\n    );\r\n    return {\r\n        textElements\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCSSTexts: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        textElements\r\n    } = useBannerTexts();\r\n    return (\r\n        <>\r\n            {textElements}\r\n        </>\r\n    )\r\n};\r\nexport default BannerCSSTexts;","import React, {ReactElement, useEffect, useRef} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getAlign,\r\n    getBackgroundStyle,\r\n    getBackgroundStyleColor, getColorEnd, getColorStart, getCurrentImage,\r\n    getGradientStyle, getScaleMode,\r\n    getSize\r\n} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerCanvasBackground = () => {\r\n    const classes = useStyles();\r\n    const size = useSelector(getSize);\r\n    const backgroundStyle = useSelector(getBackgroundStyle);\r\n    const backgroundStyleColor = useSelector(getBackgroundStyleColor);\r\n    const gradientStyle = useSelector(getGradientStyle);\r\n    const colorStart = useSelector(getColorStart);\r\n    const colorEnd = useSelector(getColorEnd);\r\n    const currentImage = useSelector(getCurrentImage);\r\n    const scaleMode = useSelector(getScaleMode);\r\n    const align = useSelector(getAlign);\r\n    const zoom = useSelector(getZoom);\r\n    let canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    let canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && size.width && size.height) {\r\n            canvasCtxRef.current = canvasRef.current.getContext('2d');\r\n            let ctx = canvasCtxRef.current;\r\n\r\n            //========== COLOR ============\r\n            if (backgroundStyle === 'color') {\r\n                ctx!.fillStyle = backgroundStyleColor.color;\r\n                ctx!.fillRect(0, 0, size.width, size.height);\r\n            }\r\n            //========== GRADIENT ==========\r\n            if (backgroundStyle === 'gradient') {\r\n                let gradient: CanvasGradient;\r\n                if (gradientStyle === 'horizontal') {\r\n                    gradient = ctx!.createLinearGradient(0, 0, size.width, 0);\r\n                } else if (gradientStyle === 'vertical') {\r\n                    gradient = ctx!.createLinearGradient(0, 0, 0, size.height);\r\n                } else {\r\n                    gradient = ctx!.createRadialGradient(\r\n                        size.width / 2, size.height / 2, 0,\r\n                        size.width / 2, size.height / 2, Math.sqrt((size.width * size.width) + (size.height * size.height)) / 2\r\n                    );\r\n                }\r\n                ;\r\n                ctx!.clearRect(0, 0, size.width, size.height);\r\n                gradient.addColorStop(0, colorStart);\r\n                gradient.addColorStop(1, colorEnd);\r\n                ctx!.fillStyle = gradient;\r\n                ctx!.fillRect(0, 0, size.width, size.height);\r\n            }\r\n            //============ IMAGE ===========\r\n            if (backgroundStyle === 'image') {\r\n                if (currentImage) {\r\n                    const cw = size.width as number;\r\n                    const ch = size.height as number;\r\n                    dispatch(editorAC.setIsLoading(true));\r\n                    const image = new Image();\r\n                    image.onload = () => {\r\n                        dispatch(editorAC.setIsLoading(false));\r\n                        const iw = image.width;\r\n                        const ih = image.height;\r\n\r\n                        let cx, cy, ix, iy;\r\n                        ctx!.clearRect(0, 0, cw, ch);\r\n                        ctx!.fillStyle = '#FFF';\r\n                        ctx!.fillRect(0, 0, cw, ch);\r\n                        //================= NO SCALE ================\r\n                        if (scaleMode === 'No scale') {\r\n                            cx = 0;\r\n                            cy = 0;\r\n                            ix = 0;\r\n                            iy = 0;\r\n                            switch (align) {\r\n                                case 'left-top': {\r\n                                    ix = 0;\r\n                                    iy = 0;\r\n                                    break\r\n                                }\r\n                                case 'center-top': {\r\n                                    ix = iw / 2 - cw / 2;\r\n                                    iy = 0;\r\n                                    break\r\n                                }\r\n                                case 'right-top': {\r\n                                    ix = iw - cw;\r\n                                    iy = 0;\r\n                                    break\r\n                                }\r\n                                case 'left-center': {\r\n                                    ix = 0;\r\n                                    iy = ih / 2 - ch / 2;\r\n                                    break\r\n                                }\r\n                                case 'center': {\r\n                                    ix = iw / 2 - cw / 2;\r\n                                    iy = ih / 2 - ch / 2;\r\n                                    break\r\n                                }\r\n                                case 'right-center': {\r\n                                    ix = iw - cw;\r\n                                    iy = ih / 2 - ch / 2;\r\n                                    break\r\n                                }\r\n                                case 'left-bottom': {\r\n                                    ix = 0;\r\n                                    iy = ih - ch;\r\n                                    break\r\n                                }\r\n                                case 'center-bottom': {\r\n                                    ix = iw / 2 - cw / 2;\r\n                                    iy = ih - ch;\r\n                                    break\r\n                                }\r\n                                case 'right-bottom': {\r\n                                    ix = iw - cw;\r\n                                    iy = ih - ch;\r\n                                    break\r\n                                }\r\n                            }\r\n                            ctx!.drawImage(image, ix, iy, cw, ch, cx, cy, cw, ch);\r\n                            //================= EXACT FIT ================\r\n                        } else if (scaleMode === 'Exact fit') {\r\n                            ctx!.drawImage(image, 0, 0, iw, ih, 0, 0, cw, ch);\r\n                            //================= MAINTAIN ASPECT ================\r\n                        } else if (scaleMode === 'Maintain aspect') {\r\n                            if (iw / ih > cw / ch) { // изображение длиннее канваса\r\n                                const ch1 = cw * ih / iw;\r\n                                switch (align) {\r\n                                    case 'left-top':\r\n                                    case 'center-top':\r\n                                    case 'right-top': {\r\n                                        cy = 0;\r\n                                        break\r\n                                    }\r\n                                    case 'left-center':\r\n                                    case 'center':\r\n                                    case 'right-center': {\r\n                                        cy = (ch - ch1) / 2;\r\n                                        break\r\n                                    }\r\n                                    case 'left-bottom':\r\n                                    case 'center-bottom':\r\n                                    case 'right-bottom': {\r\n                                        cy = ch - ch1;\r\n                                        break\r\n                                    }\r\n                                }\r\n                                ctx!.drawImage(image, 0, 0, iw, ih, 0, cy, cw, ch1);\r\n                            } else if (iw / ih < cw / ch) {\r\n                                const cw1 = iw * ch / ih;\r\n                                switch (align) {\r\n                                    case 'left-top':\r\n                                    case 'left-center':\r\n                                    case 'left-bottom': {\r\n                                        cx = 0;\r\n                                        break\r\n                                    }\r\n                                    case 'center-top':\r\n                                    case 'center':\r\n                                    case 'center-bottom': {\r\n                                        cx = (cw - cw1) / 2;\r\n                                        break\r\n                                    }\r\n                                    case 'right-top':\r\n                                    case 'right-center':\r\n                                    case 'right-bottom': {\r\n                                        cx = cw - cw1;\r\n                                        break\r\n                                    }\r\n                                    default:\r\n                                        cx = 0;\r\n                                }\r\n                                ctx!.drawImage(image, 0, 0, iw, ih, cx, 0, cw1, ch);\r\n                            } else { // iw / ih = cw / ch\r\n                                ctx!.drawImage(image, 0, 0, iw, ih, 0, 0, cw, ch);\r\n                            }\r\n                        } else if (scaleMode === 'Scale crop') {\r\n                            if (iw / ih > cw / ch) {\r\n                                const iw1 = ih * cw / ch;\r\n                                switch (align) {\r\n                                    case 'left-top':\r\n                                    case 'left-center':\r\n                                    case 'left-bottom': {\r\n                                        ix = 0;\r\n                                        break\r\n                                    }\r\n                                    case 'center-top':\r\n                                    case 'center':\r\n                                    case 'center-bottom': {\r\n                                        ix = (iw - iw1) / 2;\r\n                                        break\r\n                                    }\r\n                                    case 'right-top':\r\n                                    case 'right-center':\r\n                                    case 'right-bottom': {\r\n                                        ix = iw - iw1;\r\n                                        break\r\n                                    }\r\n                                    default:\r\n                                        ix = 0;\r\n                                }\r\n                                ctx!.drawImage(image, ix, 0, iw1, ih, 0, 0, cw, ch);\r\n                            } else if (iw / ih < cw / ch) {\r\n                                const ih1 = iw * ch / cw;\r\n                                switch (align) {\r\n                                    case 'left-top':\r\n                                    case 'center-top':\r\n                                    case 'right-top': {\r\n                                        iy = 0;\r\n                                        break\r\n                                    }\r\n                                    case 'left-center':\r\n                                    case 'center':\r\n                                    case 'right-center': {\r\n                                        iy = (ih - ih1) / 2;\r\n                                        break\r\n                                    }\r\n                                    case 'left-bottom':\r\n                                    case 'center-bottom':\r\n                                    case 'right-bottom': {\r\n                                        iy = ih - ih1;\r\n                                        break\r\n                                    }\r\n                                }\r\n                                ctx!.drawImage(image, 0, iy, iw, ih1, 0, 0, cw, ch);\r\n                            } else { //iw / ih = cw / ch\r\n                                ctx!.drawImage(image, 0, 0, iw, ih, 0, 0, cw, ch);\r\n                            }\r\n                        }\r\n                    };\r\n                    image.src = currentImage.src;\r\n                }\r\n            }\r\n            dispatch(editorAC.setCanvasUrl('background', canvasRef.current.toDataURL()))\r\n        }\r\n    }, [\r\n        size, backgroundStyle, backgroundStyleColor,\r\n        gradientStyle, colorStart, colorEnd, currentImage,\r\n        scaleMode, align\r\n    ]);\r\n    return {\r\n        classes, size, canvasRef, zoom\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCanvasBackground: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, size, canvasRef, zoom\r\n    } = useBannerCanvasBackground();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                size.width && size.height &&\r\n                <canvas\r\n                    className={classes.bannerCanvasBackground}\r\n                    ref={canvasRef}\r\n                    width={size.width}\r\n                    height={size.height}\r\n                    style={{\r\n                        transform: `scale(${zoom / 100})`,\r\n                        transformOrigin: 'left top'\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst BannerCanvasBackgroundMemo = React.memo(BannerCanvasBackground);\r\nexport default BannerCanvasBackgroundMemo;\r\n\r\n//======================== STYLES ========================\r\nconst useStyles = makeStyles({\r\n    bannerCanvasBackground: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }\r\n});","import React, {ReactElement, useEffect, useRef} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSize} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {getTexts} from \"../../../../../Store/selectors/text-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerCanvasTexts = () => {\r\n    const classes = useStyles();\r\n    const size = useSelector(getSize);\r\n    const texts = useSelector(getTexts);\r\n    let canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    let canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && size.width && size.height) {\r\n            canvasCtxRef.current = canvasRef.current.getContext('2d');\r\n            let ctx = canvasCtxRef.current;\r\n            ctx!.clearRect(0, 0, size.width, size.height);\r\n\r\n            for (let i = 0; i < texts.length; i++) {\r\n                let content = texts[i].content;\r\n                if (texts[i].lowerCase) {\r\n                    content = content.toLowerCase();\r\n                }\r\n                if (texts[i].upperCase) {\r\n                    content = content.toUpperCase();\r\n                }\r\n\r\n                ctx!.fillStyle = texts[i].color;\r\n                ctx!.font = `${texts[i].fontStyle} ${texts[i].fontSize}px ${texts[i].fontFamily}`;\r\n                ctx!.fillText(content, texts[i].position.left, texts[i].position.top);\r\n                ctx!.textBaseline = 'top';\r\n            }\r\n\r\n            dispatch(editorAC.setCanvasUrl('text', canvasRef.current.toDataURL()))\r\n        }\r\n    }, [texts]);\r\n\r\n    return {\r\n        classes, size, canvasRef\r\n    }\r\n}\r\n\r\n\r\n//============== COMPONENT =================\r\nconst BannerCanvasTexts: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, size, canvasRef\r\n    } = useBannerCanvasTexts();\r\n    return (\r\n        <>\r\n            {\r\n                size.width && size.height &&\r\n                <canvas\r\n                    className={classes.bannerCanvasTexts}\r\n                    ref={canvasRef}\r\n                    width={size.width}\r\n                    height={size.height}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst BannerCanvasTextsMemo = React.memo(BannerCanvasTexts);\r\nexport default BannerCanvasTextsMemo;\r\n\r\n//======================== STYLES ========================\r\nconst useStyles = makeStyles({\r\n    bannerCanvasTexts: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }\r\n});","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSize, getUseBorder} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport BannerCanvasBorder from \"./BannerCanvasBorder\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {ZoomType} from \"../../../../../Types/types\";\r\nimport BannerCSSTexts from \"../BannerCSS/BannerCSSTexts\";\r\nimport BannerCanvasBackgroundMemo from \"./BannerCanvasBackground\";\r\nimport {useDrop, XYCoord} from \"react-dnd\";\r\nimport {ItemType, ItemTypes} from \"../../../../../DragAndDrop/Dnd\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport BannerCanvasTextsMemo from \"./BannerCanvasTexts\";\r\n\r\nconst Div = styled.div`\r\n  width: ${(props: PropsType) => props.width ? `${props.width * props.zoom / 100}px` : '0px'};\r\n  height: ${(props: PropsType) => props.height ? `${props.height * props.zoom / 100}px` : '0px'};\r\n  position: relative;\r\n  //margin: 50px;\r\n`;\r\n\r\n//=================== CUSTOM HOOK =======================\r\nconst useBannerCanvasWrapper = () => {\r\n    const size = useSelector(getSize);\r\n    const useBorder = useSelector(getUseBorder);\r\n    const zoom = useSelector(getZoom);\r\n    const dispatch = useDispatch();\r\n    const [, dropRef] = useDrop({\r\n        accept: ItemTypes.TEXT,\r\n        drop(item: ItemType, monitor) {\r\n            const positionCursorDifference = monitor.getDifferenceFromInitialOffset() as XYCoord;\r\n            const posDiffZoom = {\r\n                x: positionCursorDifference.x * 100 / zoom,\r\n                y: positionCursorDifference.y * 100 / zoom,\r\n            };\r\n            dispatch(textAC.setPosition(item.id, posDiffZoom as XYCoord))\r\n        }\r\n    });\r\n    return {\r\n        size, useBorder, zoom, dropRef\r\n    }\r\n};\r\n\r\n//==================== COMPONENT ==========================\r\nconst BannerCanvasWrapper: React.FC<{}> = () => {\r\n    const {\r\n        size, useBorder, zoom, dropRef\r\n    } = useBannerCanvasWrapper();\r\n    return (\r\n        <Div width={size.width}\r\n             height={size.height}\r\n             zoom={zoom}\r\n             ref={dropRef}\r\n        >\r\n            <BannerCanvasBackgroundMemo/>\r\n            <BannerCanvasTextsMemo/>\r\n            {\r\n                useBorder &&\r\n                <BannerCanvasBorder/>\r\n            }\r\n            <BannerCSSTexts/>\r\n        </Div>\r\n    )\r\n};\r\nexport default BannerCanvasWrapper;\r\n\r\n//================= TYPE ==================\r\ntype PropsType = {\r\n    width: number | null\r\n    height: number | null\r\n    zoom: ZoomType\r\n}","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {textAC} from \"../../../../../../Store/reducers/text-reducer\";\r\n\r\n//======================== CUSTOM HOOK ============================\r\nconst useButtonFontStyle = (selectedTextId: number, fontStyle: 'normal' | 'italic') => {\r\n    const classes = useStyles();\r\n    const variant = (fontStyle === 'italic' ? 'outlined' : 'text') as 'outlined' | 'text';\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(textAC.setFontStyle(selectedTextId, fontStyle === 'italic' ? 'normal' : 'italic'))\r\n    };\r\n\r\n    return {\r\n        classes, onClickHandler, variant\r\n    }\r\n}\r\n\r\n\r\n//======================== COMPONENT ==============================\r\nconst ButtonFontStyle: React.FC<PropsType> = ({selectedTextId, fontStyle}) => {\r\n    const {\r\n        classes, onClickHandler, variant\r\n    } = useButtonFontStyle(selectedTextId, fontStyle);\r\n\r\n    return (\r\n        <Button size='small'\r\n                variant={variant}\r\n                className={classes.button}\r\n                onClick={onClickHandler}\r\n        >\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n            >\r\n                T\r\n            </Typography>\r\n        </Button>\r\n\r\n    )\r\n};\r\nexport default ButtonFontStyle\r\n\r\n//======================== TYPE =========================\r\ntype PropsType = {\r\n    selectedTextId: number\r\n    fontStyle: 'normal' | 'italic'\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 42\r\n    },\r\n    typography: {\r\n        fontStyle: 'italic'\r\n    }\r\n});\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {textAC} from \"../../../../../../Store/reducers/text-reducer\";\r\n\r\n//======================== CUSTOM HOOK ============================\r\nconst useButtonFontStyle = (selectedTextId: number, lowerCase: boolean) => {\r\n    const classes = useStyles();\r\n    const variant = (lowerCase ? 'outlined' : 'text') as 'outlined' | 'text';\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(textAC.setLowerCase(selectedTextId, lowerCase ? false : true));\r\n        if (!lowerCase) {\r\n            dispatch(textAC.setUpperCase(selectedTextId, false))\r\n        }\r\n    };\r\n\r\n    return {\r\n        classes, onClickHandler, variant\r\n    }\r\n};\r\n\r\n//======================== COMPONENT ==============================\r\nconst ButtonLowerCase: React.FC<PropsType> = ({selectedTextId, lowerCase}) => {\r\n    const {\r\n        classes, onClickHandler, variant\r\n    } = useButtonFontStyle(selectedTextId, lowerCase);\r\n\r\n    return (\r\n        <Button size='small'\r\n                variant={variant}\r\n                className={classes.button}\r\n                onClick={onClickHandler}\r\n        >\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n\r\n            >\r\n                t\r\n            </Typography>\r\n        </Button>\r\n\r\n    )\r\n};\r\nexport default ButtonLowerCase\r\n\r\n//======================== TYPE =========================\r\ntype PropsType = {\r\n    selectedTextId: number\r\n    lowerCase: boolean\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 42\r\n    },\r\n    typography: {\r\n        textTransform: 'none'\r\n    }\r\n});\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {textAC} from \"../../../../../../Store/reducers/text-reducer\";\r\n\r\n//======================== CUSTOM HOOK ============================\r\nconst useButtonUpperCase = (selectedTextId: number, upperCase: boolean) => {\r\n    const classes = useStyles();\r\n    const variant = (upperCase ? 'outlined' : 'text') as 'outlined' | 'text';\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(textAC.setUpperCase(selectedTextId, upperCase ? false : true));\r\n        if (!upperCase) {\r\n            dispatch(textAC.setLowerCase(selectedTextId, false))\r\n        }\r\n    };\r\n\r\n    return {\r\n        classes, onClickHandler, variant\r\n    }\r\n};\r\n\r\n//======================== COMPONENT ==============================\r\nconst ButtonUpperCase: React.FC<PropsType> = ({selectedTextId, upperCase}) => {\r\n    const {\r\n        classes, onClickHandler, variant\r\n    } = useButtonUpperCase(selectedTextId, upperCase);\r\n\r\n    return (\r\n        <Button size='small'\r\n                variant={variant}\r\n                className={classes.button}\r\n                onClick={onClickHandler}\r\n        >\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n\r\n            >\r\n                T\r\n            </Typography>\r\n        </Button>\r\n\r\n    )\r\n};\r\nexport default ButtonUpperCase\r\n\r\n//======================== TYPE =========================\r\ntype PropsType = {\r\n    selectedTextId: number\r\n    upperCase: boolean\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 42\r\n    },\r\n    typography: {\r\n        textTransform: 'none'\r\n    }\r\n});\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\nimport {getSelectedTextId, getTexts} from \"../../../../../../Store/selectors/text-selectors\";\r\nimport {TextType} from \"../../../../../../Types/types\";\r\nimport {textAC} from \"../../../../../../Store/reducers/text-reducer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ButtonFontStyle from \"./ButtonFontStyle\";\r\nimport ButtonLowerCase from \"./ButtonLowerCase\";\r\nimport ButtonUpperCase from \"./ButtonUpperCase\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useLeftPanelText = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const textLabel = translate(lang, 'Text');\r\n    const fontSizeLabel = translate(lang, 'Font size (px)');\r\n    const texts = useSelector(getTexts);\r\n    const selectedTextId = useSelector(getSelectedTextId);\r\n    const value = (texts.find(el => el.id === selectedTextId) as TextType).fontSize;\r\n    const fontStyle = (texts.find(el => el.id === selectedTextId) as TextType).fontStyle;\r\n    const lowerCase = (texts.find(el => el.id === selectedTextId) as TextType).lowerCase;\r\n    const upperCase = (texts.find(el => el.id === selectedTextId) as TextType).upperCase;\r\n    const dispatch = useDispatch();\r\n    const handleChange = (e: any, value: number | number[]) => {\r\n        dispatch(textAC.setFontSize(selectedTextId as number, value as number));\r\n    };\r\n    const values = [] as Array<number>;\r\n    for (let i = 6; i <= 300; i = i + 2) {\r\n        values.push(i);\r\n    }\r\n    const optionElements = values.map(\r\n        el => <option key={el} value={el}>{el}</option>\r\n    );\r\n    const onChangeSelectHandle = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        dispatch(textAC.setFontSize(selectedTextId as number, event.target.value as number));\r\n    };\r\n    return {\r\n        classes, textLabel, fontSizeLabel, value,\r\n        handleChange, optionElements, fontStyle,\r\n        onChangeSelectHandle, selectedTextId,\r\n        lowerCase, upperCase\r\n    }\r\n};\r\n\r\n\r\n//============== COMPONENT =================\r\nconst LeftPanelText: React.FC<{}> = () => {\r\n    const {\r\n        classes, textLabel, fontSizeLabel,\r\n        value, handleChange, optionElements,\r\n        onChangeSelectHandle, selectedTextId,\r\n        fontStyle, lowerCase, upperCase\r\n    } = useLeftPanelText();\r\n    return (\r\n        <div className={classes.LeftPanelText}>\r\n            <Typography variant='subtitle2'\r\n                        className={classes.typography}\r\n            >\r\n                {textLabel}\r\n            </Typography>\r\n\r\n            <div className={classes.form}>\r\n                <Typography variant='body2'>\r\n                    {fontSizeLabel}\r\n                </Typography>\r\n                <Slider className={classes.slider}\r\n                        min={6}\r\n                        max={300}\r\n                        step={2}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                />\r\n\r\n                <div className={classes.formControlWrapper}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl} size='small'>\r\n                        <Select\r\n                            native\r\n                            value={value}\r\n                            onChange={onChangeSelectHandle}\r\n                        >\r\n                            {optionElements}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className={classes.fontStyleBlock}>\r\n                    <ButtonFontStyle selectedTextId={selectedTextId as number}\r\n                                     fontStyle={fontStyle}\r\n                    />\r\n                    <ButtonLowerCase selectedTextId={selectedTextId as number}\r\n                                     lowerCase={lowerCase}/>\r\n                    <ButtonUpperCase selectedTextId={selectedTextId as number}\r\n                                     upperCase={upperCase}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default LeftPanelText;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    LeftPanelText: {\r\n        width: 200,\r\n        border: '1px solid #ccc',\r\n        backgroundColor: '#FFF',\r\n        borderRadius: 5,\r\n        overflow: 'hidden'\r\n    },\r\n    typography: {\r\n        backgroundColor: grey[300],\r\n        padding: '10px 20px'\r\n    },\r\n    form: {\r\n        padding: '10px 20px'\r\n    },\r\n    slider: {\r\n        margin: '10px 0',\r\n    },\r\n    formControlWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    formControl: {\r\n        margin: 5,\r\n        minWidth: 60,\r\n    },\r\n    fontStyleBlock: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly'\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {HexColorPicker} from \"react-colorful\";\r\nimport './../../../../../css/styles.css';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSelectedTextId, getTexts} from \"../../../../../Store/selectors/text-selectors\";\r\nimport {TextType} from \"../../../../../Types/types\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\n\r\n//===================== CUSTOM HOOK ===================\r\nconst useLeftPanelColor = () => {\r\n    const lang = useSelector(getLang);\r\n    const titleLabel = translate(lang, 'Color')\r\n    const texts = useSelector(getTexts);\r\n    const selectedTextId = useSelector(getSelectedTextId);\r\n    const color = (texts.find(el => el.id === selectedTextId) as TextType).color;\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = (newColor: string) => {\r\n        dispatch(textAC.setColor(selectedTextId as number, newColor));\r\n    };\r\n    const classes = useStyles();\r\n    return {\r\n        color, classes, titleLabel, onChangeHandler\r\n    }\r\n};\r\n\r\n//==================== COMPONENT ======================\r\nconst LeftPanelColor: React.FC<{}> = () => {\r\n    const {\r\n        color, classes, titleLabel, onChangeHandler,\r\n    } = useLeftPanelColor();\r\n\r\n    return (\r\n        <div className={classes.leftPanelColor}>\r\n            <Typography variant='subtitle2'\r\n                        className={classes.typography}>\r\n                {titleLabel}\r\n            </Typography>\r\n            <div className={classes.form}>\r\n                <HexColorPicker color={color}\r\n                                onChange={onChangeHandler}\r\n                                className={classes.colorPicker}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default LeftPanelColor;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    leftPanelColor: {\r\n        width: 200,\r\n        border: '1px solid #ccc',\r\n        backgroundColor: '#FFF',\r\n        borderRadius: 5,\r\n        overflow: 'hidden'\r\n    },\r\n    typography: {\r\n        backgroundColor: grey[300],\r\n        padding: '10px 20px'\r\n    },\r\n    form: {\r\n        padding: '20px 20px'\r\n    },\r\n    colorPicker: {\r\n        width: 160,\r\n        height: 160\r\n    }\r\n});","import React, {useEffect, useRef, useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {List} from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport clsx from \"clsx\";\r\nimport LeftPanelText from \"./LeftPanelText/LeftPanelText\";\r\nimport LeftPanelColor from \"./LeftPanelColor\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport {getSelectedTextId} from \"../../../../../Store/selectors/text-selectors\";\r\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useLeftPanel = () => {\r\n    const [leftPanelIndex, setLeftPanelIndex] = useState(-1)\r\n    const classes = useStyles();\r\n    const selectedTextId = useSelector(getSelectedTextId) as number;\r\n    const onClickHandler = [];\r\n    onClickHandler[0] = () => {\r\n        setLeftPanelIndex(0);\r\n    };\r\n    onClickHandler[1] = () => {\r\n        setLeftPanelIndex(1);\r\n    };\r\n    onClickHandler[2] = () => {\r\n        setLeftPanelIndex(2);\r\n        dispatch(textAC.removeText(selectedTextId))\r\n    };\r\n    const refLeftPanel = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(workspaceAC.setRefLeftPanel(refLeftPanel))\r\n    });\r\n    const lang = useSelector(getLang);\r\n    const textLabel = translate(lang, 'Text');\r\n    const colorLabel = translate(lang, 'Color');\r\n    const deleteLabel = translate(lang, 'Delete');\r\n    return {\r\n        classes, leftPanelIndex, onClickHandler,\r\n        refLeftPanel, textLabel, colorLabel,\r\n        deleteLabel\r\n    }\r\n}\r\n\r\n//============== COMPONENT =================\r\nconst LeftPanel: React.FC<{}> = () => {\r\n    const {\r\n        classes, leftPanelIndex, onClickHandler,\r\n        refLeftPanel, textLabel, colorLabel,\r\n        deleteLabel\r\n    } = useLeftPanel();\r\n\r\n    return (\r\n        <div className={classes.leftPanel} ref={refLeftPanel}>\r\n\r\n            <List className={classes.list}>\r\n\r\n                <Tooltip title={textLabel} placement=\"right\" arrow\r\n                         classes={{\r\n                             tooltip: classes.tooltip,\r\n                             arrow: classes.arrow\r\n                         }}>\r\n                    <ListItem button\r\n                              className={classes.listItem}\r\n                              onClick={onClickHandler[0]}\r\n                              selected={leftPanelIndex === 0}>\r\n                        <ListItemIcon>\r\n                            <TextFieldsIcon\r\n                                className={clsx(classes.icon, leftPanelIndex === 0 && classes.iconSelected)}/>\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </Tooltip>\r\n\r\n                <Tooltip title={colorLabel} placement=\"right\" arrow\r\n                         classes={{\r\n                             tooltip: classes.tooltip,\r\n                             arrow: classes.arrow\r\n                         }}>\r\n                    <ListItem button\r\n                              className={classes.listItem}\r\n                              onClick={onClickHandler[1]}\r\n                              selected={leftPanelIndex === 1}>\r\n                        <ListItemIcon>\r\n                            <ColorLensIcon\r\n                                className={clsx(classes.icon, leftPanelIndex === 1 && classes.iconSelected)}/>\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </Tooltip>\r\n\r\n                <Tooltip title={deleteLabel} placement=\"right\" arrow\r\n                         classes={{\r\n                             tooltip: classes.tooltip,\r\n                             arrow: classes.arrow\r\n                         }} >\r\n                    <ListItem button\r\n                              className={classes.listItem}\r\n                              onClick={onClickHandler[2]}\r\n                              selected={leftPanelIndex === 2}>\r\n                        <ListItemIcon>\r\n                            <DeleteForeverIcon\r\n                                className={clsx(classes.icon, leftPanelIndex === 2 && classes.iconSelected)}/>\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </Tooltip>\r\n\r\n            </List>\r\n\r\n            <div>\r\n                {\r\n                    leftPanelIndex === 0 && <LeftPanelText/>\r\n                }\r\n                {\r\n                    leftPanelIndex === 1 && <LeftPanelColor/>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default LeftPanel;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    leftPanel: {\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 10,\r\n        left: 10,\r\n        display: 'flex',\r\n        alignItems: 'flex-start'\r\n    },\r\n    list: {\r\n        width: 60,\r\n        border: '1px solid #ccc',\r\n        backgroundColor: '#FFF',\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        marginRight: 5,\r\n        padding: 0\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: grey[400]\r\n        },\r\n        '&.Mui-selected:hover': {\r\n            backgroundColor: indigo[500],\r\n        },\r\n        '&.Mui-selected': {\r\n            backgroundColor: indigo[500],\r\n        },\r\n    },\r\n    icon: {\r\n        color: grey[800]\r\n    },\r\n    iconSelected: {\r\n        color: '#FFF'\r\n    },\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n});\r\n\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport BannerCanvasWrapper from \"../Banner/BannerCanvas/BannerCanvasWrapper\";\r\nimport {mainSidebarWidth, secondSidebarWidth} from \"../../../../Utils/CONST\";\r\nimport LeftPanel from \"./LeftPanel/LeftPanel\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getTexts} from \"../../../../Store/selectors/text-selectors\";\r\nimport styled from \"styled-components\";\r\nimport {getShowSecondSidebar, getSize} from \"../../../../Store/selectors/editor-selectors\";\r\nimport {getZoom} from \"../../../../Store/selectors/workspace-selectors\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useEditorWorkspace = () => {\r\n    const texts = useSelector(getTexts);\r\n    const leftPanelIsShow = !!texts.find(el => el.editParameters === true);\r\n    const showSecondSidebar = useSelector(getShowSecondSidebar);\r\n    const size = useSelector(getSize);\r\n    const zoom = useSelector(getZoom);\r\n    return {\r\n        leftPanelIsShow, size, zoom,\r\n        showSecondSidebar\r\n    }\r\n};\r\n\r\nconst Row1 = styled.div`\r\n    display: flex;\r\n    min-height: 50px;\r\n    flex-shrink: 0;\r\n    flex-grow: 1; \r\n`;\r\n\r\nconst Div1 = styled.div`\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n    box-sizing: border-box;\r\n    //border: 5px solid red;\r\n    flex-shrink: 0;\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst Div2 = styled.div`\r\n    width: ${(props: { width: number, zoom: number }) => `${props.width * props.zoom / 100}px`};\r\n    min-height: 50px;\r\n    box-sizing: border-box;\r\n    //border: 5px solid red;\r\n    flex-shrink: 0;\r\n`;\r\n\r\nconst Row2 = styled.div`\r\n    display: flex;\r\n    //height: 50px;\r\n    flex-shrink: 0; \r\n`;\r\n\r\nconst Div3 = styled.div`\r\n    height: ${(props: { height: number, zoom: number }) => `${props.height * props.zoom / 100}px`};\r\n    min-width: 50px;\r\n    box-sizing: border-box;\r\n    //border: 5px solid red;\r\n    flex-shrink: 0;\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst WorkspaceDiv = styled.div`\r\n        flex-grow: 1;\r\n        display: flex;\r\n        flex-direction: column;\r\n        position: relative;\r\n        width: ${\r\n    (\r\n        props: { showSecondSidebar: boolean }\r\n    ) => `calc(100vw - ${mainSidebarWidth}px - ${secondSidebarWidth * (props.showSecondSidebar ? 1 : 0)}px)`\r\n};\r\n        box-sizing: border-box;\r\n        overflow: auto;\r\n`\r\n\r\n//============== COMPONENT =================\r\nconst Workspace: React.FC<{}> = () => {\r\n    const {\r\n        leftPanelIsShow, size,\r\n        zoom, showSecondSidebar\r\n    } = useEditorWorkspace();\r\n\r\n    return (\r\n        <WorkspaceDiv showSecondSidebar={showSecondSidebar}>\r\n            <Row1>\r\n                <Div1/>\r\n                <Div2 width={size.width as number} zoom={zoom}/>\r\n                <Div1/>\r\n            </Row1>\r\n            <Row2>\r\n                <Div3 height={size.height as number} zoom={zoom}/>\r\n                <BannerCanvasWrapper/>\r\n                <Div3 height={size.height as number} zoom={zoom}/>\r\n            </Row2>\r\n            <Row1>\r\n                <Div1/>\r\n                <Div2 width={size.width as number} zoom={zoom}/>\r\n                <Div1/>\r\n            </Row1>\r\n\r\n            {\r\n                leftPanelIsShow &&\r\n                <LeftPanel/>\r\n            }\r\n        </WorkspaceDiv>\r\n    )\r\n};\r\n\r\nexport default Workspace;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getShowSecondSidebar} from \"../../../Store/selectors/editor-selectors\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\nimport MainSidebar from \"./MainSidebar/MainSidebar\";\r\nimport {mainSidebarWidth, secondSidebarWidth} from \"../../../Utils/CONST\";\r\nimport SecondarySidebar from \"./SecondarySidebar/SecondarySidebar\";\r\nimport clsx from \"clsx\";\r\nimport Toolbar from \"./Toolbar/Toolbar\";\r\nimport Workspace from \"./Workspace/Workspace\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useEditor = () => {\r\n    const classes = useStyles();\r\n    const showSecondSidebar = useSelector(getShowSecondSidebar)\r\n    return {classes, showSecondSidebar}\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Editor:React.FC<{}> = () => {\r\n    const {\r\n        classes, showSecondSidebar\r\n    } = useEditor();\r\n    return (\r\n        <div className={classes.editor}>\r\n            <div className={classes.mainSidebar}>\r\n                <MainSidebar/>\r\n            </div>\r\n            <div className={clsx(classes.secondSidebarWrapper, !showSecondSidebar && classes.secondSidebarWrapperHide)}>\r\n                <div className={classes.secondSidebar}>\r\n                    <SecondarySidebar/>\r\n                </div>\r\n            </div>\r\n            <div className={classes.workspace} >\r\n                <Toolbar/>\r\n                <Workspace/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Editor;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    editor: {\r\n        display: 'flex',\r\n        height: 'calc(100vh - 64px)',\r\n        width: '100vw'\r\n    },\r\n    mainSidebar: {\r\n        width: mainSidebarWidth,\r\n        flexShrink: 0,\r\n        backgroundColor: brown[800],\r\n        height: 'calc(100vh - 64px)',\r\n    },\r\n    secondSidebarWrapper: {\r\n        width: secondSidebarWidth,\r\n        flexShrink: 0,\r\n        backgroundColor: brown[600],\r\n        position: 'relative',\r\n        transition: 'width .3s',\r\n        overflow: 'hidden',\r\n        height: 'calc(100vh - 64px)',\r\n    },\r\n    secondSidebarWrapperHide: {\r\n        width: 0,\r\n    },\r\n    secondSidebar: {\r\n        position: 'absolute',\r\n        width: secondSidebarWidth,\r\n        right: 0,\r\n        height: 'calc(100vh - 64px)',\r\n    },\r\n    workspace: {\r\n        flexGrow: 1,\r\n        width: `calc(100vw - ${mainSidebarWidth}px - ${secondSidebarWidth}px)`,\r\n        height: 'calc(100vh - 64px)',\r\n        backgroundColor: grey[200],\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    }\r\n});\r\n","import {ReactElement} from \"react\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport PageNotFound from \"../common/PageNotFound\";\r\nimport CreateNew from \"./CreateNew/CreateNew\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Editor from \"./Editor/Editor\";\r\n\r\n//======================== CUSTOM HOOK =========================\r\nconst useMain = () => {\r\n    const classes = useStyles();\r\n    return {classes}\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst Main: React.FC<{}> = (): ReactElement => {\r\n    const {classes} = useMain();\r\n    return (\r\n        <main className={classes.main}>\r\n                <Switch>\r\n                    <Route exact path='/' render={() => <CreateNew/>}/>\r\n                    <Route path='/editor' render={() => <Editor/>}/>\r\n                    <Route path='*' render={() => <PageNotFound/>}/>\r\n                </Switch>\r\n        </main>\r\n    )\r\n};\r\nexport default Main;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    main: {\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        height: 'calc(100vh - 64px)',\r\n        width: '100vw'\r\n    }\r\n});","import React, {ReactElement, useEffect} from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport Header from \"./Components/Header/Header\";\nimport Main from \"./Components/Main/Main\";\n\n//======================== CUSTOM HOOK =========================\nconst useApp = () => {\n    const classes = useStyles();\n    const catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n        alert(e);\n    };\n    useEffect(() => {\n        window.addEventListener('unhandledrejection', catchAllUnhandledErrors);\n        return () => {\n            window.removeEventListener('unhandledrejection', catchAllUnhandledErrors);\n        }\n    }, []);\n\n\n    return {\n        classes\n    }\n};\n\n\nconst App: React.FC<{}> = (): ReactElement => {\n    const {\n        classes\n    } = useApp();\n    return (\n        <div className={classes.app}>\n            <Header/>\n            <Main/>\n        </div>\n    );\n};\nexport default App;\n\n//============================= STYLE ==========================\nconst useStyles = makeStyles({\n    app: {\n        height: '100vh',\n        width: '100vw'\n    },\n});\n\n","import {Action, applyMiddleware, combineReducers, createStore, Middleware} from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport appReducer from \"./reducers/app-reducer\";\r\nimport editorReducer from \"./reducers/editor-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport workspaceReducer from \"./reducers/workspace-reducer\";\r\nimport textReducer from \"./reducers/text-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    editor: editorReducer,\r\n    workspace: workspaceReducer,\r\n    text: textReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst middleware: Array<Middleware> = [thunkMiddleware];\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\r\nexport default store;\r\n\r\n//======================== TYPE ==========================\r\nexport type StateType = ReturnType<typeof rootReducer>\r\nexport type GetActionsType<T> = T extends {[key: string]: (...args: any[]) => infer U } ? U : never\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, StateType, unknown, A>","import React from 'react';\r\nimport {ErrorInfo} from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component<PropsType, StateType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            errorInfo: null\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            return (\r\n                <div>\r\n                    <h2>Something went wrong</h2>\r\n                    <details style={{whiteSpace: 'pre-wrap'}}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                    </details>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n//==================== TYPES ========================\r\ntype PropsType = {};\r\ntype StateType = {\r\n    error: null | Error\r\n    errorInfo: null | ErrorInfo\r\n}","import {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport React, {ReactElement} from \"react\";\r\nimport App from \"./App\";\r\nimport store from \"./Store/store\";\r\nimport ErrorBoundary from \"./Components/common/ErrorBoundary\";\r\nimport {CssBaseline} from \"@material-ui/core\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\n\r\nconst AppContainer: React.FC = (): ReactElement => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <ErrorBoundary>\r\n                    <CssBaseline/>\r\n                    <DndProvider backend={HTML5Backend}>\r\n                        <App/>\r\n                    </DndProvider>\r\n                </ErrorBoundary>\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default AppContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppContainer from \"./AppContainer\";\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}