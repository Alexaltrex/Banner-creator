{"version":3,"sources":["Types/types.ts","reportWebVitals.ts","Store/selectors/app-selectors.ts","Store/reducers/app-reducer.ts","Utils/lang.ts","Components/Header/HeaderLang.tsx","Store/reducers/editor-reducer.ts","Store/reducers/workspace-reducer.tsx","Store/reducers/text-reducer.tsx","Components/Header/Header.tsx","Components/common/PageNotFound.tsx","Components/Main/CreateNew/CreateNewItemGraph.tsx","Components/Main/CreateNew/CreateNewItem.tsx","Components/common/RenderTextField.tsx","Store/selectors/editor-selectors.ts","Components/Main/CreateNew/CreateNewCustom.tsx","Components/Main/CreateNew/CreateNew.tsx","Components/Main/Editor/MainSidebar/MainSidebar.tsx","Utils/CONST.ts","Components/Main/Editor/SecondarySidebar/SecondarySidebarTitle.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/BackgroundTabs.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Color/SetColorButton.tsx","Components/common/SelectColorPopover.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Color/SelectColorButton.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Color/Color.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Gradient/GradientStyleButton.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Gradient/GradientStyle.tsx","Components/common/SelectColorButtonCustom.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Gradient/GradientColorInvert.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Gradient/GradientColor.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Gradient/Gradient.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/ImageTabs.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/MyImages/MyImagesItem.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/MyImages/MyImages.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Settings/SettingsAlignButton.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Settings/SettingsAlign.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Settings/SettingsScaleMode.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Settings/Settings.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Image/Image.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/BackgroundBorder.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarBackground/Background.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebarText/Text.tsx","Components/Main/Editor/SecondarySidebar/SecondarySidebar.tsx","Store/selectors/workspace-selectors.ts","Components/Main/Editor/Toolbar/ToolbarZoom.tsx","Components/Main/Editor/Toolbar/ToolbarZoomPlus.tsx","Components/Main/Editor/Toolbar/ToolbarZoomMinus.tsx","Components/Main/Editor/Toolbar/ToolbarDownload.tsx","Utils/validators.ts","Components/Main/Editor/Toolbar/DownloadDialog/FileNameForm.tsx","Components/Main/Editor/Toolbar/DownloadDialog/JpegQuality.tsx","Components/common/RenderTextFieldStartAdornment.tsx","Components/Main/Editor/Toolbar/DownloadDialog/LinkForm.tsx","Components/Main/Editor/Toolbar/DownloadDialog/DownloadDialog.tsx","Components/Main/Editor/Toolbar/Toolbar.tsx","Store/selectors/text-selectors.ts","Components/Main/Editor/Banner/BannerCSS/Rotator.tsx","Components/Main/Editor/Banner/BannerCSS/BannerTextForm.tsx","Components/Main/Editor/Banner/BannerCSS/BannerCSSText.tsx","Components/Main/Editor/Banner/BannerCSS/BannerCSSTexts.tsx","Components/Main/Editor/Banner/BannerCanvas/BannerCanvasBackground.tsx","Components/Main/Editor/Banner/BannerCanvas/BannerCanvasBorder.tsx","Components/Main/Editor/Banner/BannerCanvas/BannerCanvasTexts.tsx","Components/Main/Editor/Banner/BannerCanvas/BannerCanvasWrapper.tsx","Components/Main/Editor/Workspace/Workspace.tsx","Components/common/Alarm.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelText/ButtonFontStyle.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelText/ButtonLowerCase.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelText/ButtonUpperCase.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelText/LeftPanelText.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanelColor.tsx","Components/Main/Editor/Workspace/LeftPanel/LeftPanel.tsx","Components/Main/Editor/Editor.tsx","Components/Main/Main.tsx","App.tsx","Store/store.ts","Components/common/ErrorBoundary.tsx","AppContainer.tsx","index.tsx"],"names":["MainSidebarItemEnum","BackgroundTabIndexEnum","ImageTabIndexEnum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getLang","state","app","lang","getIsCreated","isCreated","initialState","appAC","type","appReducer","action","Lang","translate","phrase","rus","eng","HeaderLang","classes","useStyles","dispatch","useDispatch","useSelector","React","useState","anchorEl","setAnchorEl","title","englishLabel","handleClick","event","currentTarget","handleClose","handleCloseRus","handleCloseEng","useHeaderLang","Tooltip","placement","tooltip","arrow","Button","className","button","startIcon","endIcon","aria-controls","aria-haspopup","onClick","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","selected","makeStyles","color","marginRight","textTransform","backgroundColor","size","width","height","mainSidebarItem","showSecondSidebar","secondarySidebarBackgroundTabIndex","backgroundStyle","useBorder","borderColor","backgroundStyleColor","backgroundStyleGradient","gradientStyle","colorStart","colorEnd","backgroundStyleImage","images","currentImage","scaleMode","align","imageTabIndex","canvasUrl","background","border","text","isLoading","editorAC","layer","url","editorReducer","find","el","name","length","src","stateImages","i","readUploadedFileAsUrl","inputFile","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","zoom","downloadCase","jpegQuality","refLeftPanel","refToolbar","refCanvas","wrapperPosition","x","y","isDownloadDialogOpen","fileName","fileNameFormIsValid","link","linkFormIsValid","workspaceReducer","workspaceAC","texts","selectedTextId","movedTextId","rotatedTextId","showAlarm","cursorOnTextPosition","cursorOnRotatorPosition","sizeOfSelectedText","textReducer","content","element","fontSize","top","position","left","fontStyle","fontFamily","lowerCase","upperCase","hover","editParameters","editText","angle","map","filter","textAC","Header","logo","createNewLabel","onCreateNewHandler","useHeader","header","Typography","variant","noWrap","component","RouterLink","to","brown","boxSizing","padding","flexGrow","PageNotFound","pageNotFoundLabel","usePageNotFound","CreateNewItemGraph","props","w","h","graph","indigo","CreateNewItem","sizeLabel","onClickHandler","useCreateNewItem","Card","root","elevation","CardActionArea","cardActionArea","CardContent","cardContent","description","gutterBottom","margin","grey","display","flexDirection","justifyContent","alignItems","RenderTextField","icon","label","input","meta","touched","invalid","error","custom","styles","iconLeft","TextField","InputProps","placeholder","helperText","transform","getSize","editor","getMainSidebarItem","getShowSecondSidebar","getSecondarySidebarBackgroundTabIndex","getBackgroundStyle","getBackgroundStyleColor","getUseBorder","getBorderColor","getGradientStyle","getColorStart","getColorEnd","getImageTabIndex","getImages","getCurrentImage","getScaleMode","getAlign","getCanvasUrl","ReduxForm","reduxForm","form","handleSubmit","onChangeHandler","setTimeout","submit","widthLabel","heightLabel","useStylesForm","parseHandler","value","replace","useForm","onSubmit","Field","field1","parse","onChange","field2","CreateNewCustom","viewForm","setViewForm","buttonLabel","customSizeLabel","disabled","onSubmitHandler","useCreateNewCustom","formWrapper","buttonWrapper","fullWidth","marginBottom","right","bottom","CreateNew","CreateNewElements","index","createNew","wrapper","maxWidth","maxHeight","flexWrap","MainSidebar","labels","changeHandler","newValue","useMainSidebar","icons","Tabs","indicator","orientation","Tab","tabRoot","labelIcon","theme","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","minWidth","minHeight","secondSidebarWidth","SecondarySidebarTitle","titleLabel","useSecondarySidebarTitle","typography","IconButton","BackgroundTabs","useSecondarySidebarBackgroundTabs","indicatorColor","textColor","tabs","borderBottom","Div","styled","div","SetColorButton","colorTitle","useSetColorButton","SelectColorPopover","onPickColor","propsColor","setColor","onAcceptHandler","useSelectColorPopover","marginTop","SelectColorButton","onPickColorHandler","useSelectColorButton","anchorOrigin","vertical","horizontal","transformOrigin","Color","colors","defaultPresetsLabel","useColor","pickColorButtonElements","scndSdbrBckgrndColor","colorsBlock","gridGap","gridTemplateColumns","GradientStyleButton","tip","gradientStyleFromState","tipLabel","useGradientStyleButton","clsx","gradientStyleButton","radial","borderRadius","outline","GradientStyle","enable","SelectColorButtonCustom","tipTitle","anchorOriginVertical","anchorOriginHorizontal","transformOriginVertical","transformOriginHorizontal","headerLabel","tipTitleLabel","useSelectColorButtonCustom","GradientColorInvert","useGradientColorInvert","GradientDiv","GradientColor","onSelectColorStartHandler","onSelectColorEndHandler","useGradientColor","gradientColor","buttons","Gradient","gradient","ImageTabs","useImageTabs","MyImagesItem","image","imgSrc","useMyImagesItem","alt","img","useImageMyImages","label1","label2","imgCardElements","useDropzone","accept","onDrop","files","a","push","console","log","message","loadImages","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","Container","getColor","MyImages","imageMyImages","fakeButton","style","imagesWrapper","subWrapper","overflow","gridRowGap","SettingsAlignButton","ownAlign","onClickHandle","useAlignButton","alignButton","cursor","SettingsAlign","alignLabel","alignButtonsElements","useAlign","alignButtonWrapper","SettingsScaleMode","optionElements","scaleModeLabel","target","useScaleMode","Select","native","select","inputProps","Settings","Image","myImage","imageSetting","WhiteCheckbox","withStyles","Checkbox","BackgroundBorder","borderLabel","useBorderLabel","onSelectHandler","useBackgroundBorder","selectColorBlock","FormControlLabel","control","checked","formControlLabel","borderTop","checkbox","Background","Text","useSecondSidebarText","label3","lineHeight","SecondarySidebar","secondarySidebar","getZoom","workspace","getDownloadCase","getRefLeftPanel","getRefToolbar","getRefCanvas","getIsDownloadDialogOpen","getFileName","getFileNameFormIsValid","getJpegQuality","getLink","getLinkFormIsValid","getWrapperPosition","ToolbarZoom","zoomlabel","listItemElements","ListItem","useToolbarZoom","List","ToolbarZoomPlus","zoomArray","findIndex","useToolbarZoomPlus","ToolbarZoomMinus","useToolbarZoomMinus","ToolbarDownload","downloadLabel","listItem","ListItemIcon","listItemIcon","ListItemText","primary","listItemText","useToolbarDownload","popover","fontWeight","required","undefined","shouldNotBeEmpty","test","valid","useEffect","autoFocus","field","validate","FileNameForm","initialValues","useFileNameForm","JpegQuality","e","marks","useJpegQuality","Slider","slider","min","max","step","valueLabelDisplay","RenderTextFieldStartAdornment","startAdornment","InputAdornment","LinkForm","DownloadDialog","contentLabel","nameLabel","cancelLabel","canvasAllUrl","download","linkLabel","copyLabel","canvasAll","document","createElement","ctxAll","getContext","imgBackground","drawImage","imgBorder","imgText","toDataURL","html","textareaRef","useRef","onCloseHandler","onCopyHandler","current","execCommand","useDownloadDialog","Dialog","DialogTitle","dialogTitle","DialogContent","DialogContentText","dialogContentText","ref","readOnly","textarea","rows","DialogActions","Link","underline","href","resize","Toolbar","useEditorToolbar","editorToolbar","centerBlock","rightBlock","gridColumnGap","getTexts","getSelectedTextId","getMovedTextId","getShowAlarm","getCursorOnTextPosition","getRotatedTextId","getCursorOnRotatorPosition","getRotatedText","createSelector","getIsAnyTextEditParameters","getSelectedText","Rotator","selectedText","z","refIcon","dist","verticalDisplacementOfRotator","transformOriginTop","onMouseDownHandler","clientX","clientY","useRotator","rotator","onMouseDown","Math","floor","userSelect","textAlign","BannerTextForm","inputRef","inputValue","setInputValue","onBlurHandler","useBannerTextFormNative","onBlur","zIndex","hide","Wrapper","Span","span","useBannerTextNative","wrapperRef","onOutsideClickHandler","contains","addEventListener","removeEventListener","onMouseUpDocumentHandler","textEl","getBoundingClientRect","toLowerCase","toUpperCase","onMouseEnterHandler","onMouseLeaveHandler","onMouseUpHandler","onDoubleClickHandler","BannerCSSText","onMouseEnter","onMouseLeave","onMouseUp","onDoubleClick","clicked","BannerCSSTexts","textElements","BannerCanvasBackground","canvasRef","canvasCtxRef","resizeHandlerThrottle","throttle","window","ctx","fillStyle","fillRect","createLinearGradient","createRadialGradient","sqrt","clearRect","addColorStop","cw","ch","cx","cy","ix","iy","iw","ih","ch1","cw1","iw1","ih1","useBannerCanvasBackground","bannerCanvasBackground","BannerCanvasBackgroundMemo","memo","BannerCanvasBorder","strokeStyle","lineWidth","strokeRect","bannerCanvasBorder","BannerCanvasBorderMemo","BannerCanvasTexts","font","textBaseline","save","rotate","PI","fillText","restore","useBannerCanvasTexts","bannerCanvasTexts","BannerCanvasTextsMemo","BannerCanvasWrapper","onMouseMoveThrottle","cursorX","cursorY","wrapperX","wrapperY","cursorOnTextPositionX","cursorOnTextPositionY","useBannerCanvasWrapper","onMouseMove","Row1","Div1","Div2","Row2","Div3","WorkspaceDiv","Workspace","onScrollHandlerThrottle","rotatedText","angleStart","setAngleStart","xCanvas","yCanvas","xText","yText","xCenter","yCenter","Vector_start","Vector_end","Vector_start_mod","Vector_end_mod","cos","acos","direction","useEditorWorkspace","onScroll","Alarm","useAlarm","ButtonFontStyle","useButtonFontStyle","ButtonLowerCase","ButtonUpperCase","useButtonUpperCase","LeftPanelText","textLabel","fontSizeLabel","values","handleChange","onChangeSelectHandle","useLeftPanelText","formControlWrapper","FormControl","formControl","fontStyleBlock","LeftPanelColor","newColor","useLeftPanelColor","leftPanelColor","colorPicker","LeftPanel","leftPanelIndex","setLeftPanelIndex","colorLabel","deleteLabel","useLeftPanel","leftPanel","list","iconSelected","Editor","backgroundTabIndex","useQueryParam","NumberParam","widthQuery","setWidthQuery","heightQuery","setHeightQuery","mainSidebarItemQuery","setMainSidebarItemQuery","BooleanParam","showSecondSidebarQuery","setShowSecondSidebarQuery","backgroundTabIndexQuery","setBackgroundTabIndexQuery","StringParam","backgroundStyleQuery","setBackgroundStyleQuery","isCreatedQuery","setIsCreatedQuery","langQuery","setLangQuery","useBorderQuery","setUseBorderQuery","borderColorQuery","setBorderColorQuery","backgroundStyleColorQuery","setBackgroundStyleColorQuery","gradientStyleQuery","setGradientStyleQuery","colorStartQuery","setColorStartQuery","colorEndQuery","setColorEndQuery","isAnyTextEditParameters","leftPanelIsShow","useEditor","mainSidebar","secondSidebarWrapper","secondSidebarWrapperHide","secondSidebar","flexShrink","Main","main","exact","path","render","App","catchAllUnhandledErrors","alert","useApp","rootReducer","combineReducers","formReducer","middleware","thunkMiddleware","store","createStore","composeWithDevTools","applyMiddleware","ErrorBoundary","errorInfo","this","setState","whiteSpace","toString","children","Component","AppContainer","ReactRouterRoute","Route","CssBaseline","DndProvider","backend","HTML5Backend","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.27896f5c.chunk.js","sourcesContent":["export type LangType = 'eng' | 'rus'\r\nexport type SizeType = {\r\n    width: number | null\r\n    height: number | null\r\n}\r\n\r\nexport enum MainSidebarItemEnum {\r\n    background = 0,\r\n    text = 1,\r\n}\r\n\r\nexport type BackgroundStyleType = 'color' | 'gradient' | 'texture' | 'image'\r\n\r\nexport enum BackgroundTabIndexEnum {\r\n    color = 0,\r\n    gradient = 1,\r\n    image = 2\r\n}\r\n\r\nexport type BackgroundStyleColorType = {\r\n    color: string\r\n}\r\nexport type GradientStyleType = 'horizontal' | 'vertical' | 'radial'\r\nexport type ScaleModeType = 'Exact fit' | 'Scale crop' | 'No scale' | 'Maintain aspect'\r\nexport type AlignType = 'left-top' | 'center-top' | 'right-top' |\r\n    'left-center' | 'center' | 'right-center' |\r\n    'left-bottom' | 'center-bottom' | 'right-bottom'\r\n\r\nexport enum ImageTabIndexEnum {\r\n    myImage = 0,\r\n    imageSetting = 1\r\n}\r\n\r\nexport type ImageType = {\r\n    id: number\r\n    src: string\r\n    name: string\r\n}\r\nexport type ImageItemType = {\r\n    src: string\r\n    name: string\r\n}\r\nexport type ZoomType = 10 | 25 | 50 | 75 | 100 | 150 | 200 | 300 | 400\r\nexport type DownloadCaseType = 'PNG' | 'JPEG' | 'HTML'\r\nexport type elementType = 'header' | 'subheader' | 'body'\r\nexport type TextType = {\r\n    id: number\r\n    content: string\r\n    position: { // координаты левого верхнего угла текста относительно левого верхнего угла канваса\r\n        top: number\r\n        left: number\r\n    }\r\n    size: {\r\n        width: number\r\n        height: number\r\n    }\r\n    fontSize: number\r\n    fontStyle: 'normal' | 'italic'\r\n    fontFamily: string\r\n    color: string\r\n    lowerCase: boolean\r\n    upperCase: boolean\r\n    hover: boolean\r\n    selected: boolean\r\n    editParameters: boolean\r\n    editText: boolean\r\n    angle: number // угол в градусах\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {StateType} from \"../store\";\r\n\r\nexport const getLang = (state: StateType) => state.app.lang;\r\nexport const getIsCreated = (state: StateType) => state.app.isCreated;\r\n\r\n","import {GetActionsType} from \"../store\";\r\nimport {LangType} from \"../../Types/types\";\r\n\r\nlet initialState = {\r\n    lang: 'eng' as LangType, // язык приложения\r\n    isCreated: false // создан или нет проект\r\n};\r\n\r\nconst appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'BANNER_CREATOR/APP/SET_LANG':\r\n            return {...state, lang: action.lang}\r\n        case 'BANNER_CREATOR/APP/SET_IS_CREATED': {\r\n            return {...state, isCreated: action.isCreated}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const appAC = {\r\n    setLang: (lang: LangType) => ({type: 'BANNER_CREATOR/APP/SET_LANG', lang} as const),\r\n    setIsCreated: (isCreated: boolean) => ({type: 'BANNER_CREATOR/APP/SET_IS_CREATED', isCreated} as const),\r\n};\r\n\r\nexport default appReducer;\r\n\r\n//============== TYPE ==================\r\nexport type InitialStateType = typeof initialState;\r\nexport type AppActionsType = GetActionsType<typeof appAC>;","import {LangType} from \"../Types/types\";\r\n\r\nexport const Lang: LangObjectType = {\r\n    'English': {\r\n        'eng': 'English',\r\n        'rus': 'Русский'\r\n    },\r\n    'Change language': {\r\n        'eng': 'Change language',\r\n        'rus': 'Сменить язык'\r\n    },\r\n    'Banner creator': {\r\n        'eng': 'Banner creator',\r\n        'rus': 'Редактор баннеров'\r\n    },\r\n    'Create new': {\r\n        'eng': 'Create new',\r\n        'rus': 'Создать новый'\r\n    },\r\n    'Width': {\r\n        'eng': 'Width',\r\n        'rus': 'Ширина'\r\n    },\r\n    'Height': {\r\n        'eng': 'Height',\r\n        'rus': 'Высота'\r\n    },\r\n    'Create': {\r\n        'eng': 'Create',\r\n        'rus': 'Создать'\r\n    },\r\n    'Custom Size': {\r\n        'eng': 'Custom Size',\r\n        'rus': 'Задать размер'\r\n    },\r\n    'Background': {\r\n        'eng': 'Background',\r\n        'rus': 'Задний фон'\r\n    },\r\n    'Text': {\r\n        'eng': 'Text',\r\n        'rus': 'Текст'\r\n    },\r\n    'Color': {\r\n        'eng': 'Color',\r\n        'rus': 'Цвет'\r\n    },\r\n    'Gradient': {\r\n        'eng': 'Gradient',\r\n        'rus': 'Градиент'\r\n    },\r\n    'Texture': {\r\n        'eng': 'Texture',\r\n        'rus': 'Текстура'\r\n    },\r\n    'Image': {\r\n        'eng': 'Image',\r\n        'rus': 'Изображение'\r\n    },\r\n    'Default presets': {\r\n        'eng': 'Default presets',\r\n        'rus': 'Стандартные цвета'\r\n    },\r\n    'Border': {\r\n        'eng': 'Border',\r\n        'rus': 'Рамка'\r\n    },\r\n    'Use border': {\r\n        'eng': 'Use border',\r\n        'rus': 'С рамкой'\r\n    },\r\n    'Select color': {\r\n        'eng': 'Select color',\r\n        'rus': 'Выберите цвет'\r\n    },\r\n    'Select background color': {\r\n        'eng': 'Select background color',\r\n        'rus': 'Выберите цвет заднего фона'\r\n    },\r\n    'Select border color': {\r\n        'eng': 'Select border color',\r\n        'rus': 'Выберите цвет рамки'\r\n    },\r\n    'Select start color': {\r\n        'eng': 'Select start color',\r\n        'rus': 'Выберите начальный цвет'\r\n    },\r\n    'Select end color': {\r\n        'eng': 'Select end color',\r\n        'rus': 'Выберите конечный цвет'\r\n    },\r\n    'My images': {\r\n        'eng': 'My images',\r\n        'rus': 'Мои изображения'\r\n    },\r\n    'Stock photos': {\r\n        'eng': 'Stock photos',\r\n        'rus': 'Стоковые'\r\n    },\r\n    'Settings': {\r\n        'eng': 'Settings',\r\n        'rus': 'Настройки'\r\n    },\r\n    'Scale mode': {\r\n        'eng': 'Scale mode',\r\n        'rus': 'Масштабирование'\r\n    },\r\n    'Align': {\r\n        'eng': 'Align',\r\n        'rus': 'Выравнивание'\r\n    },\r\n    'Exact fit': {\r\n        'eng': 'Exact fit',\r\n        'rus': 'Непропорционально вписать'\r\n    },\r\n    'Scale crop': {\r\n        'eng': 'Scale crop',\r\n        'rus': 'Пропорционально заполнить'\r\n    },\r\n    'No scale': {\r\n        'eng': 'No scale',\r\n        'rus': 'Заполнить без масштабирования'\r\n    },\r\n    'Maintain aspect': {\r\n        'eng': 'Maintain aspect',\r\n        'rus': 'Пропорционально вписать'\r\n    },\r\n    'Download': {\r\n        'eng': 'Download',\r\n        'rus': 'Скачать'\r\n    },\r\n    'Add text': {\r\n        'eng': 'Add text',\r\n        'rus': 'Добавить текст'\r\n    },\r\n    'Add header': {\r\n        'eng': 'Add header',\r\n        'rus': 'Заголовок'\r\n    },\r\n    'Add subheader': {\r\n        'eng': 'Add subheader',\r\n        'rus': 'Подзаголовок'\r\n    },\r\n    'Add body text': {\r\n        'eng': 'Add body text',\r\n        'rus': 'Обычный текст'\r\n    },\r\n    'Font size (px)': {\r\n        'eng': 'Font size (px)',\r\n        'rus': 'Размер шрифта (пикс)'\r\n    },\r\n    'Delete': {\r\n        'eng': 'Delete',\r\n        'rus': 'Удалить'\r\n    },\r\n    'Download created banner as': {\r\n        'eng': 'Download created banner as',\r\n        'rus': 'Загрузить созданный баннер как'\r\n    },\r\n    'Enter a file name:': {\r\n        'eng': 'Enter a file name:',\r\n        'rus': 'Введите имя файла:'\r\n    },\r\n    'Enter a link:': {\r\n        'eng': 'Enter a link:',\r\n        'rus': 'Введите ссылку:'\r\n    },\r\n    'Cancel': {\r\n        'eng': 'Cancel',\r\n        'rus': 'Закрыть'\r\n    },\r\n    'Copy': {\r\n        'eng': 'Copy',\r\n        'rus': 'Копировать'\r\n    },\r\n    'Quality of jpeg': {\r\n        'eng': 'Quality of jpeg',\r\n        'rus': 'Качество jpeg'\r\n    },\r\n    'Maximum count of text': {\r\n        'eng': 'Maximum count of text',\r\n        'rus': 'Максимальное количество строк'\r\n    },\r\n    'Maximum count of text in trial version of banner creator is 3.': {\r\n        'eng': 'Maximum count of text in trial version of banner creator is 3.',\r\n        'rus': 'Максимальное количество строк в ознакомительной версии программы равно 3.'\r\n    },\r\n    'Drag and drop some files here,': {\r\n        'eng': 'Drag and drop some files here,',\r\n        'rus': 'Перетащите файл(ы)'\r\n    },\r\n    'or click to select files': {\r\n        'eng': 'or click to select files',\r\n        'rus': 'или кликните чтобы выбрать'\r\n    },\r\n    'By url': {\r\n        'eng': 'By url',\r\n        'rus': 'По ссылке'\r\n    },\r\n    'Horizontal gradient': {\r\n        'eng': 'Horizontal gradient',\r\n        'rus': 'Горизонтальный градиент'\r\n    },\r\n    'Vertical gradient': {\r\n        'eng': 'Vertical gradient',\r\n        'rus': 'Вертикальный градиент'\r\n    },\r\n    'Radial gradient': {\r\n        'eng': 'Radial gradient',\r\n        'rus': 'Радиальный градиент'\r\n    },\r\n    'Invert colors': {\r\n        'eng': 'Invert colors',\r\n        'rus': 'Поменять цвета'\r\n    },\r\n};\r\n\r\n// const lang = useSelector(getLang);\r\n// translate(lang, '')\r\n\r\nexport const translate = (lang: LangType, phrase: string): string => {\r\n    return lang === 'rus' ? Lang[phrase].rus : Lang[phrase].eng\r\n};\r\n\r\ntype LangObjectType = {\r\n    [key: string]: {\r\n        'eng': string\r\n        'rus': string\r\n    }\r\n}\r\n\r\n","import Button from \"@material-ui/core/Button\";\r\nimport React, {ReactElement} from \"react\";\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {getLang} from \"../../Store/selectors/app-selectors\";\r\nimport {appAC} from \"../../Store/reducers/app-reducer\";\r\nimport {translate} from \"../../Utils/lang\";\r\n\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useHeaderLang = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const lang = useSelector(getLang);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleCloseRus = () => {\r\n        dispatch(appAC.setLang('rus'));\r\n        setAnchorEl(null);\r\n    };\r\n    const handleCloseEng = () => {\r\n        dispatch(appAC.setLang('eng'));\r\n        setAnchorEl(null);\r\n    };\r\n    const title = translate(lang, 'Change language');\r\n    const englishLabel = translate(lang, 'English')\r\n    return {classes, lang, anchorEl, title, englishLabel,\r\n        handleClick, handleClose, handleCloseRus,\r\n        handleCloseEng}\r\n}\r\n\r\n//======================= COMPONENT ===============================\r\nconst HeaderLang: React.FC<{}> = (): ReactElement => {\r\n    const {classes, lang, anchorEl, title, englishLabel,\r\n        handleClick, handleClose, handleCloseRus,\r\n        handleCloseEng} = useHeaderLang();\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={title} placement=\"bottom-start\"\r\n                     classes={{\r\n                         tooltip: classes.tooltip,\r\n                         arrow: classes.arrow\r\n                     }}>\r\n                <Button\r\n                    className={classes.button}\r\n                    startIcon={<LanguageIcon/>}\r\n                    endIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick}\r\n                >\r\n                    {englishLabel}\r\n                </Button>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleCloseEng}\r\n                          selected={lang === 'eng'}\r\n                >\r\n                    English\r\n                </MenuItem>\r\n                <MenuItem onClick={handleCloseRus}\r\n                          selected={lang === 'rus'}\r\n                >\r\n                    Русский\r\n                </MenuItem>\r\n            </Menu>\r\n        </>\r\n    )\r\n};\r\nexport default HeaderLang;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        color: 'white',\r\n        marginRight: 50,\r\n        textTransform: 'none'\r\n    },\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n})","import {BaseThunkType, GetActionsType} from \"../store\";\r\nimport {\r\n    BackgroundStyleColorType,\r\n    BackgroundStyleType, GradientStyleType,\r\n    MainSidebarItemEnum, ScaleModeType,\r\n    BackgroundTabIndexEnum,\r\n    SizeType,\r\n    AlignType, ImageTabIndexEnum, ImageType, ImageItemType\r\n} from \"../../Types/types\";\r\nimport {AppActionsType} from \"./app-reducer\";\r\nimport {WorkspaceActionsType} from \"./workspace-reducer\";\r\n\r\nconst initialState = {\r\n    size: { // размер баннера\r\n        width: null as null | number,\r\n        height: null as null | number,\r\n    },\r\n    mainSidebarItem: 0 as MainSidebarItemEnum, // пункт главной боковой панели\r\n    showSecondSidebar: true, // показать или скрыть вспомогательную боковую панель\r\n    secondarySidebarBackgroundTabIndex: 0 as BackgroundTabIndexEnum, // индекс активной вкладки на вспомогательной боковой панели 'Background'\r\n    backgroundStyle: 'color' as BackgroundStyleType,\r\n    useBorder: false, // есть ли рамка\r\n    borderColor: '#000', // цвет рамки\r\n    backgroundStyleColor: { // параметры монохромного заднего фона\r\n        color: '#fff'\r\n    } as BackgroundStyleColorType,\r\n    backgroundStyleGradient: { // параметры градиентного заднего фона\r\n        gradientStyle: 'horizontal' as GradientStyleType,\r\n        colorStart: '#000',\r\n        colorEnd: '#FFF'\r\n    },\r\n    backgroundStyleImage: {\r\n        images: [] as Array<ImageType>,\r\n        currentImage: null as null | ImageType,\r\n        scaleMode: 'Maintain aspect' as ScaleModeType,\r\n        align: 'center' as AlignType\r\n    },\r\n    imageTabIndex: 0 as ImageTabIndexEnum,\r\n    canvasUrl: { // урлы отрисованных канвасов для экспорта\r\n        background: null as null | string,\r\n        border: null as null | string,\r\n        text: null as null | string,\r\n    },\r\n    isLoading: false\r\n};\r\n//=================== REDUCER ===========================\r\nconst editorReducer = (state = initialState, action: EditorActionsType): InitialStateType => {\r\n        switch (action.type) {\r\n            case 'EDITOR/SET_SIZE': {\r\n                return {...state, size: action.size}\r\n            }\r\n            case 'EDITOR/SET_MAIN_SIDEBAR_ITEM': {\r\n                return {...state, mainSidebarItem: action.mainSidebarItem}\r\n            }\r\n            case 'EDITOR/SET_SHOW_SECOND_SIDEBAR': {\r\n                return {...state, showSecondSidebar: action.showSecondSidebar}\r\n            }\r\n            case 'EDITOR/SET_SECONDARY_SIDEBAR_BACKGROUND_TAB_INDEX': {\r\n                return {...state, secondarySidebarBackgroundTabIndex: action.secondarySidebarBackgroundTabIndex}\r\n            }\r\n            case 'EDITOR/SET_BACKGROUND_STYLE': {\r\n                return {...state, backgroundStyle: action.backgroundStyle}\r\n            }\r\n            case 'EDITOR/SET_BACKGROUND_STYLE_COLOR': {\r\n                return {...state, backgroundStyleColor: action.backgroundStyleColor}\r\n            }\r\n            case 'EDITOR/SET_USE_BORDER': {\r\n                return {...state, useBorder: action.useBorder}\r\n            }\r\n            case 'EDITOR/SET_BORDER_COLOR': {\r\n                return {...state, borderColor: action.borderColor}\r\n            }\r\n            case 'EDITOR/SET_GRADIENT_STYLE': {\r\n                return {\r\n                    ...state,\r\n                    backgroundStyleGradient: {\r\n                        ...state.backgroundStyleGradient,\r\n                        gradientStyle: action.gradientStyle\r\n                    }\r\n                }\r\n            }\r\n            case 'EDITOR/SET_COLOR_START': {\r\n                return {\r\n                    ...state,\r\n                    backgroundStyleGradient: {\r\n                        ...state.backgroundStyleGradient,\r\n                        colorStart: action.colorStart\r\n                    }\r\n                }\r\n            }\r\n            case 'EDITOR/SET_COLOR_END': {\r\n                return {\r\n                    ...state,\r\n                    backgroundStyleGradient: {\r\n                        ...state.backgroundStyleGradient,\r\n                        colorEnd: action.colorEnd\r\n                    }\r\n                }\r\n            }\r\n            case 'EDITOR/SET_REPLACE_COLOR': {\r\n                const colorStart = state.backgroundStyleGradient.colorStart;\r\n                const colorEnd = state.backgroundStyleGradient.colorEnd;\r\n                return {\r\n                    ...state,\r\n                    backgroundStyleGradient: {\r\n                        ...state.backgroundStyleGradient,\r\n                        colorEnd: colorStart,\r\n                        colorStart: colorEnd\r\n                    }\r\n                }\r\n            }\r\n            case 'EDITOR/ADD_IMAGE': { // добавить и установить текущим\r\n                if (state.backgroundStyleImage.images.find(//\r\n                    el => el.name === action.name\r\n                )) {\r\n                    return state\r\n                } else {\r\n                    const length = state.backgroundStyleImage.images.length\r\n                    const id = length === 0 ? 1 : state.backgroundStyleImage.images[length - 1].id + 1;\r\n                    return {\r\n                        ...state,\r\n                        backgroundStyleImage: {\r\n                            ...state.backgroundStyleImage,\r\n                            images: [\r\n                                ...state.backgroundStyleImage.images,\r\n                                {\r\n                                    id: id,\r\n                                    src: action.src,\r\n                                    name: action.name\r\n                                }\r\n                            ],\r\n                            currentImage: {\r\n                                id: id,\r\n                                src: action.src,\r\n                                name: action.name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            case 'EDITOR/ADD_IMAGES': { // добавить и установить последний текущим\r\n                let stateImages = [...state.backgroundStyleImage.images];\r\n                for (let i = 0; i < action.images.length; i++) {\r\n                    if (stateImages.find(// если с таким именем уже есть\r\n                        el => el.name === action.images[i].name\r\n                    )) {\r\n                        //return state\r\n                    } else {// если с таким именем еще нет\r\n                        const id = stateImages.length === 0\r\n                            ? 1\r\n                            : stateImages[stateImages.length - 1].id + 1;\r\n                        stateImages = [\r\n                            ...stateImages,\r\n                            {\r\n                                id: id,\r\n                                src: action.images[i].src,\r\n                                name: action.images[i].name\r\n                            }\r\n                        ];\r\n                    }\r\n                }\r\n                return {\r\n                    ...state,\r\n                    backgroundStyleImage: {\r\n                        ...state.backgroundStyleImage,\r\n                        images: stateImages,\r\n                        currentImage: stateImages[stateImages.length - 1]\r\n                    }\r\n                }\r\n            }\r\n            case\r\n            'EDITOR/SET_CURRENT_IMAGE': {\r\n                const currentImage = state.backgroundStyleImage.images.find(el => el.id === action.id) as ImageType;\r\n                return {\r\n                    ...state,\r\n                    backgroundStyleImage: {\r\n                        ...state.backgroundStyleImage,\r\n                        currentImage: currentImage\r\n                    }\r\n                }\r\n            }\r\n            case 'EDITOR/SET_IMAGE_TAB_INDEX': {\r\n                return {...state, imageTabIndex: action.imageTabIndex}\r\n            }\r\n            case\r\n            'EDITOR/SET_SCALE_MODE': {\r\n                return {\r\n                    ...state,\r\n                    backgroundStyleImage: {\r\n                        ...state.backgroundStyleImage,\r\n                        scaleMode: action.scaleMode\r\n                    }\r\n                }\r\n            }\r\n            case\r\n            'EDITOR/SET_ALIGN': {\r\n                return {\r\n                    ...state,\r\n                    backgroundStyleImage: {\r\n                        ...state.backgroundStyleImage,\r\n                        align: action.align\r\n                    }\r\n                }\r\n            }\r\n            case\r\n            'EDITOR/SET_CANVAS_URL': {\r\n                return {\r\n                    ...state,\r\n                    canvasUrl: {\r\n                        ...state.canvasUrl,\r\n                        [action.layer]: action.url\r\n                    }\r\n                }\r\n            }\r\n            case\r\n            'EDITOR/SET_IS_LOADING': {\r\n                return {...state, isLoading: action.isLoading}\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n;\r\n\r\n//=================== ACTION-CREATORS =====================\r\nexport const editorAC = {\r\n    setSize: (size: SizeType) => ({type: 'EDITOR/SET_SIZE', size} as const),\r\n    setMainSidebarItem: (mainSidebarItem: MainSidebarItemEnum) => ({\r\n        type: 'EDITOR/SET_MAIN_SIDEBAR_ITEM',\r\n        mainSidebarItem\r\n    } as const),\r\n    setShowSecondSidebar: (showSecondSidebar: boolean) => ({\r\n        type: 'EDITOR/SET_SHOW_SECOND_SIDEBAR',\r\n        showSecondSidebar\r\n    } as const),\r\n    setSecondarySidebarBackgroundTabIndex: (secondarySidebarBackgroundTabIndex: BackgroundTabIndexEnum) => ({\r\n        type: 'EDITOR/SET_SECONDARY_SIDEBAR_BACKGROUND_TAB_INDEX',\r\n        secondarySidebarBackgroundTabIndex\r\n    } as const),\r\n    setBackgroundStyle: (backgroundStyle: BackgroundStyleType) => ({\r\n        type: 'EDITOR/SET_BACKGROUND_STYLE',\r\n        backgroundStyle\r\n    } as const),\r\n    setBackgroundStyleColor: (backgroundStyleColor: BackgroundStyleColorType) => ({\r\n        type: 'EDITOR/SET_BACKGROUND_STYLE_COLOR',\r\n        backgroundStyleColor\r\n    } as const),\r\n    setUseBorder: (useBorder: boolean) => ({type: 'EDITOR/SET_USE_BORDER', useBorder} as const),\r\n    setBorderColor: (borderColor: string) => ({type: 'EDITOR/SET_BORDER_COLOR', borderColor} as const),\r\n    setGradientStyle: (gradientStyle: GradientStyleType) => ({\r\n        type: 'EDITOR/SET_GRADIENT_STYLE',\r\n        gradientStyle\r\n    } as const),\r\n    setColorStart: (colorStart: string) => ({\r\n        type: 'EDITOR/SET_COLOR_START',\r\n        colorStart\r\n    } as const),\r\n    setColorEnd: (colorEnd: string) => ({\r\n        type: 'EDITOR/SET_COLOR_END',\r\n        colorEnd\r\n    } as const),\r\n    replaceColor: () => ({type: 'EDITOR/SET_REPLACE_COLOR'} as const),\r\n    addImage: (src: string, name: string) => ({type: 'EDITOR/ADD_IMAGE', src, name} as const),\r\n    addImages: (images: Array<ImageItemType>) => ({type: 'EDITOR/ADD_IMAGES', images} as const),\r\n    setImageTabIndex: (imageTabIndex: ImageTabIndexEnum) => ({\r\n        type: 'EDITOR/SET_IMAGE_TAB_INDEX',\r\n        imageTabIndex\r\n    } as const),\r\n    setScaleMode: (scaleMode: ScaleModeType) => ({type: 'EDITOR/SET_SCALE_MODE', scaleMode} as const),\r\n    setAlign: (align: AlignType) => ({type: 'EDITOR/SET_ALIGN', align} as const),\r\n    setCurrentImage: (id: number) => ({type: 'EDITOR/SET_CURRENT_IMAGE', id} as const),\r\n    setCanvasUrl: (layer: 'background' | 'border' | 'text', url: null | string) => ({\r\n        type: 'EDITOR/SET_CANVAS_URL',\r\n        layer,\r\n        url\r\n    } as const),\r\n    setIsLoading: (isLoading: boolean) => ({type: 'EDITOR/SET_IS_LOADING', isLoading} as const),\r\n};\r\nexport default editorReducer;\r\n\r\n//====================== THUNK-CREATORS =========================\r\nconst readUploadedFileAsUrl = (inputFile: File) => {\r\n    const reader = new FileReader();\r\n\r\n    return new Promise<null | string | ArrayBuffer>((resolve, reject) => {\r\n        reader.onerror = () => {\r\n            reader.abort();\r\n            reject(new DOMException(\"Problem parsing input file.\"));\r\n        };\r\n\r\n        reader.onload = () => {\r\n            resolve(reader.result);\r\n        };\r\n        reader.readAsDataURL(inputFile);\r\n    });\r\n};\r\n\r\n// export const loadImage = (file: File): ThunkType => async (dispatch) => {\r\n//     try {\r\n//         const src = await readUploadedFileAsUrl(file);\r\n//         const name = file.name;\r\n//\r\n//         if (typeof src === 'string') {\r\n//             dispatch(editorAC.addImage(src, name));\r\n//             dispatch(editorAC.setBackgroundStyle('image'));\r\n//         }\r\n//\r\n//     } catch (e) {\r\n//         console.log(e.message)\r\n//     }\r\n//\r\n// };\r\n\r\nexport const loadImages = (files: Array<File>): ThunkType => async (dispatch) => {\r\n    const images = [] as Array<ImageItemType>\r\n    for (let i = 0; i < files.length; i++) {\r\n        try {\r\n            const src = await readUploadedFileAsUrl(files[i]);\r\n            const name = files[i].name;\r\n            if (typeof src === 'string') {\r\n                //dispatch(editorAC.addImage(src, name));\r\n                images.push({src, name})\r\n                dispatch(editorAC.setBackgroundStyle('image'));\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    dispatch(editorAC.addImages(images));\r\n\r\n};\r\n\r\n//============== TYPE ==================\r\nexport type InitialStateType = typeof initialState;\r\nexport type EditorActionsType = GetActionsType<typeof editorAC>;\r\ntype ThunkType = BaseThunkType<EditorActionsType | AppActionsType | WorkspaceActionsType>","import {DownloadCaseType, ZoomType} from \"../../Types/types\";\r\nimport {GetActionsType} from \"../store\";\r\n\r\nconst initialState = {\r\n    zoom: 100 as ZoomType, // масштаб рабочей области\r\n    downloadCase: 'PNG' as DownloadCaseType, // сохранить как\r\n    jpegQuality: 0.8, // качество jpeg изображения\r\n    refLeftPanel: null as null | React.MutableRefObject<null>, // ссылка на контекстную панель\r\n    refToolbar: null as null | React.MutableRefObject<null>, // ссылка на верхнюю панель инструментов\r\n    refCanvas: null as null | React.MutableRefObject<null>, // ссылка на канвас заднего фона\r\n    wrapperPosition: { // координаты левого верхнего угла канваса\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    isDownloadDialogOpen: false, // открыто или закрыто диалоговое окно сохранения баннера\r\n    fileName: 'my-banner',\r\n    fileNameFormIsValid: true,\r\n    link: 'test.com',\r\n    linkFormIsValid: true,\r\n};\r\n\r\n//=================== REDUCER ===========================\r\nconst workspaceReducer = (state = initialState, action: WorkspaceActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_ZOOM': {\r\n            return {...state, zoom: action.zoom}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_REF_LEFT_PANEL': {\r\n            return {...state, refLeftPanel: action.refLeftPanel}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_REF_TOOLBAR': {\r\n            return {...state, refToolbar: action.refToolbar}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_REF_CANVAS': {\r\n            return {...state, refCanvas: action.refCanvas}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_DOWNLOAD_CASE': {\r\n            return {...state, downloadCase: action.downloadCase}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_IS_DOWNLOAD_DIALOG_OPEN': {\r\n            return {...state, isDownloadDialogOpen: action.isDownloadDialogOpen}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_FILE_NAME': {\r\n            return {...state, fileName: action.fileName}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_LINK': {\r\n            return {...state, link: action.link}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_FILE_NAME_FORM_IS_VALID': {\r\n            return {...state, fileNameFormIsValid: action.fileNameFormIsValid}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_LINK_FORM_IS_VALID': {\r\n            return {...state, linkFormIsValid: action.linkFormIsValid}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_JPEG_QUALITY': {\r\n            return {...state, jpegQuality: action.jpegQuality}\r\n        }\r\n        case 'BANNER_CREATOR/WORKSPACE/SET_WRAPPER_POSITION': {\r\n            return {...state, wrapperPosition: {x: action.x, y: action.y}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default workspaceReducer;\r\n\r\n//=================== ACTION-CREATORS =====================\r\nexport const workspaceAC = {\r\n    setZoom: (zoom: ZoomType) => ({type: 'BANNER_CREATOR/WORKSPACE/SET_ZOOM', zoom} as const),\r\n    setRefLeftPanel: (refLeftPanel: null | React.MutableRefObject<null>) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_REF_LEFT_PANEL',\r\n        refLeftPanel\r\n    } as const),\r\n    setRefToolbar: (refToolbar: null | React.MutableRefObject<null>) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_REF_TOOLBAR',\r\n        refToolbar\r\n    } as const),\r\n    setRefCanvas: (refCanvas: null | React.MutableRefObject<null>) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_REF_CANVAS',\r\n        refCanvas\r\n    } as const),\r\n    setDownloadCase: (downloadCase: DownloadCaseType) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_DOWNLOAD_CASE',\r\n        downloadCase\r\n    } as const),\r\n    setIsDownloadDialogOpen: (isDownloadDialogOpen: boolean) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_IS_DOWNLOAD_DIALOG_OPEN',\r\n        isDownloadDialogOpen\r\n    } as const),\r\n    setFileName: (fileName: string) => ({type: 'BANNER_CREATOR/WORKSPACE/SET_FILE_NAME', fileName} as const),\r\n    setFileNameFormIsValid: (fileNameFormIsValid: boolean) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_FILE_NAME_FORM_IS_VALID',\r\n        fileNameFormIsValid\r\n    } as const),\r\n    setJpegQuality: (jpegQuality: number) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_JPEG_QUALITY',\r\n        jpegQuality\r\n    } as const),\r\n    setLink: (link: string) => ({type: 'BANNER_CREATOR/WORKSPACE/SET_LINK', link} as const),\r\n    setLinkFormIsValid: (linkFormIsValid: boolean) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_LINK_FORM_IS_VALID',\r\n        linkFormIsValid\r\n    } as const),\r\n    setWrapperPosition: (x: number, y: number) => ({\r\n        type: 'BANNER_CREATOR/WORKSPACE/SET_WRAPPER_POSITION',\r\n        x, y\r\n    } as const),\r\n};\r\n\r\n//============== TYPE ==================\r\nexport type InitialStateType = typeof initialState;\r\nexport type WorkspaceActionsType = GetActionsType<typeof workspaceAC>;","import {elementType, TextType} from \"../../Types/types\";\r\nimport {GetActionsType} from \"../store\";\r\nimport {XYCoord} from \"react-dnd\";\r\n\r\n\r\nconst initialState = {\r\n    texts: [] as Array<TextType>,\r\n    selectedTextId: null as null | number, // id выделенного текста\r\n    movedTextId: null as null | number, // id перетаскиваемого текста\r\n    rotatedTextId: null as null | number, // id вращаемого текста\r\n    showAlarm: false, // показывать сообщение о предельно допустимом количестве строк текста\r\n    // смещение точки клика курсора относительно левого верхнего угла выделенного текста\r\n    // в начале вращения\r\n    cursorOnTextPosition: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    cursorOnRotatorPosition: { // положение точки клика курсора относительно окна в начале вращения\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    sizeOfSelectedText: { // размеры выделенного текста\r\n        width: 0,\r\n        height: 0\r\n    }\r\n};\r\n\r\n//=================== REDUCER ===========================\r\nconst textReducer = (state = initialState, action: textActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'BANNER_CREATOR/TEXT/ADD_TEXT': {\r\n            if (state.texts.length < 3) {\r\n                const id = state.texts.length ? state.texts[state.texts.length - 1].id + 1 : 1;\r\n                const content = action.element === 'header' ? 'Header' : action.element === 'subheader' ? 'Subheader' : 'Body text';\r\n                const fontSize = action.element === 'header' ? 32 : action.element === 'subheader' ? 24 : 16;\r\n                const top = action.element === 'header' ? 10 : action.element === 'subheader' ? 52 : 86;\r\n                return {\r\n                    ...state,\r\n                    texts: [\r\n                        ...state.texts,\r\n                        {\r\n                            id: id,\r\n                            content: content,\r\n                            position: {\r\n                                top: top,\r\n                                left: 10\r\n                            },\r\n                            fontSize: fontSize,\r\n                            fontStyle: 'normal',\r\n                            fontFamily: 'arial',\r\n                            color: '#000',\r\n                            lowerCase: false,\r\n                            upperCase: false,\r\n                            hover: false,\r\n                            selected: false,\r\n                            editParameters: false,\r\n                            editText: false,\r\n                            angle: 0,\r\n                            size: {\r\n                                width: 0,\r\n                                height: 0\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            } else {\r\n                return {...state, showAlarm: true}\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_HOVER': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, hover: action.hover}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_SELECTED': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, selected: action.selected}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_EDIT_PARAMETERS': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, editParameters: action.editParameters}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_EDIT_TEXT': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, editText: action.editText}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_FONT_SIZE': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, fontSize: action.fontSize}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_FONT_STYLE': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, fontStyle: action.fontStyle}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_POSITION': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {\r\n                        ...el, position: {\r\n                            top: action.y,\r\n                            left: action.x\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_COLOR': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, color: action.color}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_ANGLE': {\r\n\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, angle: action.angle}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_LOWER_CASE': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, lowerCase: action.lowerCase}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_UPPER_CASE': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, upperCase: action.upperCase}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_CONTENT': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {...el, content: action.content}\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_SIZE': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.map(\r\n                    el => el.id !== action.id ? el : {\r\n                        ...el, size: {\r\n                            width: action.width,\r\n                            height: action.height\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_SELECTED_TEXT_ID': {\r\n            return {\r\n                ...state, selectedTextId: action.selectedTextId\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_MOVED_TEXT_ID': {\r\n            return {\r\n                ...state, movedTextId: action.movedTextId\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_ROTATED_TEXT_ID': {\r\n            return {\r\n                ...state, rotatedTextId: action.rotatedTextId\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/REMOVE_TEXT': {\r\n            return {\r\n                ...state,\r\n                texts: state.texts.filter(el => el.id !== action.id)\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/REMOVE_TEXT_ALL': {\r\n            return {\r\n                ...state, texts: []\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_SHOW_ALARM': {\r\n            return {...state, showAlarm: action.showAlarm}\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_CURSOR_ON_TEXT_POSITION': {\r\n            return {\r\n                ...state,\r\n                cursorOnTextPosition: {\r\n                    x: action.x,\r\n                    y: action.y\r\n                }\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_SIZE_OF_SELECTED_TEXT': {\r\n            return {\r\n                ...state, sizeOfSelectedText: {\r\n                    width: action.width,\r\n                    height: action.height\r\n                }\r\n            }\r\n        }\r\n        case 'BANNER_CREATOR/TEXT/SET_CURSOR_ON_ROTATOR_POSITION': {\r\n            return {...state, cursorOnRotatorPosition: {x: action.x, y: action.y}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default textReducer;\r\n\r\n//=================== ACTION-CREATORS =====================\r\nexport const textAC = {\r\n    addText: (element: elementType) => ({type: 'BANNER_CREATOR/TEXT/ADD_TEXT', element} as const),\r\n    removeText: (id: number) => ({type: 'BANNER_CREATOR/TEXT/REMOVE_TEXT', id} as const),\r\n    removeTextAll: () => ({type: 'BANNER_CREATOR/TEXT/REMOVE_TEXT_ALL'} as const),\r\n    setHover: (id: number, hover: boolean) => ({type: 'BANNER_CREATOR/TEXT/SET_HOVER', id, hover} as const),\r\n    setSelected: (id: number, selected: boolean) => ({type: 'BANNER_CREATOR/TEXT/SET_SELECTED', id, selected} as const),\r\n    setFontSize: (id: number, fontSize: number) => ({type: 'BANNER_CREATOR/TEXT/SET_FONT_SIZE', id, fontSize} as const),\r\n    setAngle: (id: number, angle: number) => ({type: 'BANNER_CREATOR/TEXT/SET_ANGLE', id, angle} as const),\r\n    setFontStyle: (id: number, fontStyle: 'normal' | 'italic') => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_FONT_STYLE',\r\n        id,\r\n        fontStyle\r\n    } as const),\r\n    setLowerCase: (id: number, lowerCase: boolean) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_LOWER_CASE',\r\n        id,\r\n        lowerCase\r\n    } as const),\r\n    setUpperCase: (id: number, upperCase: boolean) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_UPPER_CASE',\r\n        id,\r\n        upperCase\r\n    } as const),\r\n    setPosition: (id: number, x: number, y: number) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_POSITION',\r\n        id,\r\n        x,\r\n        y\r\n    } as const),\r\n    setColor: (id: number, color: string) => ({type: 'BANNER_CREATOR/TEXT/SET_COLOR', id, color} as const),\r\n    setContent: (id: number, content: string) => ({type: 'BANNER_CREATOR/TEXT/SET_CONTENT', id, content} as const),\r\n    setSize: (id: number, width: number, height: number) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_SIZE',\r\n        id,\r\n        width,\r\n        height\r\n    } as const),\r\n    setEditParameters: (id: number, editParameters: boolean) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_EDIT_PARAMETERS',\r\n        id,\r\n        editParameters\r\n    } as const),\r\n    setEditText: (id: number, editText: boolean) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_EDIT_TEXT',\r\n        id,\r\n        editText\r\n    } as const),\r\n    setSelectedTextId: (selectedTextId: number) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_SELECTED_TEXT_ID',\r\n        selectedTextId\r\n    } as const),\r\n    setRotatedTextId: (rotatedTextId: number | null) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_ROTATED_TEXT_ID',\r\n        rotatedTextId\r\n    } as const),\r\n    setMovedTextId: (movedTextId: number | null) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_MOVED_TEXT_ID',\r\n        movedTextId\r\n    } as const),\r\n    setShowAlarm: (showAlarm: boolean) => ({type: 'BANNER_CREATOR/TEXT/SET_SHOW_ALARM', showAlarm} as const),\r\n    setCursorOnTextPosition: (x: number, y: number) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_CURSOR_ON_TEXT_POSITION',\r\n        x, y\r\n    } as const),\r\n    setSizeOfSelectedText: (width: number, height: number) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_SIZE_OF_SELECTED_TEXT',\r\n        width,\r\n        height\r\n    } as const),\r\n    setCursorOnRotatorPosition: (x: number, y: number) => ({\r\n        type: 'BANNER_CREATOR/TEXT/SET_CURSOR_ON_ROTATOR_POSITION',\r\n        x, y\r\n    } as const)\r\n};\r\n\r\n//============== TYPE ==================\r\nexport type InitialStateType = typeof initialState;\r\nexport type textActionsType = GetActionsType<typeof textAC>;","import React, {ReactElement} from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport HeaderLang from \"./HeaderLang\";\r\nimport {translate} from \"../../Utils/lang\";\r\nimport {getLang} from \"../../Store/selectors/app-selectors\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {editorAC} from \"../../Store/reducers/editor-reducer\";\r\nimport {workspaceAC} from \"../../Store/reducers/workspace-reducer\";\r\nimport {textAC} from \"../../Store/reducers/text-reducer\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useHeader = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const logo = translate(lang, 'Banner creator');\r\n    const createNewLabel = translate(lang, 'Create new');\r\n    const dispatch = useDispatch();\r\n    const onCreateNewHandler = () => {\r\n        dispatch(editorAC.setSize({\r\n            width: null,\r\n            height: null\r\n        }));\r\n        dispatch(editorAC.setBackgroundStyle('color'));\r\n        dispatch(editorAC.setBackgroundStyleColor({color: '#FFF'}));\r\n        dispatch(editorAC.setUseBorder(false));\r\n        dispatch(workspaceAC.setZoom(100));\r\n        dispatch(textAC.removeTextAll());\r\n        dispatch(editorAC.setMainSidebarItem(0));\r\n        dispatch(editorAC.setSecondarySidebarBackgroundTabIndex(0));\r\n        dispatch(editorAC.setImageTabIndex(0));\r\n        dispatch(editorAC.setBorderColor('#000'));\r\n        dispatch(editorAC.setColorStart('#000'));\r\n        dispatch(editorAC.setColorEnd('#FFF'));\r\n        dispatch(editorAC.setShowSecondSidebar(true));\r\n    };\r\n    return {\r\n        classes, logo, createNewLabel, onCreateNewHandler\r\n    }\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst Header: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, logo, createNewLabel, onCreateNewHandler\r\n    } = useHeader();\r\n\r\n    return (\r\n        <Toolbar className={classes.header}>\r\n            <Typography variant=\"h6\" noWrap className={classes.logo}>\r\n                {logo}\r\n            </Typography>\r\n            <HeaderLang/>\r\n            <Button color=\"inherit\"\r\n                    variant='contained'\r\n                    startIcon={<AddIcon/>}\r\n                    className={classes.button}\r\n                    onClick={onCreateNewHandler}\r\n                    component={RouterLink}\r\n                    to='/'>\r\n                {createNewLabel}\r\n            </Button>\r\n        </Toolbar>\r\n    );\r\n};\r\nexport default Header;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        backgroundColor: brown[900],\r\n        height: 64,\r\n        //zIndex: 100,\r\n        //maxWidth: 1000,\r\n        width: '100%',\r\n        //height: '100%',\r\n\r\n        boxSizing: 'border-box',\r\n        padding: '0 10px',\r\n    },\r\n    logo: {\r\n        flexGrow: 1,\r\n        color: 'white'\r\n    },\r\n    button: {\r\n        textTransform: 'none'\r\n    },\r\n});\r\n\r\n\r\n","import React, {ReactElement} from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../Utils/lang\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst usePageNotFound = () => {\r\n    const lang = useSelector(getLang);\r\n    const pageNotFoundLabel = translate(lang, 'Page not found')\r\n    return {pageNotFoundLabel}\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst PageNotFound: React.FC<{}> = (): ReactElement => {\r\n    const {pageNotFoundLabel} = usePageNotFound();\r\n\r\n    return (\r\n        <Typography align='center'\r\n                    color='secondary'\r\n                    variant='h6'>\r\n            {pageNotFoundLabel}\r\n        </Typography>\r\n    )\r\n\r\n};\r\nexport default PageNotFound;\r\n\r\n\r\n","import React from \"react\";\r\nimport {ReactElement} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\n\r\n//================= COMPONENTS ========================\r\nconst CreateNewItemGraph: React.FC<PropsType> = (props): ReactElement => {\r\n    const {width, height} = props;\r\n    let w = 130;\r\n    let h = height * w / width;\r\n    if (h > 68) {\r\n        h = 68;\r\n        w = h * width / height;\r\n    }\r\n    const useStyles = makeStyles({\r\n        graph: {\r\n            width: w,\r\n            height: h,\r\n            border: '3px solid darkblue',\r\n            boxSizing: 'border-box',\r\n            backgroundColor: indigo[400]\r\n        },\r\n    });\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.graph}/>\r\n    )\r\n};\r\nexport default CreateNewItemGraph;\r\n\r\n//============== TYPE ====================\r\ntype PropsType = {\r\n    width: number\r\n    height: number\r\n}","import React from \"react\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {editorAC} from \"../../../Store/reducers/editor-reducer\";\r\nimport CreateNewItemGraph from \"./CreateNewItemGraph\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport {appAC} from \"../../../Store/reducers/app-reducer\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useCreateNewItem = (width: number, height: number) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setSize({width, height}));\r\n        dispatch(appAC.setIsCreated(true));\r\n    };\r\n    return {\r\n        classes, onClickHandler\r\n    }\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst CreateNewItem: React.FC<PropsType> = (props) => {\r\n    const {sizeLabel, width, height} = props;\r\n    const {\r\n        classes, onClickHandler\r\n    } = useCreateNewItem(width, height);\r\n\r\n    return (\r\n        <Card className={classes.root} elevation={6}>\r\n            <CardActionArea component={RouterLink}\r\n                            className={classes.cardActionArea}\r\n                            onClick={onClickHandler}\r\n                            to='/editor'>\r\n                <CardContent className={classes.cardContent}>\r\n                    <div className={classes.graph}>\r\n                        <CreateNewItemGraph width={width} height={height}/>\r\n                    </div>\r\n                    <div className={classes.description}>\r\n                        <Typography gutterBottom variant=\"subtitle2\" component=\"h6\" align='center'>\r\n                            {sizeLabel}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"body2\" component=\"h6\" align='center'>\r\n                            {`${width} x ${height} px`}\r\n                        </Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n};\r\nexport default CreateNewItem;\r\n\r\n//=================== TYPE ==============\r\ntype PropsType = {\r\n    sizeLabel: string\r\n    width: number\r\n    height: number\r\n}\r\n\r\n//================= STYLES ================\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 150,\r\n        height: 150,\r\n        margin: 5,\r\n        '&:hover': {\r\n            backgroundColor: grey[200]\r\n        }\r\n    },\r\n    cardActionArea: {\r\n        height: '100%'\r\n    },\r\n    cardContent: {\r\n        padding: 0,\r\n        '&:last-child': {\r\n            //paddingBottom: 5\r\n        },\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    graph: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    description: {\r\n        padding: 5,\r\n    }\r\n});","import {OutlinedInputProps, TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst RenderTextField: React.FC<PropsType> = (props) => {\r\n    const {icon, label, input, meta: {touched, invalid, error}, classes, ...custom} = props;\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            {icon &&\r\n            <div className={styles.iconLeft}>\r\n                {icon}\r\n            </div>}\r\n            <TextField\r\n                InputProps={classes ? {classes} as Partial<OutlinedInputProps> : null}\r\n                variant=\"outlined\"\r\n                label={label}\r\n                placeholder={label}\r\n                error={touched && invalid}\r\n                helperText={touched && error}\r\n                {...input}\r\n                {...custom}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RenderTextField;\r\n\r\n//======================= TYPES =====================\r\ntype PropsType = {\r\n    icon: React.ReactElement\r\n    label: string\r\n    input: any\r\n    meta: {\r\n        touched: boolean\r\n        invalid: boolean\r\n        error: string\r\n    }\r\n    classes?: any\r\n}\r\n//========================= STYLES ===================\r\nconst useStyles = makeStyles({\r\n        root: {\r\n            position: 'relative',\r\n            width: '100%',\r\n            '& .MuiFormLabel-root': {\r\n                backgroundColor: 'white',\r\n            }\r\n        },\r\n        label: {\r\n            backgroundColor: 'white'\r\n        },\r\n        iconLeft: {\r\n            position: 'absolute',\r\n            left: -5,\r\n            top: '50%',\r\n            transform: 'translate(-100%, -50%)'\r\n        }\r\n    }\r\n);\r\n\r\n\r\n","import {StateType} from \"../store\";\r\nexport const getSize = (state: StateType) => state.editor.size;\r\nexport const getMainSidebarItem = (state: StateType) => state.editor.mainSidebarItem;\r\nexport const getShowSecondSidebar = (state: StateType) => state.editor.showSecondSidebar;\r\nexport const getSecondarySidebarBackgroundTabIndex = (state: StateType) => state.editor.secondarySidebarBackgroundTabIndex;\r\nexport const getBackgroundStyle = (state: StateType) => state.editor.backgroundStyle;\r\nexport const getBackgroundStyleColor = (state: StateType) => state.editor.backgroundStyleColor;\r\nexport const getUseBorder = (state: StateType) => state.editor.useBorder;\r\nexport const getBorderColor = (state: StateType) => state.editor.borderColor;\r\nexport const getGradientStyle = (state: StateType) => state.editor.backgroundStyleGradient.gradientStyle;\r\nexport const getColorStart = (state: StateType) => state.editor.backgroundStyleGradient.colorStart;\r\nexport const getColorEnd = (state: StateType) => state.editor.backgroundStyleGradient.colorEnd;\r\nexport const getImageTabIndex = (state: StateType) => state.editor.imageTabIndex;\r\nexport const getImages = (state: StateType) => state.editor.backgroundStyleImage.images;\r\nexport const getCurrentImage = (state: StateType) => state.editor.backgroundStyleImage.currentImage;\r\nexport const getScaleMode = (state: StateType) => state.editor.backgroundStyleImage.scaleMode;\r\nexport const getAlign = (state: StateType) => state.editor.backgroundStyleImage.align;\r\nexport const getCanvasUrl = (state: StateType) => state.editor.canvasUrl;\r\nexport const getIsLoading = (state: StateType) => state.editor.isLoading;","import React, {ReactElement, useState} from \"react\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../Utils/lang\";\r\nimport {reduxForm, Field, InjectedFormProps, submit} from \"redux-form\";\r\nimport RenderTextField from \"../../common/RenderTextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {editorAC} from \"../../../Store/reducers/editor-reducer\";\r\nimport {getSize} from \"../../../Store/selectors/editor-selectors\";\r\nimport {appAC} from \"../../../Store/reducers/app-reducer\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useForm = () => {\r\n    const lang = useSelector(getLang);\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        setTimeout(() => dispatch(submit('size')));\r\n    };\r\n    const widthLabel = translate(lang, 'Width');\r\n    const heightLabel = translate(lang, 'Height');\r\n    const classes = useStylesForm();\r\n    const parseHandler = (value: string) => {\r\n        return value.replace(/\\D/ig, '')\r\n    };\r\n    return {\r\n        onChangeHandler, widthLabel, heightLabel,\r\n        classes, parseHandler\r\n    }\r\n}\r\n\r\n//========================== FORM =======================================\r\nconst Form: React.FC<FormPropsType> = ({handleSubmit}) => {\r\n    const {\r\n        onChangeHandler, widthLabel, heightLabel,\r\n        classes, parseHandler\r\n    } = useForm();\r\n    return (\r\n        <form onSubmit={handleSubmit}\r\n              className={classes.form}\r\n        >\r\n            <div>\r\n                <Field name='width'\r\n                       className={classes.field1}\r\n                       component={RenderTextField}\r\n                       parse={parseHandler}\r\n                       label={widthLabel}\r\n                       size='small'\r\n                       onChange={onChangeHandler}\r\n                />\r\n                <Field name='height'\r\n                       className={classes.field2}\r\n                       component={RenderTextField}\r\n                       label={heightLabel}\r\n                       size='small'\r\n                       onChange={onChangeHandler}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n//================================== REDUX-FORM ======================================\r\nconst ReduxForm = reduxForm<FormParamsType, FormOwnPropsType>({\r\n    form: 'size',\r\n})(Form);\r\n\r\n//======================== CUSTOM HOOK =========================\r\nconst useCreateNewCustom = () => {\r\n    const classes = useStyles();\r\n    const [viewForm, setViewForm] = useState(false);\r\n    const onClickHandler = () => {\r\n        setViewForm(true);\r\n    };\r\n    const dispatch = useDispatch();\r\n    const onSubmitHandler = (value: FormParamsType) => {\r\n        dispatch(editorAC.setSize({\r\n            width: +value.width,\r\n            height: +value.height\r\n        }));\r\n        dispatch(appAC.setIsCreated(true));\r\n    };\r\n    const lang = useSelector(getLang);\r\n    const buttonLabel = translate(lang, 'Create');\r\n    const customSizeLabel = translate(lang, 'Custom Size');\r\n    const size = useSelector(getSize);\r\n    const disabled = !(size && size.width && size.height)\r\n    return {\r\n        classes, viewForm, onClickHandler, disabled,\r\n        onSubmitHandler, buttonLabel, customSizeLabel\r\n    }\r\n};\r\n\r\n//========================= COMPONENT =======================\r\nconst CreateNewCustom: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, viewForm, onClickHandler, disabled,\r\n        onSubmitHandler, buttonLabel, customSizeLabel\r\n    } = useCreateNewCustom();\r\n\r\n    return (\r\n        <Card className={classes.root} elevation={6}>\r\n            {\r\n                !viewForm\r\n                    ? <CardActionArea\r\n                        className={classes.cardActionArea}\r\n                        component='button'\r\n                        onClick={onClickHandler}\r\n                    >\r\n                        <div className={classes.graph}>\r\n                            <AddIcon className={classes.icon}/>\r\n                        </div>\r\n                        <div className={classes.description}>\r\n                            <Typography gutterBottom variant=\"subtitle2\" component=\"h6\" align='center'>\r\n                                {customSizeLabel}\r\n                            </Typography>\r\n                        </div>\r\n                    </CardActionArea>\r\n                    : <div className={classes.formWrapper}>\r\n                        <ReduxForm onSubmit={onSubmitHandler}/>\r\n                        <div className={classes.buttonWrapper}>\r\n                            <Button className={classes.button}\r\n                                    disabled={disabled}\r\n                                    component={RouterLink}\r\n                                    to='/editor'\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    fullWidth\r\n                            >\r\n                                {buttonLabel}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </Card>\r\n    )\r\n};\r\nexport default CreateNewCustom;\r\n\r\n//=================== TYPE ==============\r\ntype FormPropsType =\r\n    InjectedFormProps<FormParamsType, FormOwnPropsType>\r\n    & FormOwnPropsType;\r\ntype FormParamsType = {\r\n    width: string\r\n    height: string\r\n}\r\ntype FormOwnPropsType = {};\r\n\r\n//================= STYLES ================\r\nconst useStylesForm = makeStyles({\r\n    field1: {\r\n        backgroundColor: 'white',\r\n        marginBottom: 10,\r\n    },\r\n    field2: {\r\n        backgroundColor: 'white',\r\n    },\r\n    form: {\r\n        padding: '10px 10px 0 10px',\r\n    }\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 150,\r\n        height: 150,\r\n        margin: 5,\r\n    },\r\n    cardActionArea: {\r\n        height: '100%',\r\n        //display: 'flex',\r\n        //flexDirection: 'column',\r\n        //justifyContent: 'flex-end',\r\n        position: 'relative'\r\n    },\r\n    icon: {\r\n        transform: 'scale(3)'\r\n    },\r\n    graph: {\r\n        width: '100%',\r\n        //flexGrow: 1,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 110\r\n    },\r\n    description: {\r\n        padding: 5,\r\n        height: 40,\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0\r\n    },\r\n    formWrapper: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    buttonWrapper: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: '0 10px'\r\n    },\r\n    button: {\r\n        textTransform: 'none'\r\n    }\r\n});","import React, {ReactElement} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport CreateNewItem from \"./CreateNewItem\";\r\nimport CreateNewCustom from \"./CreateNewCustom\";\r\n\r\n//================= CUSTOM HOOK =========================\r\nconst useCreateNew = () => {\r\n    const classes = useStyles();\r\n    return {\r\n        classes,\r\n    }\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst CreateNew: React.FC<{}> = (): ReactElement => {\r\n    const {classes} = useCreateNew();\r\n\r\n    const sizes = [\r\n        {\r\n            label: 'Large Rectangle',\r\n            width: 336,\r\n            height: 280\r\n        },\r\n        {\r\n            label: 'Medium Rectangle',\r\n            width: 300,\r\n            height: 250\r\n        },\r\n        {\r\n            label: 'Leaderboard',\r\n            width: 728,\r\n            height: 90\r\n        },\r\n        {\r\n            label: 'Large Mobile',\r\n            width: 320,\r\n            height: 100\r\n        },\r\n        {\r\n            label: 'Main Banner',\r\n            width: 468,\r\n            height: 60\r\n        },\r\n        {\r\n            label: 'Half Page',\r\n            width: 300,\r\n            height: 600\r\n        },\r\n        {\r\n            label: 'Square',\r\n            width: 250,\r\n            height: 250\r\n        },\r\n        {\r\n            label: 'Half Banner',\r\n            width: 234,\r\n            height: 60\r\n        },\r\n        {\r\n            label: 'Vertical Banner',\r\n            width: 120,\r\n            height: 240\r\n        },\r\n        {\r\n            label: 'Small Rectangle',\r\n            width: 180,\r\n            height: 150\r\n        },\r\n        {\r\n            label: 'Mobile Banner',\r\n            width: 300,\r\n            height: 50\r\n        },\r\n    ];\r\n    const CreateNewElements = sizes.map(\r\n        (el, index) => <CreateNewItem key={index}\r\n                                      sizeLabel={el.label}\r\n                                      width={el.width}\r\n                                      height={el.height}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={classes.createNew}>\r\n            <div className={classes.wrapper}>\r\n                <CreateNewCustom/>\r\n                {CreateNewElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreateNew\r\n\r\n//================= STYLES ================\r\nconst useStyles = makeStyles({\r\n    createNew: {\r\n        maxWidth: 1000,\r\n        width: '100%',\r\n        margin: '0 auto',\r\n        height: 'calc(100vh - 64px)',\r\n        padding: 10\r\n    },\r\n    wrapper: {\r\n        maxHeight: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    }\r\n});","import React, {ReactElement} from \"react\";\r\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\r\nimport TextFieldsSharpIcon from '@material-ui/icons/TextFieldsSharp';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../Store/selectors/app-selectors\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport {getMainSidebarItem} from \"../../../../Store/selectors/editor-selectors\";\r\nimport {editorAC} from \"../../../../Store/reducers/editor-reducer\";\r\nimport {translate} from \"../../../../Utils/lang\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useMainSidebar = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const labels = [];\r\n    labels[0] = translate(lang, 'Background');\r\n    labels[1] = translate(lang, 'Text');\r\n    const mainSidebarItem = useSelector(getMainSidebarItem);\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setShowSecondSidebar(true))\r\n    };\r\n    const changeHandler = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        dispatch(editorAC.setMainSidebarItem(newValue));\r\n    };\r\n    return {\r\n        classes, mainSidebarItem, onClickHandler,\r\n        changeHandler, labels\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst MainSidebar: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, mainSidebarItem, onClickHandler,\r\n        changeHandler, labels\r\n    } = useMainSidebar();\r\n    const icons = [\r\n        <ViewComfyIcon/>,\r\n        <TextFieldsSharpIcon/>\r\n    ];\r\n\r\n    return (\r\n        <Tabs\r\n            classes={{\r\n                indicator: classes.indicator\r\n            }}\r\n            orientation=\"vertical\"\r\n            value={mainSidebarItem}\r\n            onChange={changeHandler}\r\n        >\r\n            <Tab\r\n                label={labels[0]}\r\n                onClick={onClickHandler}\r\n                icon={icons[0]}\r\n                classes={{\r\n                    wrapper: classes.wrapper,\r\n                    selected: classes.selected,\r\n                    root: classes.tabRoot,\r\n                    labelIcon: classes.labelIcon\r\n                }}/>\r\n            <Tab label={labels[1]}\r\n                 onClick={onClickHandler}\r\n                 icon={icons[1]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                     labelIcon: classes.labelIcon\r\n                 }}/>\r\n        </Tabs>\r\n    )\r\n};\r\nexport default MainSidebar;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    cardContent: {\r\n        paddingLeft: 5,\r\n        paddingTop: 5,\r\n        paddingRight: 5,\r\n        '&:last-child': {\r\n            paddingBottom: 5\r\n        }\r\n    },\r\n    indicator: {\r\n        width: 3,\r\n        left: 'auto',\r\n        right: 0,\r\n        backgroundColor: 'white'\r\n    },\r\n    wrapper: {\r\n        fontSize: 12,\r\n        textTransform: 'none',\r\n        '& > *:first-child': {\r\n            marginBottom: '0!important'\r\n        }\r\n    },\r\n    selected: {\r\n        color: grey[50],\r\n        backgroundColor: brown[600]\r\n    },\r\n    tabRoot: {\r\n        padding: 0,\r\n        marginLeft: 0,\r\n        color: 'white',\r\n        maxWidth: '100%',\r\n        minWidth: '100%',\r\n    },\r\n    labelIcon: {\r\n        minHeight: 50,\r\n    }\r\n}));","export const mainSidebarWidth = 80;\r\nexport const secondSidebarWidth = 250;\r\nexport const editorToolbarHeight = 50;\r\nexport const verticalDisplacementOfRotator = 30;","import ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../Utils/lang\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {getShowSecondSidebar} from \"../../../../Store/selectors/editor-selectors\";\r\nimport {editorAC} from \"../../../../Store/reducers/editor-reducer\";\r\n\r\n//================= CUSTOM HOOK =====================\r\nconst useSecondarySidebarTitle = (title: string) => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const dispatch = useDispatch();\r\n    const showSecondSidebar = useSelector(getShowSecondSidebar);\r\n    const titleLabel = translate(lang, title);\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setShowSecondSidebar(!showSecondSidebar));\r\n    };\r\n    return {\r\n        classes, titleLabel, onClickHandler\r\n    }\r\n};\r\n\r\n//================= COMPONENT ======================\r\nconst SecondarySidebarTitle: React.FC<PropsType> = ({title})  => {\r\n    const {\r\n        classes, titleLabel, onClickHandler\r\n    } = useSecondarySidebarTitle(title);\r\n\r\n    return (\r\n        <div className={classes.title}>\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n            >\r\n                {titleLabel}\r\n            </Typography>\r\n            <IconButton onClick={onClickHandler}\r\n                        className={classes.icon}\r\n                        size='small'\r\n            >\r\n                <ArrowBackIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n};\r\nexport default SecondarySidebarTitle;\r\n\r\n//============= TYPE ===============\r\ntype PropsType = {\r\n    title: string\r\n};\r\n\r\n//============ STYLES =================\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingLeft: 10\r\n    },\r\n    typography: {\r\n        color: 'white'\r\n    },\r\n    icon: {\r\n        color: 'white'\r\n    }\r\n});","import {Tabs, Theme} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSecondarySidebarBackgroundTabIndex} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport React from \"react\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\n\r\n//====================== CUSTOM HOOK ====================\r\nconst useSecondarySidebarBackgroundTabs = () => {\r\n    const secondarySidebarBackgroundTabIndex = useSelector(getSecondarySidebarBackgroundTabIndex)\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        dispatch(editorAC.setSecondarySidebarBackgroundTabIndex(newValue))\r\n    };\r\n    const lang = useSelector(getLang);\r\n    const labels = [];\r\n    labels[0] = translate(lang, 'Color');\r\n    labels[1] = translate(lang, 'Gradient');\r\n    labels[2] = translate(lang, 'Image');\r\n    const classes = useStyles();\r\n    return {\r\n        secondarySidebarBackgroundTabIndex,\r\n        onChangeHandler, classes, labels\r\n    }\r\n}\r\n\r\n//======================= COMPONENT ====================\r\nconst BackgroundTabs: React.FC<{}> = () => {\r\n    const {\r\n        secondarySidebarBackgroundTabIndex,\r\n        onChangeHandler, classes, labels\r\n    } = useSecondarySidebarBackgroundTabs()\r\n    return (\r\n        <Tabs\r\n            value={secondarySidebarBackgroundTabIndex}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={onChangeHandler}\r\n            classes={{\r\n                indicator: classes.indicator\r\n            }}\r\n            className={classes.tabs}\r\n        >\r\n            <Tab label={labels[0]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n            <Tab label={labels[1]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n            <Tab label={labels[2]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n        </Tabs>\r\n    )\r\n};\r\nexport default BackgroundTabs;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    tabs: {\r\n        margin: '0 10px',\r\n        minHeight: 0,\r\n        borderBottom: `1px solid #aaa`,\r\n        '& .MuiTabs-flexContainer': {\r\n            justifyContent: 'space-between'\r\n        }\r\n    },\r\n    indicator: {\r\n        height: 3,\r\n        backgroundColor: 'white'\r\n    },\r\n    wrapper: {\r\n        fontSize: 12,\r\n        color: 'white',\r\n        textTransform: 'none',\r\n        '& > *:first-child': {\r\n            marginBottom: '0!important'\r\n        }\r\n    },\r\n    selected: {\r\n        color: 'white'\r\n    },\r\n    tabRoot: {\r\n        flexGrow: 1,\r\n        marginLeft: 0,\r\n        color: 'white',\r\n        maxWidth: 'auto',\r\n        minWidth: 'auto',\r\n        padding: 5,\r\n        minHeight: 0\r\n    },\r\n}));","import React, {ReactElement} from \"react\";\r\nimport styled from 'styled-components';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst Div = styled.div`\r\n  background: ${(props) => props.color};\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useSetColorButton = (color: string) => {\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setBackgroundStyleColor({color}));\r\n        dispatch(editorAC.setBackgroundStyle('color'));\r\n    };\r\n    const classes = useStyles();\r\n    return {\r\n        onClickHandler, classes\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst SetColorButton: React.FC<PropsType> = (props): ReactElement => {\r\n    const { color, colorTitle } = props;\r\n    const {\r\n        onClickHandler, classes\r\n    } = useSetColorButton(color);\r\n    return (\r\n        <Tooltip title={colorTitle} placement=\"right\" arrow\r\n                 classes={{\r\n                     tooltip: classes.tooltip,\r\n                     arrow: classes.arrow\r\n                 }}>\r\n            <Div color={color}\r\n                 onClick={onClickHandler}\r\n            />\r\n        </Tooltip>\r\n    )\r\n};\r\nexport default SetColorButton;\r\n\r\n//========================== TYPE =======================\r\ntype PropsType = {\r\n    color: string\r\n    colorTitle: string\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n});\r\n","import React, {useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {HexColorPicker} from \"react-colorful\";\r\nimport './../../css/styles.css'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styled from \"styled-components\";\r\n\r\n//===================== CUSTOM HOOK ===================\r\nconst useSelectColorPopover = (\r\n    onPickColor: (color: string) => void,\r\n    handleClose: () => void,\r\n    propsColor: string\r\n) => {\r\n    const [color, setColor] = useState(propsColor);\r\n    const onAcceptHandler = () => {\r\n        onPickColor(color);\r\n        handleClose();\r\n    };\r\n    const classes = useStyles();\r\n    return {\r\n        color, setColor,\r\n        onAcceptHandler, classes\r\n    }\r\n};\r\n\r\n//==================== STYLED =========================\r\nconst Div = styled.div`\r\n        width:  ${(props: {width: number}) => `${props.width}px`};\r\n        padding: 15px;\r\n`;\r\n\r\n//==================== COMPONENT ======================\r\nconst SelectColorPopover: React.FC<PropsType> = (props) => {\r\n    const {header, onPickColor, handleClose, propsColor, width = 230} = props;\r\n    const {\r\n        color, setColor,\r\n        onAcceptHandler, classes\r\n    } = useSelectColorPopover(onPickColor, handleClose, propsColor);\r\n    return (\r\n        <Div width={width}>\r\n            <Typography variant='subtitle2' className={classes.title}>\r\n                {header}\r\n            </Typography>\r\n\r\n            <HexColorPicker color={color} onChange={setColor}/>\r\n            <Button variant='contained'\r\n                    color='primary'\r\n                    fullWidth\r\n                    className={classes.button}\r\n                    onClick={onAcceptHandler}\r\n            >\r\n                Select\r\n            </Button>\r\n\r\n        </Div>\r\n    )\r\n};\r\nexport default SelectColorPopover;\r\n\r\n//=========================== TYPE =======================\r\ntype PropsType = {\r\n    header: string\r\n    onPickColor: (color: string) => void\r\n    handleClose: () => void\r\n    propsColor: string\r\n    width?: number\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        marginTop: 10,\r\n        textTransform: 'none'\r\n    },\r\n    title: {\r\n        marginBottom: 10\r\n    }\r\n});","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport styled from 'styled-components';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\nimport SelectColorPopover from \"../../../../../common/SelectColorPopover\";\r\nimport Popover from \"@material-ui/core/Popover/Popover\";\r\n\r\nconst Div = styled.div`\r\n  background: #fff;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content:center;\r\n  align-items: center;\r\n`;\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useSelectColorButton = () => {\r\n    const lang = useSelector(getLang);\r\n    const title = translate(lang, 'Select color');\r\n    const header = translate(lang, 'Select background color');\r\n    const dispatch = useDispatch();\r\n    const onPickColorHandler = (color: string) => {\r\n        dispatch(editorAC.setBackgroundStyleColor({color}))\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const classes = useStyles();\r\n    return {\r\n        title, onPickColorHandler, header,\r\n        onClickHandler, open, anchorEl,\r\n        handleClose, classes\r\n    }\r\n}\r\n\r\n//============== COMPONENT =================\r\nconst SelectColorButton: React.FC<{}> = () => {\r\n    const {\r\n        title, onPickColorHandler, header,\r\n        onClickHandler, open, anchorEl,\r\n        handleClose, classes\r\n    } = useSelectColorButton();\r\n    return (\r\n        <>\r\n            <Tooltip title={title} placement=\"right\" arrow\r\n                     classes={{\r\n                         tooltip: classes.tooltip,\r\n                         arrow: classes.arrow\r\n                     }}>\r\n                <Div onClick={onClickHandler}\r\n                >\r\n                    <AddIcon fontSize='large'/>\r\n                </Div>\r\n            </Tooltip>\r\n            <Popover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <SelectColorPopover header={header}\r\n                                    onPickColor={onPickColorHandler}\r\n                                    handleClose={handleClose}\r\n                                    propsColor='#FFF'\r\n                />\r\n            </Popover>\r\n\r\n        </>\r\n    )\r\n};\r\nexport default SelectColorButton;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React, {ReactElement} from \"react\";\r\nimport SetColorButton from \"./SetColorButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport SelectColorButton from \"./SelectColorButton\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useColor = () => {\r\n    const classes = useStyles();\r\n    const colors = [\r\n        {color: '#f44336', colorTitle: 'Red'},\r\n        {color: '#e91e63', colorTitle: 'Pink'},\r\n        {color: '#9c27b0', colorTitle: 'Purple'},\r\n        {color: '#673ab7', colorTitle: 'Deep Purple'},\r\n        {color: '#3f51b5', colorTitle: 'Indigo'},\r\n        {color: '#2196f3', colorTitle: 'Blue'},\r\n        {color: '#03a9f4', colorTitle: 'Light Blue'},\r\n        {color: '#00bcd4', colorTitle: 'Cyan'},\r\n        {color: '#009688', colorTitle: 'Teal'},\r\n        {color: '#4caf50', colorTitle: 'Green'},\r\n        {color: '#8bc34a', colorTitle: 'Light Green'},\r\n        {color: '#cddc39', colorTitle: 'Lime'},\r\n        {color: '#ffeb3b', colorTitle: 'Yellow'},\r\n        {color: '#ffc107', colorTitle: 'Amber'},\r\n        {color: '#ff9800', colorTitle: 'Orange'},\r\n        {color: '#ff5722', colorTitle: 'Deep Orange'},\r\n        {color: '#795548', colorTitle: 'Brown'},\r\n        {color: '#9e9e9e', colorTitle: 'Grey'},\r\n        {color: '#607d8b', colorTitle: 'Blue Grey'},\r\n    ];\r\n    const lang = useSelector(getLang);\r\n    const defaultPresetsLabel = translate(lang, 'Default presets');\r\n\r\n    return {\r\n        classes, colors, defaultPresetsLabel,\r\n\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Color: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, colors, defaultPresetsLabel,\r\n    } = useColor();\r\n    const pickColorButtonElements = colors.map(\r\n        el => <SetColorButton key={el.color}\r\n                              color={el.color}\r\n                              colorTitle={el.colorTitle}\r\n        />\r\n    );\r\n    return (\r\n        <div className={classes.scndSdbrBckgrndColor}>\r\n            <div className={classes.colorsBlock}>\r\n                <SelectColorButton />\r\n                <SetColorButton color='#fff' colorTitle='White'/>\r\n                <SetColorButton color='#858585' colorTitle='Grey'/>\r\n                <SetColorButton color='#000' colorTitle='Black' />\r\n            </div>\r\n            <Typography variant='body2' className={classes.typography}>\r\n                {defaultPresetsLabel}\r\n            </Typography>\r\n            <div className={classes.colorsBlock}>\r\n                {pickColorButtonElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Color;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    scndSdbrBckgrndColor: {\r\n        margin: '20px 10px',\r\n        flexGrow: 1\r\n    },\r\n    colorsBlock: {\r\n        display: 'grid',\r\n        gridGap: 10,\r\n        gridTemplateColumns: 'repeat(4, 1fr)'\r\n    },\r\n    typography: {\r\n        color: '#fff',\r\n        margin: '20px 0 10px'\r\n    }\r\n});\r\n\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport {GradientStyleType} from \"../../../../../../Types/types\";\r\nimport clsx from \"clsx\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport {getBackgroundStyle, getGradientStyle} from \"../../../../../../Store/selectors/editor-selectors\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useGradientStyleButton = (gradientStyle: GradientStyleType, tip: string) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const gradientStyleFromState = useSelector(getGradientStyle);\r\n    const backgroundStyle = useSelector(getBackgroundStyle);\r\n    const lang = useSelector(getLang);\r\n    const tipLabel = translate(lang, tip)\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setBackgroundStyle('gradient'));\r\n        dispatch(editorAC.setGradientStyle(gradientStyle));\r\n    };\r\n    return {\r\n        classes, onClickHandler, gradientStyleFromState,\r\n        backgroundStyle, tipLabel\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst GradientStyleButton: React.FC<PropsType> = (props) => {\r\n    const {\r\n        gradientStyle, tip\r\n    } = props;\r\n    const {\r\n        classes, onClickHandler, gradientStyleFromState,\r\n        backgroundStyle, tipLabel\r\n    } = useGradientStyleButton(gradientStyle, tip);\r\n\r\n    return (\r\n        <Tooltip title={tipLabel} placement=\"right\" arrow\r\n                 classes={{\r\n                     tooltip: classes.tooltip,\r\n                     arrow: classes.arrow\r\n                 }}>\r\n        <div onClick={onClickHandler}\r\n             className={clsx(\r\n                 classes.gradientStyleButton,\r\n                 gradientStyle === 'horizontal' && classes.horizontal,\r\n                 gradientStyle === 'vertical' && classes.vertical,\r\n                 gradientStyle === 'radial' && classes.radial,\r\n                 backgroundStyle === 'gradient' && gradientStyleFromState === gradientStyle && classes.selected\r\n             )}/>\r\n        </Tooltip>\r\n    )\r\n};\r\nexport default GradientStyleButton;\r\n\r\n//================= TYPE =============\r\ntype PropsType = {\r\n    gradientStyle: GradientStyleType\r\n    tip: string\r\n}\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    gradientStyleButton: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 10,\r\n        border: '2px solid black',\r\n        boxSizing: 'border-box',\r\n    },\r\n    horizontal: {\r\n        background: 'linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(255,255,255,1) 100%)'\r\n    },\r\n    vertical: {\r\n        background: 'linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(0,0,0,1) 100%)'\r\n    },\r\n    radial: {\r\n        background: 'radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(0,0,0,1) 100%)'\r\n    },\r\n    selected: {\r\n        outline: '2px solid #FFF'\r\n    },\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n});\r\n\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React, {ReactElement} from \"react\";\r\nimport GradientStyleButton from \"./GradientStyleButton\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useGradientStyle = () => {\r\n    const classes = useStyles();\r\n    return {\r\n        classes\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst GradientStyle: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes\r\n    } = useGradientStyle()\r\n    return (\r\n        <div className={classes.gradientStyle}>\r\n            <GradientStyleButton gradientStyle='horizontal' tip='Horizontal gradient'/>\r\n            <GradientStyleButton gradientStyle='vertical' tip='Vertical gradient'/>\r\n            <GradientStyleButton gradientStyle='radial' tip='Radial gradient'/>\r\n        </div>\r\n    )\r\n};\r\nexport default GradientStyle;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    gradientStyle: {\r\n        margin: '20px 10px',\r\n        display: 'grid',\r\n        gridGap: 10,\r\n        gridTemplateColumns: 'repeat(4, 1fr)'\r\n    }\r\n});\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport SelectColorPopover from \"./SelectColorPopover\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../Utils/lang\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst Div = styled.div`\r\n  background: ${(props: DivPropsType) => props.enable ? props.color : 'none'};;\r\n  width: ${(props: DivPropsType) => `${props.size}px`};\r\n  height: ${(props: DivPropsType) => `${props.size}px`};\r\n  border-radius: 2px;\r\n  border: 2px solid #fff;\r\n  cursor: ${(props: DivPropsType) => props.enable ? 'pointer' : 'auto'};\r\n  display: flex;\r\n  justify-content:center;\r\n  align-items: center;\r\n`;\r\n\r\n//==================== CUSTOM HOOK ==========================\r\nconst useSelectColorButtonCustom = (\r\n    enable: boolean, header: string, tipTitle: string | undefined\r\n) => {\r\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n        if (enable) {\r\n            setAnchorEl(event.currentTarget);\r\n        }\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const lang = useSelector(getLang);\r\n    const headerLabel = translate(lang, header);\r\n    const tipTitleLabel = tipTitle ? translate(lang, tipTitle) : '';\r\n    const classes = useStyles();\r\n    return {\r\n        onClickHandler, open, anchorEl, classes,\r\n        handleClose, headerLabel, tipTitleLabel,\r\n    }\r\n};\r\n\r\n//===================== COMPONENT ===========================\r\nconst SelectColorButtonCustom: React.FC<PropsType> = (props) => {\r\n    const {\r\n        color, enable, onPickColorHandler, size = 50, tipTitle, header,\r\n        anchorOriginVertical = 'top', anchorOriginHorizontal = 'left',\r\n        transformOriginVertical = 'top', transformOriginHorizontal = 'left'\r\n    } = props;\r\n\r\n    const {\r\n        onClickHandler, open, anchorEl, classes,\r\n        handleClose, headerLabel, tipTitleLabel,\r\n    } = useSelectColorButtonCustom(enable, header, tipTitle);\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                {\r\n                    tipTitle\r\n                        ? <Tooltip title={tipTitleLabel} placement=\"right\" arrow\r\n                                   classes={{\r\n                                       tooltip: classes.tooltip,\r\n                                       arrow: classes.arrow\r\n                                   }}>\r\n                            <Div size={size}\r\n                                 enable={enable}\r\n                                 color={color}\r\n                                 onClick={onClickHandler}\r\n                            />\r\n                        </Tooltip>\r\n                        : <Div size={size}\r\n                               enable={enable}\r\n                               color={color}\r\n                               onClick={onClickHandler}\r\n                        />\r\n                }\r\n            </>\r\n            <Popover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: anchorOriginVertical,\r\n                    horizontal: anchorOriginHorizontal,\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: transformOriginVertical,\r\n                    horizontal: transformOriginHorizontal,\r\n                }}\r\n            >\r\n                <SelectColorPopover header={headerLabel}\r\n                                    onPickColor={onPickColorHandler}\r\n                                    handleClose={handleClose}\r\n                                    propsColor={color}\r\n                />\r\n            </Popover>\r\n        </>\r\n    )\r\n};\r\nexport default SelectColorButtonCustom;\r\n\r\n//==================== TYPE ===================\r\ntype PropsType = {\r\n    tipTitle?: string | undefined\r\n    color: string\r\n    enable: boolean\r\n    onPickColorHandler: (color: string) => void\r\n    size?: number\r\n    header: string\r\n    anchorOriginVertical?: 'top' | 'center' | 'bottom' | number\r\n    anchorOriginHorizontal?: 'left' | 'center' | 'right' | number\r\n    transformOriginVertical?: 'top' | 'center' | 'bottom' | number\r\n    transformOriginHorizontal?: 'left' | 'center' | 'right' | number\r\n};\r\ntype DivPropsType = {\r\n    size: number\r\n    color: string\r\n    enable: boolean\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n});\r\n\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport {Tooltip} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\n\r\n//==================== CUSTOM HOOK ==========================\r\nconst useGradientColorInvert = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const tipLabel = translate(lang, 'Invert colors');\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.replaceColor())\r\n    };\r\n    return {\r\n        classes, onClickHandler, tipLabel\r\n    }\r\n}\r\n\r\n//===================== COMPONENT ===========================\r\nconst GradientColorInvert: React.FC<{}> = () => {\r\n    const {\r\n        classes, onClickHandler, tipLabel\r\n    } = useGradientColorInvert();\r\n    return (\r\n        <Tooltip title={tipLabel} placement=\"right\" arrow\r\n                 classes={{\r\n                     tooltip: classes.tooltip,\r\n                     arrow: classes.arrow\r\n                 }}>\r\n            <IconButton size='small' onClick={onClickHandler}>\r\n                <CachedIcon className={classes.icon}/>\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n};\r\nexport default GradientColorInvert;\r\n\r\n//==================== STYLES ===============\r\nconst useStyles = makeStyles({\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    },\r\n    icon: {\r\n        color: 'white'\r\n    },\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport SelectColorButtonCustom from \"../../../../../common/SelectColorButtonCustom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getColorEnd, getColorStart} from \"../../../../../../Store/selectors/editor-selectors\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport styled from \"styled-components\";\r\nimport GradientColorInvert from \"./GradientColorInvert\";\r\n\r\n//===================== CUSTOM HOOK ===================\r\nconst useGradientColor = () => {\r\n    const classes = useStyles();\r\n    const colorStart = useSelector(getColorStart);\r\n    const colorEnd = useSelector(getColorEnd);\r\n    const dispatch = useDispatch()\r\n    const onSelectColorStartHandler = (color: string) => {\r\n        dispatch(editorAC.setColorStart(color))\r\n    };\r\n    const onSelectColorEndHandler = (color: string) => {\r\n        dispatch(editorAC.setColorEnd(color))\r\n    };\r\n    return {\r\n        classes, colorStart, colorEnd,\r\n        onSelectColorStartHandler, onSelectColorEndHandler\r\n    }\r\n};\r\n\r\n//==================== STYLED ====================\r\nconst GradientDiv = styled.div`\r\n    height: 25px;\r\n    margin-top: 5px;\r\n    background: ${\r\n    (props: PropsType) => `linear-gradient(90deg, ${props.colorStart} 0%, ${props.colorEnd} 100%)`\r\n};\r\n`\r\n\r\n//==================== COMPONENT ======================\r\nconst GradientColor: React.FC<{}> = () => {\r\n    const {\r\n        classes, colorStart, colorEnd,\r\n        onSelectColorStartHandler, onSelectColorEndHandler,\r\n    } = useGradientColor();\r\n\r\n    return (\r\n        <div className={classes.gradientColor}>\r\n            <div className={classes.buttons}>\r\n                <SelectColorButtonCustom\r\n                    color={colorStart}\r\n                    enable={true}\r\n                    onPickColorHandler={onSelectColorStartHandler}\r\n                    size={25}\r\n                    tipTitle='Select start color'\r\n                    header='Select start color'\r\n                    anchorOriginVertical='top'\r\n                    anchorOriginHorizontal='left'\r\n                    transformOriginVertical='top'\r\n                    transformOriginHorizontal='left'\r\n                />\r\n                <GradientColorInvert/>\r\n                <SelectColorButtonCustom\r\n                    color={colorEnd}\r\n                    enable={true}\r\n                    onPickColorHandler={onSelectColorEndHandler}\r\n                    size={25}\r\n                    tipTitle='Select end color'\r\n                    header='Select end color'\r\n                    anchorOriginVertical='top'\r\n                    anchorOriginHorizontal='right'\r\n                    transformOriginVertical='top'\r\n                    transformOriginHorizontal='right'\r\n                />\r\n            </div>\r\n            <GradientDiv colorStart={colorStart}\r\n                         colorEnd={colorEnd}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default GradientColor;\r\n\r\n//==================== TYPE ===================\r\ntype PropsType = {\r\n    colorStart: string\r\n    colorEnd: string\r\n}\r\n\r\n//==================== STYLES ===============\r\nconst useStyles = makeStyles({\r\n    gradientColor: {\r\n        padding: '0 10px',\r\n        marginBottom: 10\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n});","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React, {ReactElement} from \"react\";\r\nimport GradientStyle from \"./GradientStyle\";\r\nimport GradientColor from \"./GradientColor\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useGradient = () => {\r\n    const classes = useStyles();\r\n    return {\r\n        classes\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Gradient: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes\r\n    } = useGradient();\r\n    return (\r\n        <div className={classes.gradient}>\r\n            <GradientStyle/>\r\n            <GradientColor/>\r\n        </div>\r\n    )\r\n};\r\nexport default Gradient;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    gradient: {\r\n        flexGrow: 1\r\n    }\r\n});\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getImageTabIndex,\r\n} from \"../../../../../../Store/selectors/editor-selectors\";\r\nimport React from \"react\";\r\nimport {editorAC} from \"../../../../../../Store/reducers/editor-reducer\";\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Tabs, Theme} from \"@material-ui/core\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\n//====================== CUSTOM HOOK ====================\r\nconst useImageTabs = () => {\r\n    const imageTabIndex = useSelector(getImageTabIndex);\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        dispatch(editorAC.setImageTabIndex(newValue));\r\n    };\r\n    const lang = useSelector(getLang);\r\n    const labels = [];\r\n    labels[0] = translate(lang, 'My images');\r\n    labels[1] = translate(lang, 'Settings');\r\n    const classes = useStyles();\r\n    return {\r\n        imageTabIndex, onChangeHandler, classes,\r\n        labels\r\n    }\r\n};\r\n\r\n//======================= COMPONENT ====================\r\nconst ImageTabs: React.FC<{}> = () => {\r\n    const {\r\n        imageTabIndex, onChangeHandler, classes,\r\n        labels\r\n    } = useImageTabs();\r\n    return (\r\n        <Tabs\r\n            value={imageTabIndex}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={onChangeHandler}\r\n            classes={{\r\n                indicator: classes.indicator\r\n            }}\r\n            className={classes.tabs}\r\n        >\r\n            <Tab label={labels[0]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n            <Tab label={labels[1]}\r\n                 classes={{\r\n                     wrapper: classes.wrapper,\r\n                     selected: classes.selected,\r\n                     root: classes.tabRoot,\r\n                 }}\r\n            />\r\n        </Tabs>\r\n    )\r\n};\r\nexport default ImageTabs;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    tabs: {\r\n        minHeight: 0,\r\n        borderBottom: `1px solid #aaa`,\r\n        '& .MuiTabs-flexContainer': {\r\n            justifyContent: 'space-between'\r\n        }\r\n    },\r\n    indicator: {\r\n        height: 3,\r\n        backgroundColor: 'white'\r\n    },\r\n    wrapper: {\r\n        fontSize: 12,\r\n        color: 'white',\r\n        textTransform: 'none',\r\n        '& > *:first-child': {\r\n            marginBottom: '0!important'\r\n        }\r\n    },\r\n    selected: {\r\n        color: 'white'\r\n    },\r\n    tabRoot: {\r\n        flexGrow: 1,\r\n        marginLeft: 0,\r\n        color: 'white',\r\n        maxWidth: 'auto',\r\n        minWidth: 'auto',\r\n        padding: 5,\r\n        minHeight: 0\r\n    },\r\n}));","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport {ImageType} from \"../../../../../../../Types/types\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {editorAC} from \"../../../../../../../Store/reducers/editor-reducer\";\r\n\r\n//================== CUSTOM HOOK ================\r\nconst useMyImagesItem = (image: ImageType) => {\r\n    const classes = useStylesForm();\r\n    const imgSrc = image.src as string;\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(editorAC.setBackgroundStyle('image'));\r\n        dispatch(editorAC.setCurrentImage(image.id));\r\n    };\r\n    return {\r\n        classes, imgSrc, onClickHandler\r\n    }\r\n};\r\n\r\n//================== COMPONENT =================\r\nconst MyImagesItem: React.FC<PropsType> = ({image}) => {\r\n    const {\r\n        classes, imgSrc, onClickHandler\r\n    } = useMyImagesItem(image);\r\n\r\n    return (\r\n        <Card elevation={6}>\r\n            <CardActionArea onClick={onClickHandler}>\r\n                <img src={imgSrc} alt=\"\" className={classes.img}/>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n};\r\nexport default MyImagesItem\r\n//=============== TYPE ===============\r\ntype PropsType = {\r\n   image: ImageType\r\n}\r\n\r\n//================= STYLES ================\r\nconst useStylesForm = makeStyles({\r\n    img: {\r\n        width: 110,\r\n        display: 'block'\r\n    }\r\n})","import BackupIcon from '@material-ui/icons/Backup';\r\nimport React, {\r\n    //ChangeEvent, useRef\r\n} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    //loadImage,\r\n    loadImages\r\n} from \"../../../../../../../Store/reducers/editor-reducer\";\r\nimport {getImages} from \"../../../../../../../Store/selectors/editor-selectors\";\r\nimport MyImagesItem from \"./MyImagesItem\";\r\nimport {DropzoneRootProps, useDropzone} from \"react-dropzone\";\r\nimport styled from \"styled-components\";\r\nimport {getLang} from \"../../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../../Utils/lang\";\r\n\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useImageMyImages = () => {\r\n    const classes = useStyles();\r\n    //const ref = useRef<HTMLInputElement>(null);\r\n    const dispatch = useDispatch();\r\n    const images = useSelector(getImages);\r\n    const lang = useSelector(getLang);\r\n    const label1 = translate(lang, 'Drag and drop some files here,');\r\n    const label2 = translate(lang, 'or click to select files');\r\n\r\n    const imgCardElements = images.map(\r\n        el => <MyImagesItem key={el.id} image={el}/>\r\n    );\r\n\r\n    // const onChangeHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    //     if (e.target.files) {\r\n    //         const file = e.target.files[0];\r\n    //         dispatch(loadImage(file))\r\n    //     }\r\n    // };\r\n    // const onClickHandler = () => {\r\n    //     if (ref && ref.current) {\r\n    //         ref.current.click()\r\n    //     }\r\n    // };\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject,\r\n    } = useDropzone({\r\n        accept: 'image/*',\r\n        onDrop: files => dispatch(loadImages(files))\r\n    });\r\n\r\n\r\n    return {\r\n        //ref, onChangeHandle, onClickHandler,\r\n        classes, imgCardElements, getRootProps,\r\n        getInputProps, isDragActive, isDragAccept,\r\n        isDragReject, label1, label2\r\n    }\r\n};\r\n\r\n//=================== STYLED ======================\r\nconst getColor = (props: DropzoneRootProps) => {\r\n    if (props.isDragAccept) {\r\n        return '#00e676';\r\n    }\r\n    if (props.isDragReject) {\r\n        return '#ff1744';\r\n    }\r\n    if (props.isDragActive) {\r\n        return '#2196f3';\r\n    }\r\n    return '#eeeeee';\r\n};\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  border-width: 2px;\r\n  border-radius: 2px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  cursor: pointer;\r\n  background-color: #8d6e63;\r\n  color: #FFF;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n  transition: background-color 0.3s;\r\n  margin-bottom: 10px;\r\n  height: 148px;\r\n  &:hover {\r\n    background-color: #a1887f;\r\n  } \r\n`;\r\n\r\n//================= COMPONENT ========================\r\nconst MyImages: React.FC<{}> = () => {\r\n    const {\r\n        //ref, onChangeHandle, onClickHandler,\r\n        classes, imgCardElements, getRootProps,\r\n        getInputProps, isDragActive, isDragAccept,\r\n        isDragReject, label1, label2\r\n    } = useImageMyImages();\r\n\r\n    return (\r\n        <div className={classes.imageMyImages}>\r\n            {/*<div>*/}\r\n            {/*    <input*/}\r\n            {/*        ref={ref}*/}\r\n            {/*        accept=\"image/*\"*/}\r\n            {/*        onChange={onChangeHandle}*/}\r\n            {/*        className={classes.input}*/}\r\n            {/*        id=\"12345\"*/}\r\n            {/*        multiple*/}\r\n            {/*        type=\"file\"*/}\r\n            {/*    />*/}\r\n            {/*    <label htmlFor=\"12345\"*/}\r\n            {/*           className={classes.label}*/}\r\n            {/*    >*/}\r\n            {/*        <Button*/}\r\n            {/*            variant='contained'*/}\r\n            {/*            fullWidth*/}\r\n            {/*            startIcon={<BackupIcon/>}*/}\r\n            {/*            className={classes.button}*/}\r\n            {/*            onClick={onClickHandler}*/}\r\n            {/*        >*/}\r\n            {/*            Upload image*/}\r\n            {/*        </Button>*/}\r\n            {/*    </label>*/}\r\n            {/*</div>*/}\r\n\r\n            <div>\r\n                <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}\r\n                >\r\n                    <input {...getInputProps()} />\r\n                    <p>{label1}</p>\r\n                    <div className={classes.fakeButton}>\r\n                        <BackupIcon style={{\r\n                            marginRight: 10\r\n                        }}/>\r\n                        <p>Upload file(s)</p>\r\n                    </div>\r\n                    <p>{label2}</p>\r\n                </Container>\r\n            </div>\r\n\r\n            <div className={classes.imagesWrapper}>\r\n                <div className={classes.subWrapper}>\r\n                    {imgCardElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default MyImages\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n        imageMyImages: {\r\n            boxSizing: 'border-box',\r\n            padding: '10px 0',\r\n            height: 'calc(100vh - 64px - 117px - 140px)'\r\n        },\r\n        input: {\r\n            display: 'none'\r\n        },\r\n        label: {\r\n            display: 'block'\r\n        },\r\n        button: {\r\n            textTransform: 'none',\r\n            backgroundColor:\r\n                'white',\r\n            marginBottom: 20\r\n        },\r\n        img: {\r\n            width: 110,\r\n            borderRadius: 5,\r\n            '&:not(:last-child)': {\r\n                marginBottom: 20\r\n            }\r\n        },\r\n        imagesWrapper: {\r\n            width: 230,\r\n            height: 'calc(100vh - 64px - 117px - 140px - 56px)',\r\n            overflow: 'auto',\r\n        },\r\n        subWrapper: {\r\n            maxHeight: '100%',\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gridGap: 10,\r\n            gridRowGap: 10,\r\n            alignItems: 'start',\r\n        },\r\n        fakeButton: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: '0px 20px',\r\n            backgroundColor: '#FFF',\r\n            borderRadius: 5,\r\n            color: '#000'\r\n        },\r\n    });","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAlign} from \"../../../../../../../Store/selectors/editor-selectors\";\r\nimport {AlignType} from \"../../../../../../../Types/types\";\r\nimport clsx from \"clsx\";\r\nimport {editorAC} from \"../../../../../../../Store/reducers/editor-reducer\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useAlignButton = (ownAlign: AlignType) => {\r\n    const classes = useStyles();\r\n    const align = useSelector(getAlign);\r\n    const dispatch = useDispatch();\r\n    const onClickHandle = () => {\r\n        dispatch(editorAC.setAlign(ownAlign))\r\n    };\r\n    return {\r\n        classes, align, onClickHandle\r\n    }\r\n};\r\n\r\n//================= COMPONENT ========================\r\nconst SettingsAlignButton: React.FC<PropsType> = ({ownAlign}) => {\r\n    const {\r\n        classes, align, onClickHandle\r\n    } = useAlignButton(ownAlign);\r\n\r\n    return (\r\n        <div className={clsx(classes.alignButton, align === ownAlign && classes.selected)}\r\n             onClick={onClickHandle}\r\n        />\r\n    )\r\n};\r\nexport default SettingsAlignButton\r\n\r\n//====================== TYPE =====================\r\ntype PropsType = {\r\n    ownAlign: AlignType\r\n}\r\n\r\n//===================== STYLES ====================\r\nconst useStyles = makeStyles({\r\n    alignButton: {\r\n        width: 12,\r\n        height: 12,\r\n        boxSizing: 'border-box',\r\n        border: '2px solid #ccc',\r\n        cursor: 'pointer'\r\n    },\r\n    selected: {\r\n        backgroundColor: 'white',\r\n        border: '2px solid #FFF'\r\n    }\r\n});","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport SettingsAlignButton from \"./SettingsAlignButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../../Utils/lang\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {AlignType} from \"../../../../../../../Types/types\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useAlign = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const alignLabel = translate(lang, 'Align');\r\n    const aligns = [\r\n        'left-top',\r\n        'center-top',\r\n        'right-top',\r\n        'left-center',\r\n        'center',\r\n        'right-center',\r\n        'left-bottom',\r\n        'center-bottom',\r\n        'right-bottom'\r\n    ] as Array<AlignType>;\r\n    const alignButtonsElements = aligns.map(\r\n        el => <SettingsAlignButton key={el} ownAlign={el}/>\r\n    );\r\n\r\n    return {\r\n        classes, alignLabel, alignButtonsElements\r\n    }\r\n};\r\n\r\n//================= COMPONENT ========================\r\nconst SettingsAlign: React.FC<{}> = () => {\r\n    const {\r\n        classes, alignLabel, alignButtonsElements\r\n    } = useAlign();\r\n\r\n    return (\r\n        <div className={classes.align}>\r\n            <Typography className={classes.typography}\r\n                        variant='body2'\r\n            >\r\n                {alignLabel}\r\n            </Typography>\r\n            <div className={classes.alignButtonWrapper}>\r\n                {alignButtonsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default SettingsAlign\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    align: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    typography: {\r\n        color: '#fff',\r\n        marginRight: 20\r\n    },\r\n    alignButtonWrapper: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 1fr 1fr',\r\n        gridGap: 12,\r\n        width: 60\r\n    }\r\n\r\n});","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Select, Typography} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getScaleMode} from \"../../../../../../../Store/selectors/editor-selectors\";\r\nimport {getLang} from \"../../../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../../../Utils/lang\";\r\nimport {ScaleModeType} from \"../../../../../../../Types/types\";\r\nimport {editorAC} from \"../../../../../../../Store/reducers/editor-reducer\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useScaleMode = () => {\r\n    const classes = useStyles();\r\n    const scaleMode = useSelector(getScaleMode);\r\n    const lang = useSelector(getLang);\r\n    const labels = ['Maintain aspect', 'Exact fit', 'Scale crop', 'No scale'];\r\n    const optionElements = labels.map(\r\n        el => <option key={el} value={el}>{translate(lang, el)}</option>\r\n    );\r\n    const scaleModeLabel = translate(lang, 'Scale mode');\r\n    const dispatch = useDispatch()\r\n    const onChangeHandler = (event: React.ChangeEvent<{name?: string; value: unknown }>) => {\r\n        const value = event.target.value as ScaleModeType\r\n        dispatch(editorAC.setScaleMode(value))\r\n    };\r\n    return {\r\n        classes, scaleMode, onChangeHandler, optionElements,\r\n        scaleModeLabel\r\n    }\r\n};\r\n\r\n//================= COMPONENT ========================\r\nconst SettingsScaleMode: React.FC<{}> = () => {\r\n    const {\r\n        classes, scaleMode, onChangeHandler, optionElements,\r\n        scaleModeLabel\r\n    } = useScaleMode();\r\n\r\n    return (\r\n        <div className={classes.scaleMode}>\r\n            <Typography className={classes.typography}\r\n                        variant='body2'\r\n            >\r\n                {scaleModeLabel}\r\n            </Typography>\r\n            <Select\r\n                native\r\n                value={scaleMode}\r\n                onChange={onChangeHandler}\r\n                className={classes.select}\r\n                inputProps={{\r\n                    name: 'scale-mode',\r\n                    id: 'scale-mode-native-simple',\r\n                }}\r\n            >\r\n                {optionElements}\r\n            </Select>\r\n        </div>\r\n    )\r\n};\r\nexport default SettingsScaleMode\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    scaleMode: {\r\n        margin: '10px 0 20px'\r\n    },\r\n    select: {\r\n        backgroundColor: brown[100]\r\n    },\r\n    typography: {\r\n        color: '#fff',\r\n        marginBottom: 5\r\n    },\r\n});","import React from \"react\";\r\nimport SettingsAlign from \"./SettingsAlign\";\r\nimport SettingsScaleMode from \"./SettingsScaleMode\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getScaleMode} from \"../../../../../../../Store/selectors/editor-selectors\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useImageSettings = () => {\r\n    const scaleMode = useSelector(getScaleMode);\r\n    return {\r\n        scaleMode\r\n    }\r\n};\r\n\r\n//================= COMPONENT ========================\r\nconst Settings: React.FC<{}> = () => {\r\n    const {\r\n        scaleMode\r\n    } = useImageSettings();\r\n\r\n    return (\r\n        <div>\r\n            <SettingsScaleMode/>\r\n            {\r\n                scaleMode !== 'Exact fit' &&\r\n                <SettingsAlign/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Settings;","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport ImageTabs from \"./ImageTabs\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getImageTabIndex} from \"../../../../../../Store/selectors/editor-selectors\";\r\nimport {ImageTabIndexEnum} from \"../../../../../../Types/types\";\r\nimport MyImages from \"./MyImages/MyImages\";\r\nimport Settings from \"./Settings/Settings\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useImage = () => {\r\n    const classes = useStyles();\r\n    const imageTabIndex = useSelector(getImageTabIndex);\r\n    return {\r\n        classes, imageTabIndex,\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Image: React.FC<{}> = () => {\r\n    const {\r\n        classes, imageTabIndex,\r\n    } = useImage();\r\n\r\n    return (\r\n        <div className={classes.image}>\r\n            <ImageTabs/>\r\n            {\r\n                imageTabIndex === ImageTabIndexEnum.myImage &&\r\n                    <MyImages/>\r\n            }\r\n            {\r\n                imageTabIndex === ImageTabIndexEnum.imageSetting &&\r\n                <Settings/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Image;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    image: {\r\n        flexGrow: 1,\r\n        padding: '0 10px',\r\n        marginBottom: 10,\r\n        height: 'calc(100vh - 64px - 117px)'\r\n    },\r\n    buttonWrapper: {\r\n        marginTop: 20\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    label: {\r\n        display: 'block'\r\n    },\r\n    button: {\r\n        textTransform: 'none',\r\n        backgroundColor: 'white'\r\n    }\r\n});\r\n\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport {CheckboxProps, FormControlLabel} from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport SelectColorButtonCustom from \"../../../../common/SelectColorButtonCustom\";\r\nimport {getBorderColor, getUseBorder} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst WhiteCheckbox = withStyles({\r\n    root: {\r\n        color: 'white',\r\n        // '&$checked': {\r\n        //     color: 'white',\r\n        // },\r\n    }\r\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\r\n\r\n//===================== CUSTOM HOOK ===================\r\nconst useBackgroundBorder = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const useBorder = useSelector(getUseBorder);\r\n    const borderColor = useSelector(getBorderColor);\r\n    const borderLabel = translate(lang, 'Border');\r\n    const useBorderLabel = translate(lang, 'Use border');\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        if (useBorder) {\r\n            dispatch(editorAC.setCanvasUrl('border', null))\r\n            dispatch(editorAC.setBorderColor('#000'));\r\n        }\r\n        dispatch(editorAC.setUseBorder(!useBorder))\r\n    };\r\n    const onSelectHandler = (color: string) => {\r\n        dispatch(editorAC.setBorderColor(color))\r\n    };\r\n    return {\r\n        classes, borderLabel, useBorderLabel,\r\n        useBorder, onChangeHandler, onSelectHandler,\r\n        borderColor\r\n    }\r\n};\r\n\r\n//==================== COMPONENT ======================\r\nconst BackgroundBorder: React.FC<{}> = () => {\r\n    const {\r\n        classes, borderLabel, useBorderLabel,\r\n        useBorder, onChangeHandler, onSelectHandler,\r\n        borderColor\r\n    } = useBackgroundBorder();\r\n\r\n    return (\r\n        <div className={classes.border}>\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n            >\r\n                {borderLabel}\r\n            </Typography>\r\n            <div className={classes.selectColorBlock}>\r\n                <FormControlLabel\r\n                    control={\r\n                        <WhiteCheckbox\r\n                            checked={useBorder}\r\n                            onChange={onChangeHandler}\r\n                        />\r\n                    }\r\n                    label={useBorderLabel}\r\n                    className={classes.formControlLabel}\r\n                />\r\n                <SelectColorButtonCustom\r\n                    color={borderColor}\r\n                    enable={useBorder}\r\n                    onPickColorHandler={onSelectHandler}\r\n                    size={25}\r\n                    tipTitle='Select color'\r\n                    header='Select border color'\r\n                    anchorOriginVertical='bottom'\r\n                    anchorOriginHorizontal='right'\r\n                    transformOriginVertical='bottom'\r\n                    transformOriginHorizontal='right'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default BackgroundBorder;\r\n\r\n//============ STYLES =================\r\nconst useStyles = makeStyles({\r\n    border: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        margin: '0 10px',\r\n        borderTop: '1px solid #ccc'\r\n    },\r\n    typography: {\r\n        color: 'white'\r\n    },\r\n    selectColorBlock: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    formControlLabel: {\r\n        color: 'white'\r\n    },\r\n    checkbox: {\r\n        color: 'white',\r\n        // '&$checked': {\r\n        //     color: 'white'\r\n        // }\r\n    },\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport SecondarySidebarTitle from \"../SecondarySidebarTitle\";\r\nimport BackgroundTabs from \"./BackgroundTabs\";\r\nimport Color from \"./Color/Color\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getSecondarySidebarBackgroundTabIndex} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {BackgroundTabIndexEnum} from \"../../../../../Types/types\";\r\nimport Gradient from \"./Gradient/Gradient\";\r\nimport Image from \"./Image/Image\";\r\nimport BackgroundBorder from \"./BackgroundBorder\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBackground = () => {\r\n    const classes = useStyles();\r\n    const secondarySidebarBackgroundTabIndex = useSelector(getSecondarySidebarBackgroundTabIndex)\r\n    return {\r\n        classes, secondarySidebarBackgroundTabIndex\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Background: React.FC<{}> = () => {\r\n    const {\r\n        classes, secondarySidebarBackgroundTabIndex\r\n    } = useBackground();\r\n\r\n    return (\r\n        <div className={classes.Background}>\r\n            <SecondarySidebarTitle title='Background'/>\r\n            <BackgroundTabs/>\r\n            {\r\n                secondarySidebarBackgroundTabIndex === BackgroundTabIndexEnum.color &&\r\n                <Color/>\r\n            }\r\n            {\r\n                secondarySidebarBackgroundTabIndex === BackgroundTabIndexEnum.gradient &&\r\n                <Gradient/>\r\n            }\r\n            {\r\n                secondarySidebarBackgroundTabIndex === BackgroundTabIndexEnum.image &&\r\n                <Image/>\r\n            }\r\n            <BackgroundBorder/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Background;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        backgroundColor: 'red'\r\n    },\r\n    Background: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: 'calc(100vh - 64px)',\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport SecondarySidebarTitle from \"../SecondarySidebarTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useSecondSidebarText = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const labels = [];\r\n    labels[0] = translate(lang, 'Add header');\r\n    labels[1] = translate(lang, 'Add subheader');\r\n    labels[2] = translate(lang, 'Add body text');\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = [];\r\n    onClickHandler[0] = () => {\r\n        dispatch(textAC.addText('header'));\r\n    };\r\n    onClickHandler[1] = () => {\r\n        dispatch(textAC.addText('subheader'));\r\n    };\r\n    onClickHandler[2] = () => {\r\n        dispatch(textAC.addText('body'));\r\n    };\r\n    return {classes, labels, onClickHandler}\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Text: React.FC<{}> = () => {\r\n    const {classes, labels, onClickHandler} = useSecondSidebarText();\r\n    return (\r\n        <div>\r\n            <SecondarySidebarTitle title='Add text' />\r\n            <div className={classes.buttons}>\r\n                <Button variant='outlined'\r\n                        onClick={onClickHandler[0]}\r\n                        fullWidth\r\n                        className={classes.button}\r\n                        classes={{\r\n                            label: classes.label1\r\n                        }}\r\n                >\r\n                    {labels[0]}\r\n                </Button>\r\n                <Button variant='outlined'\r\n                        onClick={onClickHandler[1]}\r\n                        fullWidth\r\n                        className={classes.button}\r\n                        classes={{\r\n                            label: classes.label2\r\n                        }}\r\n                >\r\n                    {labels[1]}\r\n                </Button>\r\n                <Button variant='outlined'\r\n                        onClick={onClickHandler[2]}\r\n                        fullWidth\r\n                        className={classes.button}\r\n                        classes={{\r\n                            label: classes.label3\r\n                        }}\r\n                >\r\n                    {labels[2]}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Text;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    buttons: {\r\n        margin: 10\r\n    },\r\n    button: {\r\n        height: 40,\r\n        textTransform: 'none',\r\n        color: '#eee',\r\n        backgroundColor: brown[400],\r\n        //border: '1px solid #ccc',\r\n        border: 'none',\r\n        '&:not(:last-child)': {\r\n            marginBottom: 10,\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: brown[300],\r\n            color: '#fff'\r\n        }\r\n    },\r\n    label1: {\r\n        fontSize: '32px',\r\n        lineHeight: '32px'\r\n    },\r\n    label2: {\r\n        fontSize: '24px',\r\n        lineHeight: '24px'\r\n    },\r\n    label3: {\r\n        fontSize: '16px',\r\n        lineHeight: '16px'\r\n    },\r\n});","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getMainSidebarItem} from \"../../../../Store/selectors/editor-selectors\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Background from \"./SecondarySidebarBackground/Background\";\r\nimport {MainSidebarItemEnum} from \"../../../../Types/types\";\r\nimport Text from \"./SecondarySidebarText/Text\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useSecondarySidebar = () => {\r\n    const classes = useStyles();\r\n    const mainSidebarItem = useSelector(getMainSidebarItem);\r\n    return {\r\n        classes, mainSidebarItem\r\n    }\r\n}\r\n\r\n//============== COMPONENT =================\r\nconst SecondarySidebar: React.FC<{}> = () => {\r\n    const {\r\n        classes, mainSidebarItem\r\n    } = useSecondarySidebar();\r\n    return (\r\n        <div className={classes.secondarySidebar}>\r\n            {\r\n                mainSidebarItem === MainSidebarItemEnum.background\r\n                && <Background/>\r\n            }\r\n            {\r\n                mainSidebarItem === MainSidebarItemEnum.text\r\n                && <Text/>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default SecondarySidebar;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    secondarySidebar: {\r\n        height: 'calc(100vh - 64px)',\r\n    }\r\n})","import {StateType} from \"../store\";\r\n\r\nexport const getZoom = (state: StateType) => state.workspace.zoom;\r\nexport const getDownloadCase = (state: StateType) => state.workspace.downloadCase;\r\nexport const getRefLeftPanel = (state: StateType) => state.workspace.refLeftPanel;\r\nexport const getRefToolbar = (state: StateType) => state.workspace.refToolbar;\r\nexport const getRefCanvas = (state: StateType) => state.workspace.refCanvas;\r\nexport const getIsDownloadDialogOpen = (state: StateType) => state.workspace.isDownloadDialogOpen;\r\nexport const getFileName = (state: StateType) => state.workspace.fileName;\r\nexport const getFileNameFormIsValid = (state: StateType) => state.workspace.fileNameFormIsValid;\r\nexport const getJpegQuality = (state: StateType) => state.workspace.jpegQuality;\r\nexport const getLink = (state: StateType) => state.workspace.link;\r\nexport const getLinkFormIsValid = (state: StateType) => state.workspace.linkFormIsValid;\r\nexport const getWrapperPosition = (state: StateType) => state.workspace.wrapperPosition;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getZoom} from \"../../../../Store/selectors/workspace-selectors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover/Popover\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\nimport {ZoomType} from \"../../../../Types/types\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useToolbarZoom = () => {\r\n    const classes = useStyles();\r\n    const zoom = useSelector(getZoom);\r\n    const zoomlabel = `${zoom}%`;\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n    const open = Boolean(anchorEl);\r\n    const zoomArray = [10, 25, 50, 75, 100, 150, 200, 300, 400];\r\n    const listItemElements = zoomArray.map(\r\n        el => {\r\n            const onClickListItemHandler = () => {\r\n                dispatch(workspaceAC.setZoom(el as ZoomType));\r\n                handleClose();\r\n            };\r\n            return (\r\n                <ListItem key={el}\r\n                          button\r\n                          onClick={onClickListItemHandler}\r\n                >\r\n                    {el}\r\n                </ListItem>\r\n            )\r\n        }\r\n    )\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return {\r\n        classes, zoomlabel, anchorEl, open,\r\n        onClickHandler, handleClose, listItemElements\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst ToolbarZoom: React.FC<{}> = () => {\r\n    const {\r\n        classes, zoomlabel, anchorEl, open,\r\n        onClickHandler, handleClose, listItemElements\r\n    } = useToolbarZoom();\r\n    return (\r\n        <>\r\n            <Button className={classes.button}\r\n                    onClick={onClickHandler}\r\n                    variant='outlined'\r\n            >\r\n                {zoomlabel}\r\n            </Button>\r\n            <Popover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>\r\n                    {listItemElements}\r\n                </List>\r\n            </Popover>\r\n        </>\r\n    )\r\n};\r\nexport default ToolbarZoom;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 36,\r\n        width: 50\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getZoom} from \"../../../../Store/selectors/workspace-selectors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\nimport {ZoomType} from \"../../../../Types/types\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useToolbarZoomPlus = () => {\r\n    const classes = useStyles();\r\n    const zoom = useSelector(getZoom);\r\n    const zoomArray = [10 , 25 , 50 , 75 , 100 , 150 , 200 , 300 , 400];\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        let index = zoomArray.findIndex(el => el === zoom);\r\n        if (index === zoomArray.length - 1) {\r\n            index = 0;\r\n        } else {\r\n            index += 1;\r\n        }\r\n        dispatch(workspaceAC.setZoom(zoomArray[index] as ZoomType))\r\n    };\r\n    const disabled = zoom === zoomArray[zoomArray.length - 1];\r\n    return {\r\n        classes, onClickHandler, disabled\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst ToolbarZoomPlus:React.FC<{}> = () => {\r\n    const {\r\n        classes, onClickHandler, disabled\r\n    } = useToolbarZoomPlus();\r\n    return (\r\n        <>\r\n            <Button className={classes.button}\r\n                    disabled={disabled}\r\n                    onClick={onClickHandler}\r\n            >\r\n                <Typography variant='h6'>\r\n                    +\r\n                </Typography>\r\n\r\n            </Button>\r\n\r\n        </>\r\n    )\r\n};\r\nexport default ToolbarZoomPlus;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 44\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getZoom} from \"../../../../Store/selectors/workspace-selectors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\nimport {ZoomType} from \"../../../../Types/types\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useToolbarZoomMinus = () => {\r\n    const classes = useStyles();\r\n    const zoom = useSelector(getZoom);\r\n    const zoomArray = [10, 25, 50, 75, 100, 150, 200, 300, 400];\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        let index = zoomArray.findIndex(el => el === zoom);\r\n        if (index === 0) {\r\n            index = zoomArray.length - 1;\r\n        } else {\r\n            index -= 1;\r\n        }\r\n        dispatch(workspaceAC.setZoom(zoomArray[index] as ZoomType))\r\n    };\r\n    const disabled = zoom === zoomArray[0];\r\n    return {\r\n        classes, onClickHandler, disabled\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst ToolbarZoomMinus: React.FC<{}> = () => {\r\n    const {\r\n        classes, onClickHandler, disabled\r\n    } = useToolbarZoomMinus();\r\n    return (\r\n        <>\r\n            <Button className={classes.button}\r\n                    disabled={disabled}\r\n                    onClick={onClickHandler}\r\n            >\r\n                <Typography variant='h6'>\r\n                    -\r\n                </Typography>\r\n\r\n            </Button>\r\n\r\n        </>\r\n    )\r\n};\r\nexport default ToolbarZoomMinus;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 44\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover/Popover\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\nimport {DownloadCaseType} from \"../../../../Types/types\";\r\nimport {getIsCreated, getLang} from \"../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../Utils/lang\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useToolbarDownload = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const isCreated = useSelector(getIsCreated)\r\n    const downloadLabel = translate(lang, 'Download')\r\n\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n    const open = Boolean(anchorEl);\r\n    const downloadCaseArray = ['PNG', 'JPEG', 'HTML'];\r\n    const icons = [\r\n        <CropOriginalIcon/>,\r\n        <ImageIcon/>,\r\n        <LanguageIcon/>\r\n    ];\r\n    const listItemElements = downloadCaseArray.map(\r\n        (el, i) => {\r\n            const onClickListItemHandler = () => {\r\n                dispatch(workspaceAC.setDownloadCase(el as DownloadCaseType));\r\n                dispatch(workspaceAC.setIsDownloadDialogOpen(true));\r\n                handleClose();\r\n            };\r\n            return (\r\n                <ListItem key={el}\r\n                          button\r\n                          onClick={onClickListItemHandler}\r\n                          className={classes.listItem}\r\n                >\r\n                    <ListItemIcon className={classes.listItemIcon}>\r\n                        {icons[i]}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={el}\r\n                                  classes={{\r\n                                      primary: classes.listItemText\r\n                                  }}\r\n                    />\r\n                </ListItem>\r\n            )\r\n        }\r\n    );\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return {\r\n        classes, downloadLabel, anchorEl,\r\n        open, onClickHandler, handleClose,\r\n        listItemElements, isCreated\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst ToolbarDownload: React.FC<{}> = () => {\r\n    const {\r\n        classes, downloadLabel, anchorEl,\r\n        open, onClickHandler, handleClose,\r\n        listItemElements, isCreated\r\n\r\n    } = useToolbarDownload();\r\n    return (\r\n        <>\r\n            <Button className={classes.button}\r\n                    color='primary'\r\n                    disabled={!isCreated}\r\n                    startIcon={<GetAppIcon/>}\r\n                    onClick={onClickHandler}\r\n                    variant='contained'\r\n            >\r\n                {downloadLabel}\r\n            </Button>\r\n            <Popover\r\n                open={open}\r\n                className={classes.popover}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n            >\r\n                <List>\r\n                    {listItemElements}\r\n                </List>\r\n            </Popover>\r\n        </>\r\n    )\r\n};\r\nexport default ToolbarDownload;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        textTransform: 'none'\r\n    },\r\n    popover: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItem: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n        '&:hover': {\r\n            backgroundColor: '#ccc'\r\n        }\r\n    },\r\n    listItemText: {\r\n        fontWeight: 700\r\n    },\r\n    listItemIcon: {\r\n        color: indigo[600],\r\n        minWidth: 30\r\n    }\r\n});","export const required: FieldValidatorType = (value) =>\r\n    value ? undefined : 'Field is required';\r\n\r\nexport const empty: EmptyType = (str: string): boolean => /^\\s+$/.test(str);\r\n\r\nexport const shouldNotBeEmpty: FieldValidatorType = (value) =>\r\n    empty(value) && value !== ''\r\n        ? 'Field should not be empty'\r\n        : undefined;\r\n\r\n//=========================== TYPES =====================================\r\ntype EmptyType = (str: string) => boolean\r\nexport type FieldValidatorType = (value: string) => string | undefined","import React, {useEffect} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm, submit} from \"redux-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport RenderTextField from \"../../../../common/RenderTextField\";\r\nimport {getFileName} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {required, shouldNotBeEmpty} from \"../../../../../Utils/validators\";\r\n\r\n//================= CUSTOM FORM HOOK =========================\r\nconst useForm = (valid: boolean) => {\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        setTimeout(() => dispatch(submit('fileName-form')));\r\n    };\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        dispatch(workspaceAC.setFileNameFormIsValid(valid));\r\n    }, [valid]);\r\n    return {\r\n        onChangeHandler, classes\r\n    }\r\n};\r\n\r\n//========================== FORM =======================================\r\nconst Form: React.FC<FormPropsType> = ({handleSubmit, valid}) => {\r\n    const {\r\n        onChangeHandler, classes\r\n    } = useForm(valid);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field name='fileName'\r\n                   autoFocus={true}\r\n                   component={RenderTextField}\r\n                   type=\"text\"\r\n                   size='small'\r\n                   className={classes.field}\r\n                   onChange={onChangeHandler}\r\n                   validate={[required, shouldNotBeEmpty]}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\n//================================== REDUX-FORM ======================================\r\nconst ReduxForm = reduxForm<FormParamsType, FormOwnPropsType>({\r\n    form: 'fileName-form',\r\n})(Form);\r\n\r\n//=========== CUSTOM COMPONENT HOOK =================\r\nconst useFileNameForm = () => {\r\n    const dispatch = useDispatch();\r\n    const onSubmitHandler = (value: FormParamsType) => {\r\n        dispatch(workspaceAC.setFileName(value.fileName))\r\n    };\r\n    const fileName = useSelector(getFileName)\r\n    const initialValues = {\r\n        fileName: fileName\r\n    };\r\n    return {\r\n        onSubmitHandler, initialValues\r\n    }\r\n};\r\n\r\n//================ COMPONENT =======================\r\nconst FileNameForm: React.FC<{}> = () => {\r\n    const {\r\n        onSubmitHandler, initialValues\r\n    } = useFileNameForm();\r\n    return (\r\n        <ReduxForm onSubmit={onSubmitHandler}\r\n                   initialValues={initialValues}\r\n        />\r\n    )\r\n};\r\nexport default FileNameForm;\r\n\r\n//=================== TYPE ==============\r\ntype FormPropsType =\r\n    InjectedFormProps<FormParamsType, FormOwnPropsType>\r\n    & FormOwnPropsType;\r\ntype FormParamsType = {\r\n    fileName: string\r\n}\r\ntype FormOwnPropsType = {};\r\n\r\n//================= STYLES ================\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        width: '100%'\r\n    }\r\n});","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getJpegQuality} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\n\r\n//============ CUSTOM HOOK ===============\r\nconst useJpegQuality = () => {\r\n    const jpegQuality = useSelector(getJpegQuality);\r\n    const lang = useSelector(getLang);\r\n    const label =  translate(lang, 'Quality of jpeg')\r\n\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = (e: any, value: number | number[]) => {\r\n        dispatch(workspaceAC.setJpegQuality(value as number))\r\n    };\r\n    const classes = useStyles();\r\n    const marks = [\r\n        {\r\n            value: 0.1,\r\n            label: '0.1',\r\n        },\r\n        {\r\n            value: 0.8,\r\n            label: '0.8',\r\n        },\r\n        {\r\n            value: 1,\r\n            label: '1.0',\r\n        },\r\n    ];\r\n    return {\r\n        classes, jpegQuality, onChangeHandler,\r\n        marks, label\r\n    }\r\n};\r\n\r\n//============= COMPONENT =================\r\nconst JpegQuality: React.FC<{}> = () => {\r\n    const {\r\n        classes, jpegQuality, onChangeHandler,\r\n        marks, label\r\n    } = useJpegQuality();\r\n    return (\r\n        <div className={classes.jpegQuality}>\r\n            <Typography>{label}</Typography>\r\n            <Slider className={classes.slider}\r\n                    min={.1}\r\n                    max={1}\r\n                    step={.1}\r\n                    value={jpegQuality}\r\n                    onChange={onChangeHandler}\r\n                    marks={marks}\r\n                    valueLabelDisplay=\"auto\"\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default JpegQuality;\r\n\r\n//============== STYLES ===================\r\nconst useStyles = makeStyles({\r\n    slider: {\r\n        margin: '10px 0',\r\n    },\r\n    jpegQuality: {\r\n        marginTop: 10\r\n    }\r\n});","import {TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nconst RenderTextFieldStartAdornment: React.FC<PropsType> = (props) => {\r\n    const {icon, label, input, meta: {touched, invalid, error}, classes, ...custom} = props;\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            {icon &&\r\n            <div className={styles.iconLeft}>\r\n                {icon}\r\n            </div>}\r\n            <TextField\r\n                InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">http://</InputAdornment>,\r\n                }}\r\n                variant=\"outlined\"\r\n                label={label}\r\n                placeholder={label}\r\n                error={touched && invalid}\r\n                helperText={touched && error}\r\n                {...input}\r\n                {...custom}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RenderTextFieldStartAdornment;\r\n\r\n//======================= TYPES ======================================================\r\ntype PropsType = {\r\n    icon: React.ReactElement\r\n    label: string\r\n    input: any\r\n    meta: {\r\n        touched: boolean\r\n        invalid: boolean\r\n        error: string\r\n    }\r\n    classes?: any\r\n}\r\n//========================= STYLES =============================================================\r\nconst useStyles = makeStyles({\r\n        root: {\r\n            position: 'relative',\r\n            width: '100%',\r\n            '& .MuiFormLabel-root': {\r\n                backgroundColor: 'white',\r\n            }\r\n        },\r\n        label: {\r\n            backgroundColor: 'white'\r\n        },\r\n        iconLeft: {\r\n            position: 'absolute',\r\n            left: -5,\r\n            top: '50%',\r\n            transform: 'translate(-100%, -50%)'\r\n        }\r\n    }\r\n);\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm, submit} from \"redux-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport {getLink} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {required, shouldNotBeEmpty} from \"../../../../../Utils/validators\";\r\nimport RenderTextFieldStartAdornment from \"../../../../common/RenderTextFieldStartAdornment\";\r\n\r\n//================= CUSTOM FORM HOOK =========================\r\nconst useForm = (valid: boolean) => {\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        setTimeout(() => dispatch(submit('link-form')));\r\n    };\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        dispatch(workspaceAC.setLinkFormIsValid(valid));\r\n    }, [valid, dispatch]);\r\n    return {\r\n        onChangeHandler, classes\r\n    }\r\n};\r\n\r\n//========================== FORM =======================================\r\nconst Form: React.FC<FormPropsType> = ({handleSubmit, valid}) => {\r\n    const {\r\n        onChangeHandler, classes\r\n    } = useForm(valid);\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field name='link'\r\n                   autoFocus={true}\r\n                   component={RenderTextFieldStartAdornment}\r\n                   type=\"text\"\r\n                   size='small'\r\n                   className={classes.field}\r\n                   onChange={onChangeHandler}\r\n                   validate={[required, shouldNotBeEmpty]}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\n//================================== REDUX-FORM ======================================\r\nconst ReduxForm = reduxForm<FormParamsType, FormOwnPropsType>({\r\n    form: 'link-form',\r\n})(Form);\r\n\r\n//=========== CUSTOM COMPONENT HOOK =================\r\nconst useFileNameForm = () => {\r\n    const dispatch = useDispatch();\r\n    const onSubmitHandler = (value: FormParamsType) => {\r\n        dispatch(workspaceAC.setLink(value.link))\r\n    };\r\n    const link = useSelector(getLink)\r\n    const initialValues = {\r\n        link: link\r\n    };\r\n    return {\r\n        onSubmitHandler, initialValues\r\n    }\r\n};\r\n\r\n//================ COMPONENT =======================\r\nconst LinkForm: React.FC<{}> = () => {\r\n    const {\r\n        onSubmitHandler, initialValues\r\n    } = useFileNameForm();\r\n    return (\r\n        <ReduxForm onSubmit={onSubmitHandler}\r\n                   initialValues={initialValues}\r\n        />\r\n    )\r\n};\r\nexport default LinkForm;\r\n\r\n//=================== TYPE ==============\r\ntype FormPropsType =\r\n    InjectedFormProps<FormParamsType, FormOwnPropsType>\r\n    & FormOwnPropsType;\r\ntype FormParamsType = {\r\n    link: string\r\n}\r\ntype FormOwnPropsType = {};\r\n\r\n//================= STYLES ================\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        width: '100%'\r\n    }\r\n});","import {Dialog, makeStyles} from \"@material-ui/core\";\r\nimport React, {useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getDownloadCase,\r\n    getFileName,\r\n    getFileNameFormIsValid,\r\n    getIsDownloadDialogOpen, getJpegQuality, getLink, getLinkFormIsValid\r\n} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FileNameForm from \"./FileNameForm\";\r\nimport {getCanvasUrl, getSize} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport JpegQuality from \"./JpegQuality\";\r\nimport LinkForm from \"./LinkForm\";\r\n\r\n//============= CUSTOM HOOK ================\r\nconst useDownloadDialog = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const downloadCase = useSelector(getDownloadCase);\r\n    const contentLabel = translate(lang, 'Download created banner as');\r\n    const titleLabel = translate(lang, 'Download');\r\n    const nameLabel = translate(lang, 'Enter a file name:');\r\n    const cancelLabel = translate(lang, 'Cancel');\r\n    const isDownloadDialogOpen = useSelector(getIsDownloadDialogOpen);\r\n    const canvasUrl = useSelector(getCanvasUrl);\r\n    const fileName = useSelector(getFileName);\r\n    const size = useSelector(getSize);\r\n    const fileNameFormIsValid = useSelector(getFileNameFormIsValid);\r\n    const link = useSelector(getLink);\r\n    const linkFormIsValid = useSelector(getLinkFormIsValid);\r\n    const jpegQuality = useSelector(getJpegQuality);\r\n    const dispatch = useDispatch();\r\n    const onCloseHandler = () => {\r\n        dispatch(workspaceAC.setIsDownloadDialogOpen(false));\r\n    };\r\n    let canvasAllUrl = '';\r\n    let download = '';\r\n    const linkLabel = translate(lang, 'Enter a link:');\r\n    const copyLabel = translate(lang, 'Copy');\r\n\r\n    const canvasAll = document.createElement('canvas');\r\n    canvasAll.width = size.width as number;\r\n    canvasAll.height = size.height as number;\r\n    const ctxAll = canvasAll.getContext('2d');\r\n\r\n    const imgBackground = new Image();\r\n    // imgBackground.onload = () => {\r\n    //     ctxAll!.drawImage(imgBackground, 0, 0);\r\n    // };\r\n    imgBackground.src = canvasUrl.background as string;\r\n    ctxAll!.drawImage(imgBackground, 0, 0);\r\n\r\n    if (canvasUrl.border) {\r\n        const imgBorder = new Image();\r\n        // imgBorder.onload = () => {\r\n        //     ctxAll!.drawImage(imgBorder, 0, 0);\r\n        // };\r\n        imgBorder.src = canvasUrl.border as string;\r\n        ctxAll!.drawImage(imgBorder, 0, 0);\r\n    }\r\n\r\n    const imgText = new Image();\r\n    // imgText.onload = () => {\r\n    //     ctxAll!.drawImage(imgText, 0, 0);\r\n    // };\r\n    imgText.src = canvasUrl.text as string;\r\n    ctxAll!.drawImage(imgText, 0, 0);\r\n\r\n    //if (downloadCase === 'PNG') {\r\n    canvasAllUrl = canvasAll.toDataURL();\r\n    download = `${fileName}.png`;\r\n    //}\r\n    if (downloadCase === 'JPEG') {\r\n        canvasAllUrl = canvasAll.toDataURL('image/jpeg', jpegQuality);\r\n        download = `${fileName}.jpg`\r\n    }\r\n    const html = `<a href=\"http://${link}\"><img src=${canvasAllUrl} width=\"${size.width}\" height=\"${size.height}\">`\r\n\r\n    const textareaRef = useRef(null);\r\n    const onCopyHandler = () => {\r\n        if (textareaRef !== null) {\r\n            // @ts-ignore\r\n            textareaRef.current.select();\r\n            document.execCommand('copy');\r\n        }\r\n    };\r\n\r\n    return {\r\n        isDownloadDialogOpen, onCloseHandler, titleLabel, classes,\r\n        downloadCase, contentLabel, nameLabel, canvasAllUrl, html,\r\n        fileNameFormIsValid, download, linkLabel, cancelLabel,\r\n        linkFormIsValid, textareaRef, copyLabel, onCopyHandler,\r\n    }\r\n};\r\n\r\n\r\n//============= COMPONENT ==================\r\nconst DownloadDialog: React.FC<{}> = () => {\r\n    const {\r\n        isDownloadDialogOpen, onCloseHandler, titleLabel, classes,\r\n        downloadCase, contentLabel, nameLabel, canvasAllUrl, html,\r\n        fileNameFormIsValid, download, linkLabel, cancelLabel,\r\n        linkFormIsValid, textareaRef, copyLabel, onCopyHandler\r\n    } = useDownloadDialog();\r\n\r\n    return (\r\n        <Dialog\r\n            open={isDownloadDialogOpen}\r\n            onClose={onCloseHandler}\r\n        >\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                {`${contentLabel} ${downloadCase}`}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n\r\n                {\r\n                    (downloadCase === 'PNG' || downloadCase === 'JPEG') &&\r\n                    <>\r\n                        <DialogContentText className={classes.dialogContentText}>\r\n                            {nameLabel}\r\n                        </DialogContentText>\r\n                        <FileNameForm/>\r\n                    </>\r\n                }\r\n\r\n                {\r\n                    downloadCase === 'HTML' &&\r\n                    <>\r\n                        <DialogContentText className={classes.dialogContentText}>\r\n                            {linkLabel}\r\n                        </DialogContentText>\r\n                        <LinkForm/>\r\n                        {\r\n                            linkFormIsValid &&\r\n                            <textarea ref={textareaRef}\r\n                                      readOnly\r\n                                      className={classes.textarea}\r\n                                      rows={4}\r\n                                      value={html}\r\n\r\n                            />\r\n                        }\r\n                    </>\r\n                }\r\n\r\n                {\r\n                    downloadCase === 'JPEG' &&\r\n                    <JpegQuality/>\r\n                }\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                {\r\n                    fileNameFormIsValid ?\r\n                        <>\r\n                            {\r\n                                (downloadCase === 'PNG' || downloadCase === 'JPEG') &&\r\n                                <Link variant='subtitle2'\r\n                                      underline='none'\r\n                                      href={canvasAllUrl as string}\r\n                                      onClick={onCloseHandler}\r\n                                      download={download}\r\n                                      className={classes.link}\r\n                                >\r\n                                    {titleLabel}\r\n                                </Link>\r\n                            }\r\n                        </>\r\n                        : <Typography variant='subtitle2'\r\n                                      color='textSecondary'\r\n                                      className={classes.typography}\r\n                        >\r\n                            {titleLabel}\r\n                        </Typography>\r\n                }\r\n                {\r\n                    downloadCase === 'HTML' && linkFormIsValid &&\r\n                    <Button onClick={onCopyHandler}\r\n                            className={classes.button}\r\n                            color=\"primary\"\r\n                            variant='outlined'\r\n                    >\r\n                        {copyLabel}\r\n                    </Button>\r\n                }\r\n                <Button onClick={onCloseHandler}\r\n                        variant='outlined'\r\n                        className={classes.button}\r\n                        color=\"primary\">\r\n                    {cancelLabel}\r\n                </Button>\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    )\r\n};\r\nexport default DownloadDialog;\r\n\r\n//=================== STYLES ===================\r\nconst useStyles = makeStyles({\r\n    dialogTitle: {\r\n        backgroundColor: indigo[600],\r\n        color: '#fff',\r\n        paddingTop: 5,\r\n        paddingBottom: 5\r\n    },\r\n    button: {\r\n        textTransform: 'none'\r\n    },\r\n    dialogContentText: {\r\n        color: '#000'\r\n    },\r\n    textarea: {\r\n        marginTop: 20,\r\n        width: '100%',\r\n        resize: 'none',\r\n        borderRadius: 5,\r\n        border: '1px solid #ccc',\r\n        '&:focus': {\r\n            border: '1px solid red'\r\n        }\r\n    },\r\n    link: {\r\n        border: '1px solid rgba(63, 81, 181, 0.5)',\r\n        borderRadius: 4,\r\n        padding: '6px 15px',\r\n        '&:hover': {\r\n            border: '1px solid rgba(63, 81, 181, 1)',\r\n        }\r\n    },\r\n    typography: {\r\n        border: '1px solid #ccc',\r\n        borderRadius: 4,\r\n        padding: '6px 15px',\r\n    }\r\n})\r\n","import React, {useEffect, useRef} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {editorToolbarHeight} from \"../../../../Utils/CONST\";\r\nimport ToolbarZoom from \"./ToolbarZoom\";\r\nimport ToolbarZoomPlus from \"./ToolbarZoomPlus\";\r\nimport ToolbarZoomMinus from \"./ToolbarZoomMinus\";\r\nimport ToolbarDownload from \"./ToolbarDownload\";\r\nimport DownloadDialog from \"./DownloadDialog/DownloadDialog\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useEditorToolbar = () => {\r\n    const classes = useStyles();\r\n\r\n    const refToolbar = useRef(null);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(workspaceAC.setRefToolbar(refToolbar))\r\n    });\r\n\r\n\r\n    return {\r\n        classes, refToolbar\r\n    }\r\n\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Toolbar: React.FC<{}> = () => {\r\n    const {\r\n        classes, refToolbar\r\n    } = useEditorToolbar();\r\n    return (\r\n        <div className={classes.editorToolbar}\r\n             ref={refToolbar}\r\n        >\r\n            <div/>\r\n            <div className={classes.centerBlock}>\r\n                <ToolbarZoomMinus />\r\n                <ToolbarZoom />\r\n                <ToolbarZoomPlus />\r\n            </div>\r\n            <div className={classes.rightBlock}>\r\n                <ToolbarDownload/>\r\n            </div>\r\n            <DownloadDialog/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toolbar;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    editorToolbar: {\r\n        height: editorToolbarHeight,\r\n        boxSizing: 'border-box',\r\n        padding: '0 10px',\r\n        borderBottom: '1px solid #ccc',\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 1fr 1fr',\r\n        gridColumnGap: 10,\r\n        alignItems: 'center'\r\n    },\r\n    centerBlock: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    rightBlock: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    checked: {\r\n\r\n    }\r\n});","import {StateType} from \"../store\";\r\nimport {TextType} from \"../../Types/types\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getTexts = (state: StateType) => state.text.texts;\r\nexport const getSelectedTextId = (state: StateType) => state.text.selectedTextId;\r\nexport const getMovedTextId = (state: StateType) => state.text.movedTextId;\r\nexport const getShowAlarm = (state: StateType) => state.text.showAlarm;\r\nexport const getCursorOnTextPosition = (state: StateType) => state.text.cursorOnTextPosition;\r\nexport const getRotatedTextId = (state: StateType) => state.text.rotatedTextId;\r\nexport const getSizeOfSelectedText = (state: StateType) => state.text.sizeOfSelectedText;\r\nexport const getCursorOnRotatorPosition = (state: StateType) => state.text.cursorOnRotatorPosition;\r\nexport const getRotatedText = createSelector(\r\n    getRotatedTextId,\r\n    getTexts,\r\n    (rotatedTextId, texts) => texts\r\n        .find(el => el.id === rotatedTextId) as TextType\r\n);\r\nexport const getIsAnyTextEditParameters = createSelector(\r\n    getTexts,\r\n    (texts) => !!texts.find(el => el.editParameters === true)\r\n);\r\nexport const getSelectedText = createSelector(\r\n    getSelectedTextId,\r\n    getTexts,\r\n    (selectedTextId, texts) => texts\r\n        .find(el => el.id === selectedTextId) as TextType\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useRef} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport {getRotatedTextId, getSelectedText} from \"../../../../../Store/selectors/text-selectors\";\r\nimport {verticalDisplacementOfRotator} from \"../../../../../Utils/CONST\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useRotator = (id: number) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedText = useSelector(getSelectedText);\r\n    const angle = selectedText.angle;\r\n    const z = (useSelector(getZoom)) / 100;\r\n    const refIcon = useRef(null);\r\n\r\n    const rotatedTextId = useSelector(getRotatedTextId);\r\n    //const sizeOfSelectedText = useSelector(getSizeOfSelectedText);\r\n    const sizeOfText = selectedText.size;\r\n    let dist = rotatedTextId ? verticalDisplacementOfRotator + 20 : verticalDisplacementOfRotator\r\n    let top = -z * dist;\r\n    let transformOriginTop = z * (dist + sizeOfText.height / 2);\r\n\r\n    const props = {\r\n        transformOriginTop,\r\n        angle,\r\n        top\r\n    };\r\n    const classes = useStyles(props);\r\n\r\n    const onMouseDownHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        dispatch(textAC.setRotatedTextId(id));// установить id вращаемого текста\r\n\r\n        dispatch(textAC.setCursorOnRotatorPosition( // установить положение точки клика относительно окна\r\n            e.clientX,\r\n            e.clientY\r\n        ));\r\n    };\r\n\r\n    return {\r\n        classes, onMouseDownHandler, refIcon, rotatedTextId,\r\n        angle\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Rotator: React.FC<PropsType> = ({id}) => {\r\n    const {\r\n        classes, onMouseDownHandler, refIcon, rotatedTextId,\r\n        angle\r\n    } = useRotator(id);\r\n\r\n    return (\r\n        <div className={classes.rotator}\r\n             onMouseDown={onMouseDownHandler}\r\n        >\r\n            {\r\n                rotatedTextId\r\n                    ? <span className={classes.angle}>\r\n                    {`${Math.floor(angle > 0 ? angle : 360 + angle)}°`}\r\n                    </span>\r\n                    : <span className={classes.icon}>\r\n                        ↻\r\n                    </span>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Rotator;\r\n\r\n//======================= TYPE =========================\r\ntype PropsType = {\r\n    id: number\r\n}\r\ntype UseStylesPropsType = {\r\n    transformOriginTop: number\r\n    angle: number\r\n    top: number\r\n}\r\n\r\n//============ ========= STYLES ========================\r\nconst useStyles = makeStyles({\r\n    rotator: (props: UseStylesPropsType) => ({\r\n        width: '0px',\r\n        height: '0px',\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: props.top,\r\n        color: 'black',\r\n        transformOrigin: `0px ${props.transformOriginTop}px`,\r\n        transform: `translate(-50%, -50%) rotate(${props.angle}deg)`,\r\n        //backgroundColor: 'red',\r\n        //borderRadius: '50%',\r\n        cursor: 'move'\r\n    }),\r\n    angle: (props: UseStylesPropsType) => ({\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        transform: `translate(-50%, -50%) rotate(${-props.angle}deg)`,\r\n        backgroundColor: 'white',\r\n        fontSize: '16px',\r\n        userSelect: 'none'\r\n    }),\r\n    icon: {\r\n        display: 'inline-box',\r\n        width: '20px',\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        lineHeight: '20px',\r\n        borderRadius: 10,\r\n        backgroundColor: 'white',\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: `translate(-50%, -50%)`,\r\n        userSelect: 'none'\r\n    }\r\n});","import React, {useEffect, useRef, useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {TextType} from \"../../../../../Types/types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\n\r\n//================CUSTOM COMPONENT HOOK ==========\r\nconst useBannerTextFormNative = (text: TextType) => {\r\n    const zoom = useSelector(getZoom);\r\n    const dispatch = useDispatch();\r\n    const props = {\r\n        text: text,\r\n        zoom: zoom\r\n    };\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [inputValue, setInputValue] = useState(text.content);\r\n\r\n\r\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const onBlurHandler = () => {\r\n        dispatch(textAC.setContent(text.id, inputValue));\r\n        dispatch(textAC.setEditText(text.id, false));\r\n    };\r\n\r\n    const classes = useStylesForm(props);\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        inputRef.current.size = inputRef.current.value.length +1;\r\n    }, [inputValue]);\r\n\r\n    return {\r\n        classes, onChangeHandler, inputValue, onBlurHandler,\r\n        inputRef\r\n    }\r\n}\r\n\r\n//==================== COMPONENT =================\r\nconst BannerTextForm: React.FC<PropsType> = ({text}) => {\r\n    const {\r\n        classes, onChangeHandler, inputValue, onBlurHandler,\r\n        inputRef\r\n    } = useBannerTextFormNative(text);\r\n    return (\r\n        <div className={classes.form}>\r\n            <input type=\"text\"\r\n                   ref={inputRef}\r\n                   autoFocus={true}\r\n                   className={classes.field}\r\n                   onChange={onChangeHandler}\r\n                   value={inputValue}\r\n                   onBlur={onBlurHandler}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default BannerTextForm;\r\n\r\n//================= STYLES ================\r\nconst useStylesForm = makeStyles({\r\n    form: (props: { text: TextType, zoom: number }) => ({\r\n        zIndex: 10,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }),\r\n    field: (props: { text: TextType, zoom: number }) => ({\r\n        position: 'absolute',\r\n        fontSize: props.text.fontSize * props.zoom / 100,\r\n        fontFamily: props.text.fontFamily,\r\n        lineHeight: `${props.text.fontSize * props.zoom / 100}px`,\r\n        color: props.text.color,\r\n        top: 0,\r\n        left: 0,\r\n        backgroundColor: 'red',//'rgba(227, 242, 253, 0.9)',\r\n        padding: 0,\r\n        border: 'none',\r\n        height: `${props.text.fontSize * props.zoom / 100}px`,\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    }),\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n//=================== TYPE ==============\r\ntype PropsType = {\r\n    text: TextType\r\n}\r\n","import {TextType} from \"../../../../../Types/types\";\r\nimport styled from \"styled-components\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport clsx from \"clsx\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {getRefLeftPanel, getRefToolbar, getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport Rotator from \"./Rotator\";\r\nimport {getRotatedTextId} from \"../../../../../Store/selectors/text-selectors\";\r\nimport BannerTextForm from \"./BannerTextForm\";\r\n\r\n//==================== STYLED ===================\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    top: ${(props: PropsWrapperType) => `${props.top * props.zoom / 100}px`};\r\n    left: ${(props: PropsWrapperType) => `${props.left * props.zoom / 100}px`};\r\n    \r\n`;\r\n\r\nconst Span = styled.span`\r\n    color: ${(props: PropsSpanType) => props.color};\r\n    font-size: ${(props: PropsSpanType) => `${props.fontSize * props.zoom / 100}px`};\r\n    line-height: ${(props: PropsSpanType) => `${props.fontSize * props.zoom / 100}px`};\r\n    font-family: ${(props: PropsSpanType) => props.fontFamily};\r\n    font-style: ${(props: PropsSpanType) => props.fontStyle};\r\n    transform-origin: center;    \r\n    transform: ${(props: PropsSpanType) => `rotate(${props.angle}deg)`};\r\n    user-select: none;\r\n    display: ${(props: PropsSpanType) => props.editText ? 'none' : 'inline-block'};    \r\n`;\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerTextNative = (text: TextType) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n    const zoom = useSelector(getZoom);\r\n    const rotatedTextId = useSelector(getRotatedTextId);\r\n\r\n    const onMouseEnterHandler = () => {\r\n        dispatch(textAC.setHover(text.id, true))\r\n    };\r\n    const onMouseLeaveHandler = () => {\r\n        dispatch(textAC.setHover(text.id, false));\r\n    };\r\n\r\n    const onMouseDownHandler = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        dispatch(textAC.setSelected(text.id, true)); // определяем id выделенного текста\r\n        // определяем смещение клика относительно левого верхнего угла Wrapper\r\n        const wrapper: DOMRect = wrapperRef!.current!.getBoundingClientRect();\r\n        dispatch(textAC.setCursorOnTextPosition(\r\n            e.clientX - wrapper.left,\r\n            e.clientY - wrapper.top\r\n        ));\r\n        dispatch(textAC.setMovedTextId(text.id));\r\n    };\r\n\r\n    const onMouseUpHandler = () => {\r\n        dispatch(textAC.setSelected(text.id, false));\r\n        dispatch(textAC.setMovedTextId(null));\r\n    };\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(textAC.setEditParameters(text.id, true));\r\n        dispatch(textAC.setSelectedTextId(text.id));\r\n    };\r\n\r\n    const onOutsideClickCallback = () => {\r\n        dispatch(textAC.setEditParameters(text.id, false));\r\n    };\r\n\r\n    const onDoubleClickHandler = () => {\r\n        dispatch(textAC.setEditText(text.id, true));\r\n    };\r\n\r\n    const refLeftPanel = useSelector(getRefLeftPanel) as React.MutableRefObject<null>;\r\n    const refToolbar = useSelector(getRefToolbar) as React.MutableRefObject<null>;\r\n    const onOutsideClickHandler = (event: MouseEvent): void => { // обработчик клика вне текста\r\n        if (\r\n            // @ts-ignore\r\n            !wrapperRef.current.contains(event.target) && // если то, по чему кликнули не текст или его потомок\r\n            // @ts-ignore\r\n            !refLeftPanel.current.contains(event.target) && // и не левая панель инструментов\r\n            // @ts-ignore\r\n            !refToolbar.current.contains(event.target) // и не верхняя панель инструментов\r\n        ) {\r\n            onOutsideClickCallback(); // выполнить колбэк - снять выделение с текста\r\n        }\r\n    };\r\n\r\n    useEffect(\r\n        () => { // клик вне текста снимает с него выделение\r\n            if (text.editParameters) { // эффект применяется если текст выделен\r\n                document.addEventListener(\"mousedown\", onOutsideClickHandler);\r\n\r\n                return () => {\r\n                    document.removeEventListener(\"mousedown\", onOutsideClickHandler);\r\n                };\r\n            }\r\n        },\r\n        [onOutsideClickHandler, text.editParameters]\r\n    );\r\n\r\n    // поднять кнопку мыши - снять выделение с кнопки поворота\r\n    const onMouseUpDocumentHandler = () => {\r\n        //console.log('onMouseUpDocumentHandler')\r\n        dispatch(textAC.setRotatedTextId(null))\r\n    };\r\n    useEffect(() => {\r\n        if (rotatedTextId) {\r\n            //console.log('подписка');\r\n            document.addEventListener('mouseup', onMouseUpDocumentHandler);\r\n\r\n            return () => {\r\n                //console.log('отписка');\r\n                document.removeEventListener(\"mouseup\", onMouseUpDocumentHandler);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    // при выделение текста - отправить в store ширину и высоту текущего выделенного текста\r\n    useEffect(() => {\r\n        if (text.selected) {\r\n            const textEl: DOMRect = wrapperRef!.current!.getBoundingClientRect();\r\n            dispatch(textAC.setSizeOfSelectedText(textEl.width, textEl.height))\r\n        }\r\n    }, [text.selected]);\r\n\r\n    // при изменении параметров, влияющих на габариты текста - отправить в store ширину и высоту текущего текста\r\n    useEffect(() => {\r\n            const textEl: DOMRect = wrapperRef!.current!.getBoundingClientRect();\r\n            dispatch(textAC.setSize(text.id, textEl.width, textEl.height))\r\n    }, [text.content, text.upperCase, text.lowerCase, text.fontStyle, text.fontSize]);\r\n\r\n\r\n\r\n\r\n    let content = text.content;\r\n    if (text.lowerCase) {\r\n        content = content.toLowerCase();\r\n    }\r\n    if (text.upperCase) {\r\n        content = content.toUpperCase();\r\n    }\r\n\r\n    return {\r\n        classes, onMouseEnterHandler, onMouseLeaveHandler,\r\n        onMouseDownHandler, onMouseUpHandler, wrapperRef,\r\n        onClickHandler, onDoubleClickHandler,\r\n        content, zoom,\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCSSText: React.FC<PropsType> = ({text}) => {\r\n    const {\r\n        classes, onMouseEnterHandler, onMouseLeaveHandler,\r\n        onMouseDownHandler, onMouseUpHandler, wrapperRef,\r\n        onClickHandler, onDoubleClickHandler,\r\n        content, zoom,\r\n    } = useBannerTextNative(text);\r\n\r\n    return (\r\n        <Wrapper ref={wrapperRef}\r\n                 top={text.position.top}\r\n                 left={text.position.left}\r\n                 zoom={zoom}\r\n        >\r\n            {\r\n                !text.editText && text.editParameters && <Rotator id={text.id}/>\r\n            }\r\n\r\n            {\r\n                text.editText && <BannerTextForm text={text}/>\r\n            }\r\n\r\n            <Span fontSize={text.fontSize}\r\n                  fontFamily={text.fontFamily}\r\n                  fontStyle={text.fontStyle}\r\n                  color={text.color}\r\n                  editText={text.editText}\r\n                  zoom={zoom}\r\n                  angle={text.angle}\r\n                  onMouseEnter={onMouseEnterHandler}\r\n                  onMouseLeave={onMouseLeaveHandler}\r\n                  onMouseDown={onMouseDownHandler}\r\n                  onMouseUp={onMouseUpHandler}\r\n                  onClick={onClickHandler}\r\n                  onDoubleClick={onDoubleClickHandler}\r\n                  className={clsx(\r\n                      text.hover && classes.hover,\r\n                      text.editParameters && classes.clicked\r\n                  )}\r\n            >\r\n                {content}\r\n            </Span>\r\n\r\n        </Wrapper>\r\n    )\r\n};\r\nexport default BannerCSSText;\r\n\r\n//============== TYPE ================\r\ntype PropsType = {\r\n    text: TextType\r\n}\r\ntype PropsWrapperType = {\r\n    top: number\r\n    left: number\r\n    zoom: number\r\n}\r\ntype PropsSpanType = {\r\n    fontSize: number\r\n    fontFamily: string\r\n    fontStyle: string\r\n    color: string\r\n    zoom: number\r\n    angle: number\r\n    editText: boolean\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    hover: {\r\n        outline: '1px solid #ccc',\r\n        cursor: 'move'\r\n    },\r\n    clicked: {\r\n        outline: '1px solid black',\r\n    }\r\n});\r\n\r\n","import React, {ReactElement} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getTexts} from \"../../../../../Store/selectors/text-selectors\";\r\nimport BannerCSSText from \"./BannerCSSText\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerTexts = () => {\r\n    const texts = useSelector(getTexts);\r\n    const textElements = texts.map(\r\n        el => <BannerCSSText key={el.id} text={el}/>\r\n    );\r\n    return {\r\n        textElements\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCSSTexts: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        textElements\r\n    } = useBannerTexts();\r\n    return (\r\n        <>\r\n            {textElements}\r\n        </>\r\n    )\r\n};\r\nexport default BannerCSSTexts;","import React, {ReactElement, useEffect, useRef} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getAlign,\r\n    getBackgroundStyle,\r\n    getBackgroundStyleColor, getColorEnd, getColorStart, getCurrentImage,\r\n    getGradientStyle, getScaleMode, getShowSecondSidebar,\r\n    getSize\r\n} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport throttle from \"lodash/throttle\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerCanvasBackground = () => {\r\n    const classes = useStyles();\r\n    const size = useSelector(getSize);\r\n    const backgroundStyle = useSelector(getBackgroundStyle);\r\n    const backgroundStyleColor = useSelector(getBackgroundStyleColor);\r\n    const gradientStyle = useSelector(getGradientStyle);\r\n    const colorStart = useSelector(getColorStart);\r\n    const colorEnd = useSelector(getColorEnd);\r\n    const currentImage = useSelector(getCurrentImage);\r\n    const scaleMode = useSelector(getScaleMode);\r\n    const align = useSelector(getAlign);\r\n    const zoom = useSelector(getZoom);\r\n    const showSecondSidebar = useSelector(getShowSecondSidebar)\r\n    let canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    let canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    // корректировка  wrapperPosition при изменении размеров окна\r\n    const resizeHandler = () => {\r\n        if (canvasRef && canvasRef.current) {\r\n            // @ts-ignore\r\n            const wrapper: DOMRect = canvasRef.current.getBoundingClientRect();\r\n            const x = wrapper.left;\r\n            const y = wrapper.top;\r\n            dispatch(workspaceAC.setWrapperPosition(x, y));\r\n        }\r\n    };\r\n    const resizeHandlerThrottle = throttle(resizeHandler, 1000);\r\n    useEffect(() => {\r\n            window.addEventListener(\"resize\", resizeHandlerThrottle, true);\r\n            return () => {\r\n                window.removeEventListener(\"resize\", resizeHandlerThrottle, true)\r\n            }\r\n        }\r\n    );\r\n\r\n    // определение wrapperPosition\r\n    useEffect(() => {\r\n        if (canvasRef && canvasRef.current) {\r\n            // @ts-ignore\r\n            const wrapper: DOMRect = canvasRef.current.getBoundingClientRect();\r\n            const x = wrapper.left;\r\n            const y = wrapper.top;\r\n            dispatch(workspaceAC.setWrapperPosition(x, y));\r\n            //console.log(`x = ${x}`)\r\n        }\r\n    }, [canvasRef, zoom, showSecondSidebar]);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && size.width && size.height) {\r\n            canvasCtxRef.current = canvasRef.current.getContext('2d');\r\n            let ctx = canvasCtxRef.current;\r\n            //========== COLOR ============\r\n            if (backgroundStyle === 'color') {\r\n                ctx!.fillStyle = backgroundStyleColor.color;\r\n                ctx!.fillRect(0, 0, size.width, size.height);\r\n                dispatch(editorAC.setCanvasUrl('background', canvasRef.current.toDataURL()))\r\n            }\r\n            //========== GRADIENT ==========\r\n            if (backgroundStyle === 'gradient') {\r\n                let gradient: CanvasGradient;\r\n                if (gradientStyle === 'horizontal') {\r\n                    gradient = ctx!.createLinearGradient(0, 0, size.width, 0);\r\n                } else if (gradientStyle === 'vertical') {\r\n                    gradient = ctx!.createLinearGradient(0, 0, 0, size.height);\r\n                } else {\r\n                    gradient = ctx!.createRadialGradient(\r\n                        size.width / 2, size.height / 2, 0,\r\n                        size.width / 2, size.height / 2, Math.sqrt((size.width * size.width) + (size.height * size.height)) / 2\r\n                    )\r\n                }\r\n                ctx!.clearRect(0, 0, size.width, size.height);\r\n                gradient.addColorStop(0, colorStart);\r\n                gradient.addColorStop(1, colorEnd);\r\n                ctx!.fillStyle = gradient;\r\n                ctx!.fillRect(0, 0, size.width, size.height);\r\n                dispatch(editorAC.setCanvasUrl('background', canvasRef.current.toDataURL()))\r\n            }\r\n            //============ IMAGE ===========\r\n            if (backgroundStyle === 'image') {\r\n                if (currentImage) {\r\n                    const cw = size.width as number;\r\n                    const ch = size.height as number;\r\n                    dispatch(editorAC.setIsLoading(true));\r\n                    const image = new Image();\r\n                    image.onload = () => {\r\n                        dispatch(editorAC.setIsLoading(false));\r\n                        const iw = image.width;\r\n                        const ih = image.height;\r\n\r\n                        let cx, cy, ix, iy;\r\n                        ctx!.clearRect(0, 0, cw, ch);\r\n                        ctx!.fillStyle = '#FFF';\r\n                        ctx!.fillRect(0, 0, cw, ch);\r\n                        //================= NO SCALE ================\r\n                        if (scaleMode === 'No scale') {\r\n                            cx = 0;\r\n                            cy = 0;\r\n                            ix = 0;\r\n                            iy = 0;\r\n                            switch (align) {\r\n                                case 'left-top': {\r\n                                    ix = 0;\r\n                                    iy = 0;\r\n                                    break\r\n                                }\r\n                                case 'center-top': {\r\n                                    ix = iw / 2 - cw / 2;\r\n                                    iy = 0;\r\n                                    break\r\n                                }\r\n                                case 'right-top': {\r\n                                    ix = iw - cw;\r\n                                    iy = 0;\r\n                                    break\r\n                                }\r\n                                case 'left-center': {\r\n                                    ix = 0;\r\n                                    iy = ih / 2 - ch / 2;\r\n                                    break\r\n                                }\r\n                                case 'center': {\r\n                                    ix = iw / 2 - cw / 2;\r\n                                    iy = ih / 2 - ch / 2;\r\n                                    break\r\n                                }\r\n                                case 'right-center': {\r\n                                    ix = iw - cw;\r\n                                    iy = ih / 2 - ch / 2;\r\n                                    break\r\n                                }\r\n                                case 'left-bottom': {\r\n                                    ix = 0;\r\n                                    iy = ih - ch;\r\n                                    break\r\n                                }\r\n                                case 'center-bottom': {\r\n                                    ix = iw / 2 - cw / 2;\r\n                                    iy = ih - ch;\r\n                                    break\r\n                                }\r\n                                case 'right-bottom': {\r\n                                    ix = iw - cw;\r\n                                    iy = ih - ch;\r\n                                    break\r\n                                }\r\n                            }\r\n                            ctx!.drawImage(image, ix, iy, cw, ch, cx, cy, cw, ch);\r\n                            //================= EXACT FIT ================\r\n                        } else if (scaleMode === 'Exact fit') {\r\n                            ctx!.drawImage(image, 0, 0, iw, ih, 0, 0, cw, ch);\r\n                            //================= MAINTAIN ASPECT ================\r\n                        } else if (scaleMode === 'Maintain aspect') {\r\n                            if (iw / ih > cw / ch) { // изображение длиннее канваса\r\n                                const ch1 = cw * ih / iw;\r\n                                switch (align) {\r\n                                    case 'left-top':\r\n                                    case 'center-top':\r\n                                    case 'right-top': {\r\n                                        cy = 0;\r\n                                        break\r\n                                    }\r\n                                    case 'left-center':\r\n                                    case 'center':\r\n                                    case 'right-center': {\r\n                                        cy = (ch - ch1) / 2;\r\n                                        break\r\n                                    }\r\n                                    case 'left-bottom':\r\n                                    case 'center-bottom':\r\n                                    case 'right-bottom': {\r\n                                        cy = ch - ch1;\r\n                                        break\r\n                                    }\r\n                                }\r\n                                ctx!.drawImage(image, 0, 0, iw, ih, 0, cy, cw, ch1);\r\n                            } else if (iw / ih < cw / ch) {\r\n                                const cw1 = iw * ch / ih;\r\n                                switch (align) {\r\n                                    case 'left-top':\r\n                                    case 'left-center':\r\n                                    case 'left-bottom': {\r\n                                        cx = 0;\r\n                                        break\r\n                                    }\r\n                                    case 'center-top':\r\n                                    case 'center':\r\n                                    case 'center-bottom': {\r\n                                        cx = (cw - cw1) / 2;\r\n                                        break\r\n                                    }\r\n                                    case 'right-top':\r\n                                    case 'right-center':\r\n                                    case 'right-bottom': {\r\n                                        cx = cw - cw1;\r\n                                        break\r\n                                    }\r\n                                    default:\r\n                                        cx = 0;\r\n                                }\r\n                                ctx!.drawImage(image, 0, 0, iw, ih, cx, 0, cw1, ch);\r\n                            } else { // iw / ih = cw / ch\r\n                                ctx!.drawImage(image, 0, 0, iw, ih, 0, 0, cw, ch);\r\n                            }\r\n                        } else if (scaleMode === 'Scale crop') {\r\n                            if (iw / ih > cw / ch) {\r\n                                const iw1 = ih * cw / ch;\r\n                                switch (align) {\r\n                                    case 'left-top':\r\n                                    case 'left-center':\r\n                                    case 'left-bottom': {\r\n                                        ix = 0;\r\n                                        break\r\n                                    }\r\n                                    case 'center-top':\r\n                                    case 'center':\r\n                                    case 'center-bottom': {\r\n                                        ix = (iw - iw1) / 2;\r\n                                        break\r\n                                    }\r\n                                    case 'right-top':\r\n                                    case 'right-center':\r\n                                    case 'right-bottom': {\r\n                                        ix = iw - iw1;\r\n                                        break\r\n                                    }\r\n                                    default:\r\n                                        ix = 0;\r\n                                }\r\n                                ctx!.drawImage(image, ix, 0, iw1, ih, 0, 0, cw, ch);\r\n                            } else if (iw / ih < cw / ch) {\r\n                                const ih1 = iw * ch / cw;\r\n                                switch (align) {\r\n                                    case 'left-top':\r\n                                    case 'center-top':\r\n                                    case 'right-top': {\r\n                                        iy = 0;\r\n                                        break\r\n                                    }\r\n                                    case 'left-center':\r\n                                    case 'center':\r\n                                    case 'right-center': {\r\n                                        iy = (ih - ih1) / 2;\r\n                                        break\r\n                                    }\r\n                                    case 'left-bottom':\r\n                                    case 'center-bottom':\r\n                                    case 'right-bottom': {\r\n                                        iy = ih - ih1;\r\n                                        break\r\n                                    }\r\n                                }\r\n                                ctx!.drawImage(image, 0, iy, iw, ih1, 0, 0, cw, ch);\r\n                            } else { //iw / ih = cw / ch\r\n                                ctx!.drawImage(image, 0, 0, iw, ih, 0, 0, cw, ch);\r\n                            }\r\n                        }\r\n\r\n                        // @ts-ignore\r\n                        dispatch(editorAC.setCanvasUrl('background', canvasRef.current.toDataURL()))\r\n                    };\r\n                    image.src = currentImage.src;\r\n\r\n                }\r\n            }\r\n            //dispatch(editorAC.setCanvasUrl('background', canvasRef.current.toDataURL()))\r\n            //console.log(canvasRef.current.toDataURL())\r\n        }\r\n    }, [\r\n        size, backgroundStyle, backgroundStyleColor,\r\n        gradientStyle, colorStart, colorEnd, currentImage,\r\n        scaleMode, align, dispatch\r\n    ]);\r\n\r\n    return {\r\n        classes, size, canvasRef, zoom\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCanvasBackground: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, size, canvasRef, zoom\r\n    } = useBannerCanvasBackground();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                size.width && size.height &&\r\n                <canvas\r\n                    className={classes.bannerCanvasBackground}\r\n                    ref={canvasRef}\r\n                    width={size.width}\r\n                    height={size.height}\r\n                    style={{\r\n                        transform: `scale(${zoom / 100})`,\r\n                        transformOrigin: 'left top'\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst BannerCanvasBackgroundMemo = React.memo(BannerCanvasBackground);\r\nexport default BannerCanvasBackgroundMemo;\r\n\r\n//======================== STYLES ========================\r\nconst useStyles = makeStyles({\r\n    bannerCanvasBackground: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }\r\n});","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getBorderColor,\r\n    getSize\r\n} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport React, {ReactElement, useEffect, useRef} from \"react\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerCanvasBackground = () => {\r\n    const classes = useStyles();\r\n    const size = useSelector(getSize);\r\n    const zoom = useSelector(getZoom);\r\n    const dispatch = useDispatch();\r\n    const borderColor = useSelector(getBorderColor);\r\n    let canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    let canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && size.width && size.height) {\r\n            canvasCtxRef.current = canvasRef.current.getContext('2d');\r\n            let ctx = canvasCtxRef.current;\r\n            ctx!.clearRect(0, 0, size.width, size.height);\r\n            ctx!.strokeStyle = borderColor;\r\n            ctx!.lineWidth = 4;\r\n            ctx!.strokeRect(0, 0, size.width, size.height);\r\n            dispatch(editorAC.setCanvasUrl('border', canvasRef.current.toDataURL()))\r\n        }\r\n    }, [size, borderColor, dispatch]);\r\n\r\n    return {\r\n        classes, size, canvasRef, zoom\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCanvasBorder: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, size, canvasRef, zoom\r\n    } = useBannerCanvasBackground();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                size.width && size.height &&\r\n                <canvas\r\n                    className={classes.bannerCanvasBorder}\r\n                    ref={canvasRef}\r\n                    width={size.width}\r\n                    height={size.height}\r\n                    style={{\r\n                        transform: `scale(${zoom/100})`,\r\n                        transformOrigin: 'left top'\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n};\r\nconst BannerCanvasBorderMemo = React.memo(BannerCanvasBorder);\r\nexport default BannerCanvasBorderMemo;\r\n\r\n//======================== STYLES ========================\r\nconst useStyles = makeStyles({\r\n    bannerCanvasBorder: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }\r\n});","import React, {ReactElement, useEffect, useRef} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSize} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {getTexts} from \"../../../../../Store/selectors/text-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerCanvasTexts = () => {\r\n    const classes = useStyles();\r\n    const size = useSelector(getSize);\r\n    const texts = useSelector(getTexts);\r\n    let canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    let canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && size.width && size.height) {\r\n            canvasCtxRef.current = canvasRef.current.getContext('2d');\r\n            let ctx = canvasCtxRef.current;\r\n            ctx!.clearRect(0, 0, size.width, size.height);\r\n\r\n            for (let i = 0; i < texts.length; i++) {\r\n                let content = texts[i].content;\r\n                if (texts[i].lowerCase) {\r\n                    content = content.toLowerCase();\r\n                }\r\n                if (texts[i].upperCase) {\r\n                    content = content.toUpperCase();\r\n                }\r\n\r\n                ctx!.fillStyle = texts[i].color;\r\n                ctx!.font = `${texts[i].fontStyle} ${texts[i].fontSize}px ${texts[i].fontFamily}`;\r\n                ctx!.textBaseline = 'top';\r\n\r\n                //////////////////////\r\n                ctx!.save();\r\n                ctx!.translate(texts[i].position.left + 0.5 * texts[i].size.width, texts[i].position.top + 0.5 * texts[i].size.height);\r\n                ctx!.rotate(texts[i].angle * Math.PI /180);\r\n                ctx!.fillText(content, - 0.5 * texts[i].size.width, - 0.5 * texts[i].size.height);\r\n                ctx!.restore();\r\n\r\n            }\r\n\r\n            dispatch(editorAC.setCanvasUrl('text', canvasRef.current.toDataURL()))\r\n        }\r\n    }, [texts, dispatch]);\r\n\r\n    return {\r\n        classes, size, canvasRef\r\n    }\r\n}\r\n\r\n\r\n//============== COMPONENT =================\r\nconst BannerCanvasTexts: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, size, canvasRef\r\n    } = useBannerCanvasTexts();\r\n    return (\r\n        <>\r\n            {\r\n                size.width && size.height &&\r\n                <canvas\r\n                    className={classes.bannerCanvasTexts}\r\n                    ref={canvasRef}\r\n                    width={size.width}\r\n                    height={size.height}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst BannerCanvasTextsMemo = React.memo(BannerCanvasTexts);\r\nexport default BannerCanvasTextsMemo;\r\n\r\n//======================== STYLES ========================\r\nconst useStyles = makeStyles({\r\n    bannerCanvasTexts: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        display: 'none'\r\n    }\r\n});","import React, {useRef} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSize, getUseBorder} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {getWrapperPosition, getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {ZoomType} from \"../../../../../Types/types\";\r\nimport BannerCSSTexts from \"../BannerCSS/BannerCSSTexts\";\r\nimport BannerCanvasBackgroundMemo from \"./BannerCanvasBackground\";\r\nimport BannerCanvasBorderMemo from \"./BannerCanvasBorder\";\r\nimport throttle from \"lodash/throttle\";\r\nimport {\r\n    getCursorOnTextPosition,\r\n    getMovedTextId,\r\n} from \"../../../../../Store/selectors/text-selectors\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport BannerCanvasTextsMemo from \"./BannerCanvasTexts\";\r\n\r\nconst Div = styled.div`\r\n  width: ${(props: PropsType) => props.width ? `${props.width * props.zoom / 100}px` : '0px'};\r\n  height: ${(props: PropsType) => props.height ? `${props.height * props.zoom / 100}px` : '0px'};\r\n  position: relative;  \r\n`;\r\n\r\n//=================== CUSTOM HOOK =======================\r\nconst useBannerCanvasWrapper = () => {\r\n    const size = useSelector(getSize);\r\n    const useBorder = useSelector(getUseBorder);\r\n    const zoom = useSelector(getZoom);\r\n    const dispatch = useDispatch();\r\n    const ref = useRef(null);\r\n\r\n    const wrapperPosition = useSelector(getWrapperPosition);\r\n    const cursorOnTextPosition = useSelector(getCursorOnTextPosition);\r\n    const movedTextId = useSelector(getMovedTextId);\r\n\r\n    const onMouseMoveHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        if (movedTextId) { // режим перемещения текста\r\n            const cursorX = e.clientX; // координаты курсора относительно окна\r\n            const cursorY = e.clientY;\r\n            const wrapperX = wrapperPosition.x; // координаты левого верхнего угла канваса относительно окна\r\n            const wrapperY = wrapperPosition.y;\r\n            const cursorOnTextPositionX = cursorOnTextPosition.x; // смещение курсора относительно левого верхнего угла текста\r\n            const cursorOnTextPositionY = cursorOnTextPosition.y;\r\n            const x = (cursorX - wrapperX - cursorOnTextPositionX) * 100 / zoom; // коорд. левого верхего угла текста относительно\r\n            const y = (cursorY - wrapperY - cursorOnTextPositionY) * 100 / zoom; // левого верхего угла канваса\r\n            dispatch(textAC.setPosition(movedTextId, x, y));\r\n        }\r\n    };\r\n    const onMouseMoveThrottle = throttle(onMouseMoveHandler, 500);\r\n\r\n    return {\r\n        size, useBorder, zoom, ref, onMouseMoveThrottle\r\n    }\r\n};\r\n\r\n//==================== COMPONENT ==========================\r\nconst BannerCanvasWrapper: React.FC<{}> = () => {\r\n    const {\r\n        size, useBorder, zoom, ref, onMouseMoveThrottle\r\n    } = useBannerCanvasWrapper();\r\n    // BannerCSSTexts - отображается в приложении\r\n    // BannerCanvasTextsMemo - выводится в файл\r\n    return (\r\n        <Div width={size.width}\r\n             height={size.height}\r\n             zoom={zoom}\r\n             ref={ref}\r\n             onMouseMove={onMouseMoveThrottle}\r\n        >\r\n            <BannerCanvasBackgroundMemo/>\r\n            {\r\n                useBorder &&\r\n                <BannerCanvasBorderMemo/>\r\n            }\r\n            <BannerCanvasTextsMemo/>\r\n            <BannerCSSTexts/>\r\n\r\n        </Div>\r\n    )\r\n};\r\nexport default BannerCanvasWrapper;\r\n\r\n//================= TYPE ==================\r\ntype PropsType = {\r\n    width: number | null\r\n    height: number | null\r\n    zoom: ZoomType\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport BannerCanvasWrapper from \"../Banner/BannerCanvas/BannerCanvasWrapper\";\r\nimport {mainSidebarWidth, secondSidebarWidth} from \"../../../../Utils/CONST\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {getShowSecondSidebar, getSize} from \"../../../../Store/selectors/editor-selectors\";\r\nimport {getRefCanvas, getWrapperPosition, getZoom} from \"../../../../Store/selectors/workspace-selectors\";\r\nimport throttle from \"lodash/throttle\";\r\nimport {workspaceAC} from \"../../../../Store/reducers/workspace-reducer\";\r\nimport {textAC} from \"../../../../Store/reducers/text-reducer\";\r\nimport {\r\n    getCursorOnRotatorPosition, getRotatedText,\r\n    getRotatedTextId\r\n} from \"../../../../Store/selectors/text-selectors\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useEditorWorkspace = () => {\r\n    const dispatch = useDispatch();\r\n    const showSecondSidebar = useSelector(getShowSecondSidebar);\r\n    const size = useSelector(getSize);\r\n    const zoom = useSelector(getZoom);\r\n    const z = zoom / 100;\r\n    const refCanvas = useSelector(getRefCanvas);\r\n\r\n    // корректировка wrapperPosition при прокрутке\r\n    const onScrollHandler = () => {\r\n        console.log('onScrollHandler')\r\n        if (refCanvas && refCanvas.current) {\r\n            // @ts-ignore\r\n            const wrapper: DOMRect = refCanvas.current.getBoundingClientRect();\r\n            const x = wrapper.left;\r\n            const y = wrapper.top;\r\n            dispatch(workspaceAC.setWrapperPosition(x, y));\r\n        }\r\n    };\r\n    const onScrollHandlerThrottle = throttle(onScrollHandler, 1000);\r\n\r\n    const rotatedTextId = useSelector(getRotatedTextId);\r\n    const wrapperPosition = useSelector(getWrapperPosition);\r\n    //const sizeOfSelectedText = useSelector(getSizeOfSelectedText);\r\n\r\n    const rotatedText = useSelector(getRotatedText);\r\n    const cursorOnRotatorPosition = useSelector(getCursorOnRotatorPosition);\r\n\r\n    const [angleStart, setAngleStart] = useState(0); // угол поворота в момент начала вращения\r\n    useEffect(() => {\r\n        if (rotatedTextId) {\r\n            //console.log('Начало вращения')\r\n            setAngleStart(rotatedText.angle); // установка угла поворота в моменте начала вращения\r\n        }\r\n    }, [rotatedTextId]);\r\n\r\n    const onMouseMoveHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        if (rotatedTextId) { // режим вращения текста\r\n            // 1 - коорд. центра текста отн. окна = коорд. левого верхнего угла канваса отн. окна +\r\n            // коорд. левого верхнего угла текста отн. левого верхнего угла канваса +\r\n            // половина габарита текста\r\n            const xCanvas = wrapperPosition.x; // координаты левого верхнего угла канваса относительно окна\r\n            const yCanvas = wrapperPosition.y;\r\n            const xText = rotatedText.position.left; // коорд. левого верхнего угла текста отн. левого верхнего угла канваса\r\n            const yText = rotatedText.position.top;\r\n\r\n            // const xCenter = xCanvas + z * (xText + sizeOfSelectedText.width / 2); // коорд. центра текста отн. окна\r\n            // const yCenter = yCanvas + z * (yText + sizeOfSelectedText.height / 2);\r\n            const xCenter = xCanvas + z * (xText + rotatedText.size.width / 2); // коорд. центра текста отн. окна\r\n            const yCenter = yCanvas + z * (yText + rotatedText.size.height / 2);\r\n\r\n\r\n            const xStart = cursorOnRotatorPosition.x; // начальное положение курсора относительно окна\r\n            const yStart = cursorOnRotatorPosition.y;\r\n\r\n            const xCursor = e.clientX; // текущее (конечное) положение курсора относительно окна\r\n            const yCursor = e.clientY;\r\n\r\n            const Vector_start = { // вектор начального положения (от центра текста до начального положения курсора)\r\n                x: xStart - xCenter,\r\n                y: yStart - yCenter\r\n            };\r\n            const Vector_end = { // вектор текущего (конечного) положения\r\n                x: xCursor - xCenter,\r\n                y: yCursor - yCenter\r\n            };\r\n            // (Vector_start, Vector_end) = Vector_start.x * Vector_end.x + Vector_start.y * Vector_end.y\r\n            // (Vector_start, Vector_end) = Vector_start_mod * Vector_end_mod * cos(angle)\r\n\r\n            // модули векторов\r\n            const Vector_start_mod = Math.sqrt(Vector_start.x * Vector_start.x + Vector_start.y * Vector_start.y);\r\n            const Vector_end_mod = Math.sqrt(Vector_end.x * Vector_end.x + Vector_end.y * Vector_end.y);\r\n\r\n            // скалярное произведение векторов\r\n            const mult = Vector_start.x * Vector_end.x + Vector_start.y * Vector_end.y;\r\n            const cos = mult / (Vector_start_mod * Vector_end_mod);\r\n            let angle = (180 / Math.PI) * Math.acos(cos);\r\n\r\n\r\n            // третья координата векторного произведения - ее знак определяет направление вращения\r\n            const multVector = Vector_start.x * Vector_end.y - Vector_start.y * Vector_end.x;\r\n            const direction = multVector >= 0 ? 1 : -1; // знак направление вращения\r\n\r\n            // xCenter, yCenter - коорд. центра текста отн. окна\r\n            // xCursor, xCursor - текущее (конечное) положение курсора относительно окна\r\n            // if (xCursor <= xCenter) {\r\n            //     angle = 360 - angle;\r\n            // }\r\n            console.log(angleStart + direction * angle);\r\n            dispatch(textAC.setAngle(rotatedTextId, angleStart + direction * angle))\r\n\r\n        }\r\n\r\n    };\r\n    const onMouseMoveThrottle = throttle(onMouseMoveHandler, 1500);\r\n\r\n    return {\r\n        size, zoom, showSecondSidebar, onScrollHandlerThrottle,\r\n        onMouseMoveThrottle\r\n    }\r\n};\r\n\r\nconst Row1 = styled.div`\r\n    display: flex;\r\n    min-height: 50px;\r\n    flex-shrink: 0;\r\n    flex-grow: 1; \r\n`;\r\n\r\nconst Div1 = styled.div`\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n    box-sizing: border-box;    \r\n    flex-shrink: 0;\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst Div2 = styled.div`\r\n    width: ${(props: { width: number, zoom: number }) => `${props.width * props.zoom / 100}px`};\r\n    min-height: 50px;\r\n    box-sizing: border-box;    \r\n    flex-shrink: 0;\r\n`;\r\n\r\nconst Row2 = styled.div`\r\n    display: flex;    \r\n    flex-shrink: 0; \r\n`;\r\n\r\nconst Div3 = styled.div`\r\n    height: ${(props: { height: number, zoom: number }) => `${props.height * props.zoom / 100}px`};\r\n    min-width: 50px;\r\n    box-sizing: border-box;\r\n    //border: 5px solid red;\r\n    flex-shrink: 0;\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst WorkspaceDiv = styled.div`\r\n        flex-grow: 1;\r\n        display: flex;\r\n        flex-direction: column;\r\n        position: relative;\r\n        width: ${\r\n    (\r\n        props: { showSecondSidebar: boolean }\r\n    ) => `calc(100vw - ${mainSidebarWidth}px - ${secondSidebarWidth * (props.showSecondSidebar ? 1 : 0)}px)`\r\n};\r\n        box-sizing: border-box;\r\n        overflow: auto;\r\n`\r\n\r\n//============== COMPONENT =================\r\nconst Workspace: React.FC<{}> = () => {\r\n    const {\r\n        size, zoom, showSecondSidebar, onScrollHandlerThrottle,\r\n        onMouseMoveThrottle\r\n    } = useEditorWorkspace();\r\n\r\n    return (\r\n        <WorkspaceDiv showSecondSidebar={showSecondSidebar}\r\n                      onScroll={onScrollHandlerThrottle}\r\n                      onMouseMove={onMouseMoveThrottle}\r\n        >\r\n            <Row1>\r\n                <Div1/>\r\n                <Div2 width={size.width as number} zoom={zoom}/>\r\n                <Div1/>\r\n            </Row1>\r\n            <Row2>\r\n                <Div3 height={size.height as number} zoom={zoom}/>\r\n                <BannerCanvasWrapper/>\r\n                <Div3 height={size.height as number} zoom={zoom}/>\r\n            </Row2>\r\n            <Row1>\r\n                <Div1/>\r\n                <Div2 width={size.width as number} zoom={zoom}/>\r\n                <Div1/>\r\n            </Row1>\r\n\r\n\r\n        </WorkspaceDiv>\r\n    )\r\n};\r\n\r\nexport default Workspace;","import {Dialog} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getShowAlarm} from \"../../Store/selectors/text-selectors\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport React from \"react\";\r\nimport {textAC} from \"../../Store/reducers/text-reducer\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport {getLang} from \"../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../Utils/lang\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n//========== CUSTOM HOOK ===========\r\nconst useAlarm = () => {\r\n    const showAlarm = useSelector(getShowAlarm);\r\n    const lang = useSelector(getLang);\r\n    const title = translate(lang, 'Maximum count of text');\r\n    const content = translate(lang, 'Maximum count of text in trial version of banner creator is 3.');\r\n    const dispatch = useDispatch();\r\n    const onCloseHandler = () => {\r\n        dispatch(textAC.setShowAlarm(false))\r\n    };\r\n    return {\r\n        showAlarm, onCloseHandler, title, content\r\n    }\r\n};\r\n\r\n//=========== COMPONENT ============\r\nconst Alarm: React.FC<{}> = () => {\r\n    const {\r\n        showAlarm, onCloseHandler, title, content\r\n    } = useAlarm();\r\n\r\n    return (\r\n        <Dialog open={showAlarm}\r\n                onClose={onCloseHandler}\r\n        >\r\n            <DialogTitle>{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {content}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                  <Button onClick={onCloseHandler} color=\"primary\" autoFocus variant='outlined'>\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n};\r\nexport default Alarm;","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {textAC} from \"../../../../../../Store/reducers/text-reducer\";\r\n\r\n//======================== CUSTOM HOOK ============================\r\nconst useButtonFontStyle = (selectedTextId: number, fontStyle: 'normal' | 'italic') => {\r\n    const classes = useStyles();\r\n    const variant = (fontStyle === 'italic' ? 'outlined' : 'text') as 'outlined' | 'text';\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(textAC.setFontStyle(selectedTextId, fontStyle === 'italic' ? 'normal' : 'italic'))\r\n    };\r\n\r\n    return {\r\n        classes, onClickHandler, variant\r\n    }\r\n}\r\n\r\n\r\n//======================== COMPONENT ==============================\r\nconst ButtonFontStyle: React.FC<PropsType> = ({selectedTextId, fontStyle}) => {\r\n    const {\r\n        classes, onClickHandler, variant\r\n    } = useButtonFontStyle(selectedTextId, fontStyle);\r\n\r\n    return (\r\n        <Button size='small'\r\n                variant={variant}\r\n                className={classes.button}\r\n                onClick={onClickHandler}\r\n        >\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n            >\r\n                T\r\n            </Typography>\r\n        </Button>\r\n\r\n    )\r\n};\r\nexport default ButtonFontStyle\r\n\r\n//======================== TYPE =========================\r\ntype PropsType = {\r\n    selectedTextId: number\r\n    fontStyle: 'normal' | 'italic'\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 42\r\n    },\r\n    typography: {\r\n        fontStyle: 'italic'\r\n    }\r\n});\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {textAC} from \"../../../../../../Store/reducers/text-reducer\";\r\n\r\n//======================== CUSTOM HOOK ============================\r\nconst useButtonFontStyle = (selectedTextId: number, lowerCase: boolean) => {\r\n    const classes = useStyles();\r\n    const variant = (lowerCase ? 'outlined' : 'text') as 'outlined' | 'text';\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(textAC.setLowerCase(selectedTextId, lowerCase ? false : true));\r\n        if (!lowerCase) {\r\n            dispatch(textAC.setUpperCase(selectedTextId, false))\r\n        }\r\n    };\r\n\r\n    return {\r\n        classes, onClickHandler, variant\r\n    }\r\n};\r\n\r\n//======================== COMPONENT ==============================\r\nconst ButtonLowerCase: React.FC<PropsType> = ({selectedTextId, lowerCase}) => {\r\n    const {\r\n        classes, onClickHandler, variant\r\n    } = useButtonFontStyle(selectedTextId, lowerCase);\r\n\r\n    return (\r\n        <Button size='small'\r\n                variant={variant}\r\n                className={classes.button}\r\n                onClick={onClickHandler}\r\n        >\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n\r\n            >\r\n                t\r\n            </Typography>\r\n        </Button>\r\n\r\n    )\r\n};\r\nexport default ButtonLowerCase\r\n\r\n//======================== TYPE =========================\r\ntype PropsType = {\r\n    selectedTextId: number\r\n    lowerCase: boolean\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 42\r\n    },\r\n    typography: {\r\n        textTransform: 'none'\r\n    }\r\n});\r\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {textAC} from \"../../../../../../Store/reducers/text-reducer\";\r\n\r\n//======================== CUSTOM HOOK ============================\r\nconst useButtonUpperCase = (selectedTextId: number, upperCase: boolean) => {\r\n    const classes = useStyles();\r\n    const variant = (upperCase ? 'outlined' : 'text') as 'outlined' | 'text';\r\n    const dispatch = useDispatch();\r\n    const onClickHandler = () => {\r\n        dispatch(textAC.setUpperCase(selectedTextId, upperCase ? false : true));\r\n        if (!upperCase) {\r\n            dispatch(textAC.setLowerCase(selectedTextId, false))\r\n        }\r\n    };\r\n\r\n    return {\r\n        classes, onClickHandler, variant\r\n    }\r\n};\r\n\r\n//======================== COMPONENT ==============================\r\nconst ButtonUpperCase: React.FC<PropsType> = ({selectedTextId, upperCase}) => {\r\n    const {\r\n        classes, onClickHandler, variant\r\n    } = useButtonUpperCase(selectedTextId, upperCase);\r\n\r\n    return (\r\n        <Button size='small'\r\n                variant={variant}\r\n                className={classes.button}\r\n                onClick={onClickHandler}\r\n        >\r\n            <Typography variant='h6'\r\n                        className={classes.typography}\r\n\r\n            >\r\n                T\r\n            </Typography>\r\n        </Button>\r\n\r\n    )\r\n};\r\nexport default ButtonUpperCase\r\n\r\n//======================== TYPE =========================\r\ntype PropsType = {\r\n    selectedTextId: number\r\n    upperCase: boolean\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        minWidth: 42\r\n    },\r\n    typography: {\r\n        textTransform: 'none'\r\n    }\r\n});\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport {getLang} from \"../../../../../../Store/selectors/app-selectors\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {translate} from \"../../../../../../Utils/lang\";\r\nimport {getSelectedText, getSelectedTextId} from \"../../../../../../Store/selectors/text-selectors\";\r\nimport {textAC} from \"../../../../../../Store/reducers/text-reducer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ButtonFontStyle from \"./ButtonFontStyle\";\r\nimport ButtonLowerCase from \"./ButtonLowerCase\";\r\nimport ButtonUpperCase from \"./ButtonUpperCase\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useLeftPanelText = () => {\r\n    const classes = useStyles();\r\n    const lang = useSelector(getLang);\r\n    const textLabel = translate(lang, 'Text');\r\n    const fontSizeLabel = translate(lang, 'Font size (px)');\r\n    const selectedText = useSelector(getSelectedText);\r\n    const selectedTextId = useSelector(getSelectedTextId);\r\n    const value = selectedText.fontSize;\r\n    const fontStyle = selectedText.fontStyle;\r\n    const lowerCase = selectedText.lowerCase;\r\n    const upperCase = selectedText.upperCase;\r\n    const dispatch = useDispatch();\r\n    const handleChange = (e: any, value: number | number[]) => {\r\n        dispatch(textAC.setFontSize(selectedTextId as number, value as number));\r\n    };\r\n    const values = [] as Array<number>;\r\n    for (let i = 6; i <= 300; i = i + 2) {\r\n        values.push(i);\r\n    }\r\n    const optionElements = values.map(\r\n        el => <option key={el} value={el}>{el}</option>\r\n    );\r\n    const onChangeSelectHandle = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        dispatch(textAC.setFontSize(selectedTextId as number, event.target.value as number));\r\n    };\r\n    return {\r\n        classes, textLabel, fontSizeLabel, value,\r\n        handleChange, optionElements, fontStyle,\r\n        onChangeSelectHandle, selectedTextId,\r\n        lowerCase, upperCase\r\n    }\r\n};\r\n\r\n\r\n//============== COMPONENT =================\r\nconst LeftPanelText: React.FC<{}> = () => {\r\n    const {\r\n        classes, textLabel, fontSizeLabel,\r\n        value, handleChange, optionElements,\r\n        onChangeSelectHandle, selectedTextId,\r\n        fontStyle, lowerCase, upperCase\r\n    } = useLeftPanelText();\r\n    return (\r\n        <div className={classes.LeftPanelText}>\r\n            <Typography variant='subtitle2'\r\n                        className={classes.typography}\r\n            >\r\n                {textLabel}\r\n            </Typography>\r\n\r\n            <div className={classes.form}>\r\n                <Typography variant='body2'>\r\n                    {fontSizeLabel}\r\n                </Typography>\r\n                <Slider className={classes.slider}\r\n                        min={6}\r\n                        max={300}\r\n                        step={2}\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                />\r\n\r\n                <div className={classes.formControlWrapper}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl} size='small'>\r\n                        <Select\r\n                            native\r\n                            value={value}\r\n                            onChange={onChangeSelectHandle}\r\n                        >\r\n                            {optionElements}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className={classes.fontStyleBlock}>\r\n                    <ButtonFontStyle selectedTextId={selectedTextId as number}\r\n                                     fontStyle={fontStyle}\r\n                    />\r\n                    <ButtonLowerCase selectedTextId={selectedTextId as number}\r\n                                     lowerCase={lowerCase}/>\r\n                    <ButtonUpperCase selectedTextId={selectedTextId as number}\r\n                                     upperCase={upperCase}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default LeftPanelText;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    LeftPanelText: {\r\n        width: 200,\r\n        border: '1px solid #ccc',\r\n        backgroundColor: '#FFF',\r\n        borderRadius: 5,\r\n        overflow: 'hidden'\r\n    },\r\n    typography: {\r\n        backgroundColor: grey[300],\r\n        padding: '10px 20px'\r\n    },\r\n    form: {\r\n        padding: '10px 20px'\r\n    },\r\n    slider: {\r\n        margin: '10px 0',\r\n    },\r\n    formControlWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    formControl: {\r\n        margin: 5,\r\n        minWidth: 60,\r\n    },\r\n    fontStyleBlock: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly'\r\n    }\r\n});","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {HexColorPicker} from \"react-colorful\";\r\nimport './../../../../../css/styles.css';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSelectedText, getSelectedTextId} from \"../../../../../Store/selectors/text-selectors\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\n\r\n//===================== CUSTOM HOOK ===================\r\nconst useLeftPanelColor = () => {\r\n    const lang = useSelector(getLang);\r\n    const titleLabel = translate(lang, 'Color')\r\n    const selectedTextId = useSelector(getSelectedTextId);\r\n    const selectedText = useSelector(getSelectedText);\r\n    const color = selectedText.color;\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = (newColor: string) => {\r\n        dispatch(textAC.setColor(selectedTextId as number, newColor));\r\n    };\r\n    const classes = useStyles();\r\n    return {\r\n        color, classes, titleLabel, onChangeHandler\r\n    }\r\n};\r\n\r\n//==================== COMPONENT ======================\r\nconst LeftPanelColor: React.FC<{}> = () => {\r\n    const {\r\n        color, classes, titleLabel, onChangeHandler,\r\n    } = useLeftPanelColor();\r\n\r\n    return (\r\n        <div className={classes.leftPanelColor}>\r\n            <Typography variant='subtitle2'\r\n                        className={classes.typography}>\r\n                {titleLabel}\r\n            </Typography>\r\n            <div className={classes.form}>\r\n                <HexColorPicker color={color}\r\n                                onChange={onChangeHandler}\r\n                                className={classes.colorPicker}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default LeftPanelColor;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    leftPanelColor: {\r\n        width: 200,\r\n        border: '1px solid #ccc',\r\n        backgroundColor: '#FFF',\r\n        borderRadius: 5,\r\n        overflow: 'hidden'\r\n    },\r\n    typography: {\r\n        backgroundColor: grey[300],\r\n        padding: '10px 20px'\r\n    },\r\n    form: {\r\n        padding: '20px 20px'\r\n    },\r\n    colorPicker: {\r\n        width: 160,\r\n        height: 160\r\n    }\r\n});","import React, {useEffect, useRef, useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {List} from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport clsx from \"clsx\";\r\nimport LeftPanelText from \"./LeftPanelText/LeftPanelText\";\r\nimport LeftPanelColor from \"./LeftPanelColor\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport {getSelectedTextId} from \"../../../../../Store/selectors/text-selectors\";\r\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\r\nimport {getLang} from \"../../../../../Store/selectors/app-selectors\";\r\nimport {translate} from \"../../../../../Utils/lang\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useLeftPanel = () => {\r\n    const [leftPanelIndex, setLeftPanelIndex] = useState(-1)\r\n    const classes = useStyles();\r\n    const selectedTextId = useSelector(getSelectedTextId) as number;\r\n    const onClickHandler = [];\r\n    onClickHandler[0] = () => {\r\n        setLeftPanelIndex(0);\r\n    };\r\n    onClickHandler[1] = () => {\r\n        setLeftPanelIndex(1);\r\n    };\r\n    onClickHandler[2] = () => {\r\n        setLeftPanelIndex(2);\r\n        dispatch(textAC.removeText(selectedTextId))\r\n    };\r\n\r\n    const refLeftPanel = useRef(null);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(workspaceAC.setRefLeftPanel(refLeftPanel))\r\n    });\r\n\r\n    const lang = useSelector(getLang);\r\n    const textLabel = translate(lang, 'Text');\r\n    const colorLabel = translate(lang, 'Color');\r\n    const deleteLabel = translate(lang, 'Delete');\r\n    return {\r\n        classes, leftPanelIndex, onClickHandler,\r\n        refLeftPanel, textLabel, colorLabel,\r\n        deleteLabel\r\n    }\r\n}\r\n\r\n//============== COMPONENT =================\r\nconst LeftPanel: React.FC<{}> = () => {\r\n    const {\r\n        classes, leftPanelIndex, onClickHandler,\r\n        refLeftPanel, textLabel, colorLabel,\r\n        deleteLabel\r\n    } = useLeftPanel();\r\n\r\n    return (\r\n        <div className={classes.leftPanel} ref={refLeftPanel}>\r\n\r\n            <List className={classes.list}>\r\n\r\n                <Tooltip title={textLabel} placement=\"right\" arrow\r\n                         classes={{\r\n                             tooltip: classes.tooltip,\r\n                             arrow: classes.arrow\r\n                         }}>\r\n                    <ListItem button\r\n                              className={classes.listItem}\r\n                              onClick={onClickHandler[0]}\r\n                              selected={leftPanelIndex === 0}>\r\n                        <ListItemIcon>\r\n                            <TextFieldsIcon\r\n                                className={clsx(classes.icon, leftPanelIndex === 0 && classes.iconSelected)}/>\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </Tooltip>\r\n\r\n                <Tooltip title={colorLabel} placement=\"right\" arrow\r\n                         classes={{\r\n                             tooltip: classes.tooltip,\r\n                             arrow: classes.arrow\r\n                         }}>\r\n                    <ListItem button\r\n                              className={classes.listItem}\r\n                              onClick={onClickHandler[1]}\r\n                              selected={leftPanelIndex === 1}>\r\n                        <ListItemIcon>\r\n                            <ColorLensIcon\r\n                                className={clsx(classes.icon, leftPanelIndex === 1 && classes.iconSelected)}/>\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </Tooltip>\r\n\r\n                <Tooltip title={deleteLabel} placement=\"right\" arrow\r\n                         classes={{\r\n                             tooltip: classes.tooltip,\r\n                             arrow: classes.arrow\r\n                         }} >\r\n                    <ListItem button\r\n                              className={classes.listItem}\r\n                              onClick={onClickHandler[2]}\r\n                              selected={leftPanelIndex === 2}>\r\n                        <ListItemIcon>\r\n                            <DeleteForeverIcon\r\n                                className={clsx(classes.icon, leftPanelIndex === 2 && classes.iconSelected)}/>\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </Tooltip>\r\n\r\n            </List>\r\n\r\n            <div>\r\n                {\r\n                    leftPanelIndex === 0 && <LeftPanelText/>\r\n                }\r\n                {\r\n                    leftPanelIndex === 1 && <LeftPanelColor/>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default LeftPanel;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    leftPanel: {\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 60,\r\n        left: 10,\r\n        display: 'flex',\r\n        alignItems: 'flex-start'\r\n    },\r\n    list: {\r\n        width: 60,\r\n        border: '1px solid #ccc',\r\n        backgroundColor: '#FFF',\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        marginRight: 5,\r\n        padding: 0\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: grey[400]\r\n        },\r\n        '&.Mui-selected:hover': {\r\n            backgroundColor: indigo[500],\r\n        },\r\n        '&.Mui-selected': {\r\n            backgroundColor: indigo[500],\r\n        },\r\n    },\r\n    icon: {\r\n        color: grey[800]\r\n    },\r\n    iconSelected: {\r\n        color: '#FFF'\r\n    },\r\n    tooltip: {\r\n        backgroundColor: '#000'\r\n    },\r\n    arrow: {\r\n        color: '#000'\r\n    }\r\n});\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getBackgroundStyle, getBackgroundStyleColor, getBorderColor, getColorEnd, getColorStart, getGradientStyle,\r\n    getMainSidebarItem,\r\n    getSecondarySidebarBackgroundTabIndex,\r\n    getShowSecondSidebar, getSize, getUseBorder\r\n} from \"../../../Store/selectors/editor-selectors\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport brown from \"@material-ui/core/colors/brown\";\r\nimport MainSidebar from \"./MainSidebar/MainSidebar\";\r\nimport {mainSidebarWidth, secondSidebarWidth} from \"../../../Utils/CONST\";\r\nimport SecondarySidebar from \"./SecondarySidebar/SecondarySidebar\";\r\nimport clsx from \"clsx\";\r\nimport Toolbar from \"./Toolbar/Toolbar\";\r\nimport Workspace from \"./Workspace/Workspace\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport Alarm from \"../../common/Alarm\";\r\nimport {useQueryParam, NumberParam, BooleanParam, StringParam} from 'use-query-params';\r\nimport {editorAC} from \"../../../Store/reducers/editor-reducer\";\r\nimport {BackgroundStyleColorType, BackgroundStyleType, GradientStyleType, LangType} from \"../../../Types/types\";\r\nimport {getIsCreated, getLang} from \"../../../Store/selectors/app-selectors\";\r\nimport {appAC} from \"../../../Store/reducers/app-reducer\";\r\nimport LeftPanel from \"./Workspace/LeftPanel/LeftPanel\";\r\nimport {getIsAnyTextEditParameters, getTexts} from \"../../../Store/selectors/text-selectors\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useEditor = () => {\r\n    const classes = useStyles();\r\n    const size = useSelector(getSize);\r\n    const dispatch = useDispatch();\r\n    const mainSidebarItem = useSelector(getMainSidebarItem);\r\n    const showSecondSidebar = useSelector(getShowSecondSidebar);\r\n    const backgroundTabIndex = useSelector(getSecondarySidebarBackgroundTabIndex);\r\n    const backgroundStyle = useSelector(getBackgroundStyle);\r\n    const isCreated = useSelector(getIsCreated);\r\n    const lang = useSelector(getLang);\r\n    const useBorder = useSelector(getUseBorder);\r\n    const borderColor = useSelector(getBorderColor);\r\n    const backgroundStyleColor = useSelector(getBackgroundStyleColor);\r\n    const gradientStyle = useSelector(getGradientStyle);\r\n    const colorStart = useSelector(getColorStart);\r\n    const colorEnd = useSelector(getColorEnd);\r\n\r\n    const [widthQuery, setWidthQuery] = useQueryParam('width', NumberParam);\r\n    const [heightQuery, setHeightQuery] = useQueryParam('height', NumberParam);\r\n    const [mainSidebarItemQuery, setMainSidebarItemQuery] = useQueryParam('mainSidebar', NumberParam);\r\n    const [showSecondSidebarQuery, setShowSecondSidebarQuery] = useQueryParam('showSecondSidebar', BooleanParam);\r\n    const [backgroundTabIndexQuery, setBackgroundTabIndexQuery] = useQueryParam('backTab', NumberParam);\r\n    const [backgroundStyleQuery, setBackgroundStyleQuery] = useQueryParam('backStyle', StringParam);\r\n    const [isCreatedQuery, setIsCreatedQuery] = useQueryParam('isCreated', BooleanParam);\r\n    const [langQuery, setLangQuery] = useQueryParam('lang', StringParam);\r\n    const [useBorderQuery, setUseBorderQuery] = useQueryParam('border', BooleanParam);\r\n    const [borderColorQuery, setBorderColorQuery] = useQueryParam('borderColor', StringParam);\r\n    const [backgroundStyleColorQuery, setBackgroundStyleColorQuery] = useQueryParam('backColor', StringParam);\r\n    const [gradientStyleQuery, setGradientStyleQuery] = useQueryParam('gradient', StringParam);\r\n    const [colorStartQuery, setColorStartQuery] = useQueryParam('colorStart', StringParam);\r\n    const [colorEndQuery, setColorEndQuery] = useQueryParam('colorEnd', StringParam);\r\n\r\n    // URL => STATE\r\n    useEffect(() => {\r\n        dispatch(editorAC.setSize(\r\n            (widthQuery && heightQuery)\r\n                ? {\r\n                    width: widthQuery as number,\r\n                    height: heightQuery as number\r\n                }\r\n                : size\r\n        ));\r\n        dispatch(editorAC.setMainSidebarItem(mainSidebarItemQuery ? mainSidebarItemQuery : mainSidebarItem));\r\n        dispatch(editorAC.setShowSecondSidebar(showSecondSidebarQuery !== undefined ? showSecondSidebarQuery as boolean : showSecondSidebar));\r\n        dispatch(editorAC.setSecondarySidebarBackgroundTabIndex(backgroundTabIndexQuery ? backgroundTabIndexQuery : backgroundTabIndex));\r\n        dispatch(editorAC.setBackgroundStyle(backgroundStyleQuery ? backgroundStyleQuery as BackgroundStyleType : backgroundStyle));\r\n        dispatch(appAC.setIsCreated(isCreatedQuery ? isCreatedQuery : isCreated));\r\n        dispatch(appAC.setLang(langQuery ? langQuery as LangType : lang));\r\n        dispatch(editorAC.setUseBorder(useBorderQuery ? useBorderQuery : useBorder));\r\n        dispatch(editorAC.setBorderColor(borderColorQuery ? borderColorQuery : borderColor));\r\n        dispatch(editorAC.setBackgroundStyleColor(backgroundStyleColorQuery ? {color: backgroundStyleColorQuery} : backgroundStyleColor));\r\n        dispatch(editorAC.setGradientStyle(gradientStyleQuery ? gradientStyleQuery as GradientStyleType : gradientStyle));\r\n        dispatch(editorAC.setColorStart(colorStartQuery ? colorStartQuery : colorStart));\r\n        dispatch(editorAC.setColorEnd(colorEndQuery ? colorEndQuery : colorEnd));\r\n    }, [dispatch]);\r\n\r\n    // STATE => URL\r\n    useEffect(() => {\r\n        setWidthQuery(size.width);\r\n        setHeightQuery(size.height);\r\n        setMainSidebarItemQuery(mainSidebarItem !== 0 ? mainSidebarItem : undefined);\r\n        setShowSecondSidebarQuery(showSecondSidebar ? undefined : false);\r\n        setBackgroundTabIndexQuery(backgroundTabIndex !== 0 ? backgroundTabIndex : undefined);\r\n        setBackgroundStyleQuery(backgroundStyle !== 'color' ? backgroundStyle : undefined);\r\n        setIsCreatedQuery(isCreated ? true : undefined);\r\n        setLangQuery(lang === 'rus' ? 'rus' : undefined);\r\n        setUseBorderQuery(useBorder ? true : undefined);\r\n        setBorderColorQuery(borderColor !== '#000' ? borderColor : undefined);\r\n        setBackgroundStyleColorQuery(backgroundStyleColor.color !== '#000' ? backgroundStyleColor.color : undefined);\r\n        setGradientStyleQuery(gradientStyle !== 'horizontal' ? gradientStyle : undefined);\r\n        if (backgroundStyle !== 'gradient') {\r\n            setGradientStyleQuery(undefined);\r\n        }\r\n        setColorStartQuery(colorStart !== '#000' ? colorStart : undefined);\r\n        setColorEndQuery(colorEnd !== '#FFF' ? colorEnd : undefined);\r\n\r\n    }, [\r\n        size,\r\n        mainSidebarItem,\r\n        showSecondSidebar,\r\n        backgroundTabIndex,\r\n        backgroundStyle,\r\n        isCreated,\r\n        lang,\r\n        useBorder,\r\n        borderColor,\r\n        backgroundStyleColor,\r\n        gradientStyle,\r\n        colorStart,\r\n        colorEnd\r\n    ]);\r\n\r\n    const isAnyTextEditParameters = useSelector(getIsAnyTextEditParameters);\r\n    const leftPanelIsShow = isAnyTextEditParameters;\r\n\r\n    return {\r\n        classes, showSecondSidebar, leftPanelIsShow\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst Editor: React.FC<{}> = () => {\r\n    const {\r\n        classes, showSecondSidebar, leftPanelIsShow\r\n    } = useEditor();\r\n    return (\r\n        <div className={classes.editor}>\r\n            <div className={classes.mainSidebar}>\r\n                <MainSidebar/>\r\n            </div>\r\n            <div className={clsx(classes.secondSidebarWrapper, !showSecondSidebar && classes.secondSidebarWrapperHide)}>\r\n                <div className={classes.secondSidebar}>\r\n                    <SecondarySidebar/>\r\n                </div>\r\n            </div>\r\n            <div className={classes.workspace}>\r\n                <Toolbar/>\r\n                <Workspace/>\r\n                {\r\n                    leftPanelIsShow && <LeftPanel/>\r\n                }\r\n            </div>\r\n            <Alarm/>\r\n        </div>\r\n    )\r\n};\r\nexport default Editor;\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    editor: {\r\n        display: 'flex',\r\n        height: 'calc(100vh - 64px)',\r\n        width: '100vw'\r\n    },\r\n    mainSidebar: {\r\n        width: mainSidebarWidth,\r\n        flexShrink: 0,\r\n        backgroundColor: brown[800],\r\n        height: 'calc(100vh - 64px)',\r\n    },\r\n    secondSidebarWrapper: {\r\n        width: secondSidebarWidth,\r\n        flexShrink: 0,\r\n        backgroundColor: brown[600],\r\n        position: 'relative',\r\n        //transition: 'width .3s',\r\n        overflow: 'hidden',\r\n        height: 'calc(100vh - 64px)',\r\n    },\r\n    secondSidebarWrapperHide: {\r\n        width: 0,\r\n    },\r\n    secondSidebar: {\r\n        position: 'absolute',\r\n        width: secondSidebarWidth,\r\n        right: 0,\r\n        height: 'calc(100vh - 64px)',\r\n    },\r\n    workspace: {\r\n        flexGrow: 1,\r\n        width: `calc(100vw - ${mainSidebarWidth}px - ${secondSidebarWidth}px)`,\r\n        height: 'calc(100vh - 64px)',\r\n        backgroundColor: grey[200],\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'relative'\r\n    }\r\n});\r\n","import {ReactElement} from \"react\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport PageNotFound from \"../common/PageNotFound\";\r\nimport CreateNew from \"./CreateNew/CreateNew\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Editor from \"./Editor/Editor\";\r\n\r\n//======================== CUSTOM HOOK =========================\r\nconst useMain = () => {\r\n    const classes = useStyles();\r\n    return {classes}\r\n};\r\n\r\n//======================= COMPONENT ===============================\r\nconst Main: React.FC<{}> = (): ReactElement => {\r\n    const {classes} = useMain();\r\n    return (\r\n        <main className={classes.main}>\r\n                <Switch>\r\n                    <Route exact path='/' render={() => <CreateNew/>}/>\r\n                    <Route path='/editor' render={() => <Editor/>}/>\r\n                    <Route path='*' render={() => <PageNotFound/>}/>\r\n                </Switch>\r\n        </main>\r\n    )\r\n};\r\nexport default Main;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    main: {\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        height: 'calc(100vh - 64px)',\r\n        width: '100vw'\r\n    }\r\n});","import React, {ReactElement, useEffect} from 'react';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport Main from \"./Components/Main/Main\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getLang} from \"./Store/selectors/app-selectors\";\r\nimport {StringParam, useQueryParam} from \"use-query-params\";\r\nimport {appAC} from \"./Store/reducers/app-reducer\";\r\nimport {LangType} from \"./Types/types\";\r\n\r\n//======================== CUSTOM HOOK =========================\r\nconst useApp = () => {\r\n    const classes = useStyles();\r\n    const catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n        alert(e);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener('unhandledrejection', catchAllUnhandledErrors);\r\n        return () => {\r\n            window.removeEventListener('unhandledrejection', catchAllUnhandledErrors);\r\n        }\r\n    }, []);\r\n\r\n    const lang = useSelector(getLang);\r\n    const dispatch = useDispatch();\r\n    const [langQuery, setLangQuery] = useQueryParam('lang', StringParam);\r\n    // URL => STATE\r\n    useEffect(() => {\r\n        dispatch(appAC.setLang(langQuery ? langQuery as LangType : lang));\r\n    }, [dispatch]);\r\n\r\n    // STATE => URL\r\n    useEffect(() => {\r\n        setLangQuery(lang === 'eng' ? undefined : 'rus');\r\n    }, [lang]);\r\n\r\n    return {\r\n        classes\r\n    }\r\n};\r\n\r\n\r\nconst App: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes\r\n    } = useApp();\r\n    return (\r\n        <div className={classes.app}>\r\n            <Header/>\r\n            <Main/>\r\n        </div>\r\n    );\r\n};\r\nexport default App;\r\n\r\n//============================= STYLE ==========================\r\nconst useStyles = makeStyles({\r\n    app: {\r\n        height: '100vh',\r\n        width: '100vw'\r\n    },\r\n});\r\n\r\n","import {Action, applyMiddleware, combineReducers, createStore, Middleware} from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport appReducer from \"./reducers/app-reducer\";\r\nimport editorReducer from \"./reducers/editor-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport workspaceReducer from \"./reducers/workspace-reducer\";\r\nimport textReducer from \"./reducers/text-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    editor: editorReducer,\r\n    workspace: workspaceReducer,\r\n    text: textReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst middleware: Array<Middleware> = [thunkMiddleware];\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\r\nexport default store;\r\n\r\n//======================== TYPE ==========================\r\nexport type StateType = ReturnType<typeof rootReducer>\r\nexport type GetActionsType<T> = T extends {[key: string]: (...args: any[]) => infer U } ? U : never\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, StateType, unknown, A>","import React from 'react';\r\nimport {ErrorInfo} from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component<PropsType, StateType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            errorInfo: null\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            return (\r\n                <div>\r\n                    <h2>Something went wrong</h2>\r\n                    <details style={{whiteSpace: 'pre-wrap'}}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                    </details>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n//==================== TYPES ========================\r\ntype PropsType = {};\r\ntype StateType = {\r\n    error: null | Error\r\n    errorInfo: null | ErrorInfo\r\n}","import {Provider} from \"react-redux\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport React, {ReactElement} from \"react\";\r\nimport App from \"./App\";\r\nimport store from \"./Store/store\";\r\nimport ErrorBoundary from \"./Components/common/ErrorBoundary\";\r\nimport {CssBaseline} from \"@material-ui/core\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {QueryParamProvider} from \"use-query-params\";\r\n\r\nconst AppContainer: React.FC = (): ReactElement => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <QueryParamProvider ReactRouterRoute={Route}>\r\n                    <ErrorBoundary>\r\n                        <CssBaseline/>\r\n                        <DndProvider backend={HTML5Backend}>\r\n                            <App/>\r\n                        </DndProvider>\r\n                    </ErrorBoundary>\r\n                </QueryParamProvider>\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default AppContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppContainer from \"./AppContainer\";\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}