[{"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\AppContainer.tsx":"1","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Main.tsx":"2","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Utils\\lang.ts":"3","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\CreateNew\\CreateNew.tsx":"4","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\CreateNew\\CreateNewItem.tsx":"5","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\Toolbar.tsx":"6","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Store\\selectors\\workspace-selectors.ts":"7","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\ToolbarDownload.tsx":"8","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\ToolbarZoom.tsx":"9","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCanvas\\BannerCanvasWrapper.tsx":"10","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\DownloadDialog\\FileNameForm.tsx":"11","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelText\\LeftPanelText.tsx":"12","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCanvas\\BannerCanvasBorder.tsx":"13","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelText\\ButtonUpperCase.tsx":"14","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCSS\\BannerCSSText.tsx":"15","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\MainSidebar\\MainSidebar.tsx":"16","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Background.tsx":"17","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\BackgroundBorder.tsx":"18","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Color\\Color.tsx":"19","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Gradient\\GradientColor.tsx":"20","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Settings\\Settings.tsx":"21","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\MyImages\\MyImages.tsx":"22","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Settings\\SettingsAlign.tsx":"23","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Settings\\SettingsAlignButton.tsx":"24","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Header\\HeaderLang.tsx":"25","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\Workspace.tsx":"26","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarText\\Text.tsx":"27","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\ToolbarZoomMinus.tsx":"28","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\ToolbarZoomPlus.tsx":"29","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarTitle.tsx":"30","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Image.tsx":"31","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\DragAndDrop\\Dnd.ts":"32","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCanvas\\BannerCanvasTexts.tsx":"33","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Color\\SelectColorButton.tsx":"34","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Color\\SetColorButton.tsx":"35","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelText\\ButtonLowerCase.tsx":"36","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCSS\\BannerTextForm.tsx":"37","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\CreateNew\\CreateNewItemGraph.tsx":"38","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Store\\reducers\\text-reducer.tsx":"39","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\CreateNew\\CreateNewCustom.tsx":"40","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Utils\\CONST.ts":"41","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\DownloadDialog\\DownloadDialog.tsx":"42","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\DownloadDialog\\LinkForm.tsx":"43","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCanvas\\BannerCanvasBackground.tsx":"44","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\common\\SelectColorButtonCustom.tsx":"45","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\ImageTabs.tsx":"46","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\common\\SelectColorPopover.tsx":"47","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\common\\PageNotFound.tsx":"48","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Store\\selectors\\editor-selectors.ts":"49","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\common\\Alarm.tsx":"50","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanel.tsx":"51","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelColor.tsx":"52","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\BackgroundTabs.tsx":"53","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Utils\\validators.ts":"54","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelText\\ButtonFontStyle.tsx":"55","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Settings\\SettingsScaleMode.tsx":"56"},{"size":845,"mtime":1607531041340,"results":"57","hashOfConfig":"58"},{"size":1261,"mtime":1607728177199,"results":"59","hashOfConfig":"58"},{"size":5758,"mtime":1607825149733,"results":"60","hashOfConfig":"58"},{"size":2689,"mtime":1607776255216,"results":"61","hashOfConfig":"58"},{"size":3197,"mtime":1607724706410,"results":"62","hashOfConfig":"58"},{"size":1746,"mtime":1607770974979,"results":"63","hashOfConfig":"58"},{"size":793,"mtime":1607704231813,"results":"64","hashOfConfig":"58"},{"size":4686,"mtime":1607727128378,"results":"65","hashOfConfig":"58"},{"size":2969,"mtime":1607727128385,"results":"66","hashOfConfig":"58"},{"size":2608,"mtime":1607815859401,"results":"67","hashOfConfig":"58"},{"size":2958,"mtime":1607727128422,"results":"68","hashOfConfig":"58"},{"size":5276,"mtime":1607764628211,"results":"69","hashOfConfig":"58"},{"size":2404,"mtime":1607804603751,"results":"70","hashOfConfig":"58"},{"size":1928,"mtime":1607682120549,"results":"71","hashOfConfig":"58"},{"size":6008,"mtime":1607797258547,"results":"72","hashOfConfig":"58"},{"size":3738,"mtime":1607724949566,"results":"73","hashOfConfig":"58"},{"size":2021,"mtime":1607824307666,"results":"74","hashOfConfig":"58"},{"size":4043,"mtime":1607799828430,"results":"75","hashOfConfig":"58"},{"size":3235,"mtime":1607725173562,"results":"76","hashOfConfig":"58"},{"size":3705,"mtime":1607725307006,"results":"77","hashOfConfig":"58"},{"size":819,"mtime":1607725570242,"results":"78","hashOfConfig":"58"},{"size":3810,"mtime":1607725459011,"results":"79","hashOfConfig":"58"},{"size":2102,"mtime":1607728633640,"results":"80","hashOfConfig":"58"},{"size":1630,"mtime":1607725834069,"results":"81","hashOfConfig":"58"},{"size":3504,"mtime":1607724706413,"results":"82","hashOfConfig":"58"},{"size":3278,"mtime":1607818697666,"results":"83","hashOfConfig":"58"},{"size":3468,"mtime":1607762523230,"results":"84","hashOfConfig":"58"},{"size":1817,"mtime":1607727128428,"results":"85","hashOfConfig":"58"},{"size":1839,"mtime":1607727128416,"results":"86","hashOfConfig":"58"},{"size":2231,"mtime":1607726774993,"results":"87","hashOfConfig":"58"},{"size":1688,"mtime":1607763317369,"results":"88","hashOfConfig":"58"},{"size":141,"mtime":1607531842807,"results":"89","hashOfConfig":"58"},{"size":2757,"mtime":1607798728276,"results":"90","hashOfConfig":"58"},{"size":3353,"mtime":1607725173547,"results":"91","hashOfConfig":"58"},{"size":1813,"mtime":1607725173554,"results":"92","hashOfConfig":"58"},{"size":1928,"mtime":1607682132981,"results":"93","hashOfConfig":"58"},{"size":3589,"mtime":1607724869516,"results":"94","hashOfConfig":"58"},{"size":970,"mtime":1607724706385,"results":"95","hashOfConfig":"58"},{"size":11433,"mtime":1607823978065,"results":"96","hashOfConfig":"58"},{"size":7317,"mtime":1607777726312,"results":"97","hashOfConfig":"58"},{"size":115,"mtime":1607046681834,"results":"98","hashOfConfig":"58"},{"size":8616,"mtime":1607799479872,"results":"99","hashOfConfig":"58"},{"size":2942,"mtime":1607727128446,"results":"100","hashOfConfig":"58"},{"size":13621,"mtime":1607813925381,"results":"101","hashOfConfig":"58"},{"size":4824,"mtime":1607723996665,"results":"102","hashOfConfig":"58"},{"size":3044,"mtime":1607777857068,"results":"103","hashOfConfig":"58"},{"size":2335,"mtime":1607723996677,"results":"104","hashOfConfig":"58"},{"size":885,"mtime":1607723759968,"results":"105","hashOfConfig":"58"},{"size":1655,"mtime":1607813672936,"results":"106","hashOfConfig":"58"},{"size":1923,"mtime":1607825356536,"results":"107","hashOfConfig":"58"},{"size":6191,"mtime":1607727457451,"results":"108","hashOfConfig":"58"},{"size":2570,"mtime":1607727457469,"results":"109","hashOfConfig":"58"},{"size":3529,"mtime":1607763036313,"results":"110","hashOfConfig":"58"},{"size":533,"mtime":1607630655496,"results":"111","hashOfConfig":"58"},{"size":1877,"mtime":1607727231339,"results":"112","hashOfConfig":"58"},{"size":2669,"mtime":1607762248729,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"vwi50v",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"153"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"153"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\AppContainer.tsx",[],["235","236"],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Main.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Utils\\lang.ts",["237","238","239","240","241"],"import {LangType} from \"../Types/types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\n\r\nexport const Lang: LangObjectType = {\r\n    'English': {\r\n        'eng': 'English',\r\n        'rus': 'Русский'\r\n    },\r\n    'Change language': {\r\n        'eng': 'Change language',\r\n        'rus': 'Сменить язык'\r\n    },\r\n    'Banner creator': {\r\n        'eng': 'Banner creator',\r\n        'rus': 'Редактор баннеров'\r\n    },\r\n    'Create new': {\r\n        'eng': 'Create new',\r\n        'rus': 'Создать новый'\r\n    },\r\n    'Width': {\r\n        'eng': 'Width',\r\n        'rus': 'Ширина'\r\n    },\r\n    'Height': {\r\n        'eng': 'Height',\r\n        'rus': 'Высота'\r\n    },\r\n    'Create': {\r\n        'eng': 'Create',\r\n        'rus': 'Создать'\r\n    },\r\n    'Custom Size': {\r\n        'eng': 'Custom Size',\r\n        'rus': 'Задать размер'\r\n    },\r\n    'Background': {\r\n        'eng': 'Background',\r\n        'rus': 'Задний фон'\r\n    },\r\n    'Text': {\r\n        'eng': 'Text',\r\n        'rus': 'Текст'\r\n    },\r\n    'Color': {\r\n        'eng': 'Color',\r\n        'rus': 'Цвет'\r\n    },\r\n    'Gradient': {\r\n        'eng': 'Gradient',\r\n        'rus': 'Градиент'\r\n    },\r\n    'Texture': {\r\n        'eng': 'Texture',\r\n        'rus': 'Текстура'\r\n    },\r\n    'Image': {\r\n        'eng': 'Image',\r\n        'rus': 'Картинка'\r\n    },\r\n    'Default presets': {\r\n        'eng': 'Default presets',\r\n        'rus': 'Стандартные цвета'\r\n    },\r\n    'Border': {\r\n        'eng': 'Border',\r\n        'rus': 'Рамка'\r\n    },\r\n    'Use border': {\r\n        'eng': 'Use border',\r\n        'rus': 'С рамкой'\r\n    },\r\n    'Select color': {\r\n        'eng': 'Select color',\r\n        'rus': 'Выберите цвет'\r\n    },\r\n    'Select background color': {\r\n        'eng': 'Select background color',\r\n        'rus': 'Выберите цвет заднего фона'\r\n    },\r\n    'Select border color': {\r\n        'eng': 'Select border color',\r\n        'rus': 'Выберите цвет рамки'\r\n    },\r\n    'Select start color': {\r\n        'eng': 'Select start color',\r\n        'rus': 'Выберите начальный цвет'\r\n    },\r\n    'Select end color': {\r\n        'eng': 'Select end color',\r\n        'rus': 'Выберите конечный цвет'\r\n    },\r\n    'My images': {\r\n        'eng': 'My images',\r\n        'rus': 'Мои'\r\n    },\r\n    'Stock photos': {\r\n        'eng': 'Stock photos',\r\n        'rus': 'Стоковые'\r\n    },\r\n    'Settings': {\r\n        'eng': 'Settings',\r\n        'rus': 'Настройки'\r\n    },\r\n    'Scale mode': {\r\n        'eng': 'Scale mode',\r\n        'rus': 'Масштабирование'\r\n    },\r\n    'Align': {\r\n        'eng': 'Align',\r\n        'rus': 'Выравнивание'\r\n    },\r\n    'Exact fit': {\r\n        'eng': 'Exact fit',\r\n        'rus': 'Непропорционально вписать'\r\n    },\r\n    'Scale crop': {\r\n        'eng': 'Scale crop',\r\n        'rus': 'Пропорционально заполнить'\r\n    },\r\n    'No scale': {\r\n        'eng': 'No scale',\r\n        'rus': 'Заполнить без масштабирования'\r\n    },\r\n    'Maintain aspect': {\r\n        'eng': 'Maintain aspect',\r\n        'rus': 'Пропорционально вписать'\r\n    },\r\n    'Download': {\r\n        'eng': 'Download',\r\n        'rus': 'Скачать'\r\n    },\r\n    'Add text': {\r\n        'eng': 'Add text',\r\n        'rus': 'Добавить текст'\r\n    },\r\n    'Add header': {\r\n        'eng': 'Add header',\r\n        'rus': 'Заголовок'\r\n    },\r\n    'Add subheader': {\r\n        'eng': 'Add subheader',\r\n        'rus': 'Подзаголовок'\r\n    },\r\n    'Add body text': {\r\n        'eng': 'Add body text',\r\n        'rus': 'Обычный текст'\r\n    },\r\n    'Font size (px)': {\r\n        'eng': 'Font size (px)',\r\n        'rus': 'Размер шрифта (пикс)'\r\n    },\r\n    'Delete': {\r\n        'eng': 'Delete',\r\n        'rus': 'Удалить'\r\n    },\r\n    'Download created banner as': {\r\n        'eng': 'Download created banner as',\r\n        'rus': 'Загрузить созданный баннер как'\r\n    },\r\n    'Enter a file name:': {\r\n        'eng': 'Enter a file name:',\r\n        'rus': 'Введите имя файла:'\r\n    },\r\n    'Enter a link:': {\r\n        'eng': 'Enter a link:',\r\n        'rus': 'Введите ссылку:'\r\n    },\r\n    'Cancel': {\r\n        'eng': 'Cancel',\r\n        'rus': 'Закрыть'\r\n    },\r\n    'Copy': {\r\n        'eng': 'Copy',\r\n        'rus': 'Копировать'\r\n    },\r\n    'Quality of jpeg': {\r\n        'eng': 'Quality of jpeg',\r\n        'rus': 'Качество jpeg'\r\n    },\r\n    'Maximum count of text': {\r\n        'eng': 'Maximum count of text',\r\n        'rus': 'Максимальное количество строк'\r\n    },\r\n    'Maximum count of text in trial version of banner creator is 3.': {\r\n        'eng': 'Maximum count of text in trial version of banner creator is 3.',\r\n        'rus': 'Максимальное количество строк в ознакомительной версии программы равно 3.'\r\n    },\r\n};\r\n\r\n// const lang = useSelector(getLang);\r\n// translate(lang, '')\r\n\r\nexport const translate = (lang: LangType, phrase: string): string => {\r\n    return lang === 'rus' ? Lang[phrase].rus : Lang[phrase].eng\r\n};\r\n\r\ntype LangObjectType = {\r\n    [key: string]: {\r\n        'eng': string\r\n        'rus': string\r\n    }\r\n}\r\n\r\n","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\CreateNew\\CreateNew.tsx",[],["242","243"],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\CreateNew\\CreateNewItem.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\Toolbar.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Store\\selectors\\workspace-selectors.ts",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\ToolbarDownload.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\ToolbarZoom.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCanvas\\BannerCanvasWrapper.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\DownloadDialog\\FileNameForm.tsx",["244"],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelText\\LeftPanelText.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCanvas\\BannerCanvasBorder.tsx",["245"],"import {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getBorderColor,\r\n    getSize\r\n} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport React, {ReactElement, useEffect, useRef} from \"react\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerCanvasBackground = () => {\r\n    const classes = useStyles();\r\n    const size = useSelector(getSize);\r\n    const zoom = useSelector(getZoom);\r\n    const dispatch = useDispatch();\r\n    const borderColor = useSelector(getBorderColor);\r\n    let canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    let canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && size.width && size.height) {\r\n            canvasCtxRef.current = canvasRef.current.getContext('2d');\r\n            let ctx = canvasCtxRef.current;\r\n            ctx!.clearRect(0, 0, size.width, size.height);\r\n            ctx!.strokeStyle = borderColor;\r\n            ctx!.lineWidth = 4;\r\n            ctx!.strokeRect(0, 0, size.width, size.height);\r\n            dispatch(editorAC.setCanvasUrl('border', canvasRef.current.toDataURL()))\r\n        }\r\n    }, [size, borderColor]);\r\n\r\n    return {\r\n        classes, size, canvasRef, zoom\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCanvasBorder: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, size, canvasRef, zoom\r\n    } = useBannerCanvasBackground();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                size.width && size.height &&\r\n                <canvas\r\n                    className={classes.bannerCanvasBorder}\r\n                    ref={canvasRef}\r\n                    width={size.width}\r\n                    height={size.height}\r\n                    style={{\r\n                        transform: `scale(${zoom/100})`,\r\n                        transformOrigin: 'left top'\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n};\r\nexport default BannerCanvasBorder;\r\n\r\n//======================== STYLES ========================\r\nconst useStyles = makeStyles({\r\n    bannerCanvasBorder: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }\r\n});","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelText\\ButtonUpperCase.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCSS\\BannerCSSText.tsx",["246"],"import {TextType} from \"../../../../../Types/types\";\r\nimport styled from \"styled-components\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {textAC} from \"../../../../../Store/reducers/text-reducer\";\r\nimport clsx from \"clsx\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {getRefLeftPanel, getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport BannerTextForm from \"./BannerTextForm\";\r\nimport {useDrag} from \"react-dnd\";\r\nimport {ItemTypes} from \"../../../../../DragAndDrop/Dnd\";\r\n\r\n//==================== STYLED ===================\r\nconst Span = styled.span`\r\n    position: absolute;\r\n    top: ${(props: PropsSpanType) => `${props.top * props.zoom / 100}px`};\r\n    left: ${(props: PropsSpanType) => `${props.left * props.zoom / 100}px`};\r\n    color: ${(props: PropsSpanType) => props.color};\r\n    font-size: ${(props: PropsSpanType) => `${props.fontSize * props.zoom / 100}px`};\r\n    line-height: ${(props: PropsSpanType) => `${props.fontSize * props.zoom / 100}px`};\r\n    font-family: ${(props: PropsSpanType) => props.fontFamily};\r\n    font-style: ${(props: PropsSpanType) => props.fontStyle};\r\n    user-select: none;\r\n`;\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerText = (text: TextType) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const wrapperRef = useRef(null);\r\n    const zoom = useSelector(getZoom);\r\n\r\n    const onMouseEnterHandler = () => {\r\n        dispatch(textAC.setHover(text.id, true))\r\n    };\r\n    const onMouseLeaveHandler = () => {\r\n        dispatch(textAC.setHover(text.id, false))\r\n    };\r\n\r\n    const onMouseDownHandler = () => {\r\n        dispatch(textAC.setSelected(text.id, true));\r\n\r\n    };\r\n    const onMouseUpHandler = () => {\r\n        dispatch(textAC.setSelected(text.id, false))\r\n    };\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(textAC.setEditParameters(text.id, true));\r\n        dispatch(textAC.setSelectedTextId(text.id))\r\n    };\r\n    const cb = () => {\r\n        dispatch(textAC.setEditParameters(text.id, false));\r\n    };\r\n    const onDoubleClickHandler = () => {\r\n        dispatch(textAC.setEditText(text.id, true));\r\n    };\r\n    const refLeftPanel = useSelector(getRefLeftPanel) as React.MutableRefObject<null>;\r\n    const onOutsideClickHandler = (event: MouseEvent): void => {\r\n        if (\r\n            // @ts-ignore\r\n            !wrapperRef.current.contains(event.target) &&\r\n            // @ts-ignore\r\n            !refLeftPanel.current.contains(event.target)\r\n        ) {\r\n            cb();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (text.editParameters) {\r\n            document.addEventListener(\"mousedown\", onOutsideClickHandler);\r\n        }\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", onOutsideClickHandler);\r\n        };\r\n    }, [onOutsideClickHandler, text.editParameters]);\r\n\r\n    const [{isDragging}, dragRef] = useDrag({\r\n        item: {\r\n            id: text.id,\r\n            x: text.position.left,\r\n            y: text.position.top,\r\n            type: ItemTypes.TEXT\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    let content = text.content;\r\n    if (text.lowerCase) {\r\n        content = content.toLowerCase();\r\n    }\r\n    if (text.upperCase) {\r\n        content = content.toUpperCase();\r\n    }\r\n\r\n    return {\r\n        classes, onMouseEnterHandler, onMouseLeaveHandler,\r\n        onMouseDownHandler, onMouseUpHandler, wrapperRef,\r\n        onClickHandler, onDoubleClickHandler,\r\n        isDragging, dragRef, content, zoom\r\n    }\r\n};\r\n\r\n//============== COMPONENT =================\r\nconst BannerCSSText: React.FC<PropsType> = ({text}) => {\r\n    const {\r\n        classes, onMouseEnterHandler, onMouseLeaveHandler,\r\n        onMouseDownHandler, onMouseUpHandler, wrapperRef,\r\n        onClickHandler, onDoubleClickHandler,\r\n        isDragging, dragRef, content, zoom\r\n    } = useBannerText(text);\r\n\r\n    if (isDragging) {\r\n        return <div ref={dragRef}/>\r\n    }\r\n\r\n    return (\r\n        <div ref={wrapperRef}>\r\n            {\r\n                text.editText &&\r\n                <BannerTextForm text={text}/>\r\n            }\r\n            <Span fontSize={text.fontSize}\r\n                  fontFamily={text.fontFamily}\r\n                  fontStyle={text.fontStyle}\r\n                  color={text.color}\r\n                  ref={dragRef}\r\n                  top={text.position.top}\r\n                  left={text.position.left}\r\n                  zoom={zoom}\r\n                  onMouseEnter={onMouseEnterHandler}\r\n                  onMouseLeave={onMouseLeaveHandler}\r\n                  onMouseDown={onMouseDownHandler}\r\n                  onMouseUp={onMouseUpHandler}\r\n                  onClick={onClickHandler}\r\n                  onDoubleClick={onDoubleClickHandler}\r\n                  className={clsx(\r\n                      text.hover && classes.hover,\r\n                      text.editParameters && classes.clicked,\r\n                      text.editText && classes.hide\r\n                  )}\r\n            >\r\n                {content}\r\n            </Span>\r\n        </div>\r\n    )\r\n};\r\nexport default BannerCSSText;\r\n\r\n//============== TYPE ================\r\ntype PropsType = {\r\n    text: TextType\r\n}\r\ntype PropsSpanType = {\r\n    top: number\r\n    left: number\r\n    fontSize: number\r\n    fontFamily: string\r\n    fontStyle: string\r\n    color: string\r\n    zoom: number\r\n}\r\n\r\n//================================ STYLES =======================================\r\nconst useStyles = makeStyles({\r\n    hover: {\r\n        outline: '1px solid #ccc',\r\n        cursor: 'move'\r\n    },\r\n    clicked: {\r\n        outline: '2px solid black',\r\n    },\r\n    protect: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0,0,0,0.5)'\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\MainSidebar\\MainSidebar.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Background.tsx",[],["247","248"],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\BackgroundBorder.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Color\\Color.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Gradient\\GradientColor.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Settings\\Settings.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\MyImages\\MyImages.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Settings\\SettingsAlign.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Settings\\SettingsAlignButton.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Header\\HeaderLang.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\Workspace.tsx",["249"],"import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport BannerCanvasWrapper from \"../Banner/BannerCanvas/BannerCanvasWrapper\";\r\nimport {mainSidebarWidth, secondSidebarWidth} from \"../../../../Utils/CONST\";\r\nimport LeftPanel from \"./LeftPanel/LeftPanel\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getTexts} from \"../../../../Store/selectors/text-selectors\";\r\nimport styled from \"styled-components\";\r\nimport {getShowSecondSidebar, getSize} from \"../../../../Store/selectors/editor-selectors\";\r\nimport {getZoom} from \"../../../../Store/selectors/workspace-selectors\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useEditorWorkspace = () => {\r\n    const texts = useSelector(getTexts);\r\n    const leftPanelIsShow = !!texts.find(el => el.editParameters === true);\r\n    const showSecondSidebar = useSelector(getShowSecondSidebar);\r\n    const size = useSelector(getSize);\r\n    const zoom = useSelector(getZoom);\r\n    return {\r\n        leftPanelIsShow, size, zoom,\r\n        showSecondSidebar\r\n    }\r\n};\r\n\r\nconst Row1 = styled.div`\r\n    display: flex;\r\n    min-height: 50px;\r\n    flex-shrink: 0;\r\n    flex-grow: 1; \r\n`;\r\n\r\nconst Div1 = styled.div`\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n    box-sizing: border-box;\r\n    //border: 5px solid red;\r\n    flex-shrink: 0;\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst Div2 = styled.div`\r\n    width: ${(props: { width: number, zoom: number }) => `${props.width * props.zoom / 100}px`};\r\n    min-height: 50px;\r\n    box-sizing: border-box;\r\n    //border: 5px solid red;\r\n    flex-shrink: 0;\r\n`;\r\n\r\nconst Row2 = styled.div`\r\n    display: flex;\r\n    //height: 50px;\r\n    flex-shrink: 0; \r\n`;\r\n\r\nconst Div3 = styled.div`\r\n    height: ${(props: { height: number, zoom: number }) => `${props.height * props.zoom / 100}px`};\r\n    min-width: 50px;\r\n    box-sizing: border-box;\r\n    //border: 5px solid red;\r\n    flex-shrink: 0;\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst WorkspaceDiv = styled.div`\r\n        flex-grow: 1;\r\n        display: flex;\r\n        flex-direction: column;\r\n        position: relative;\r\n        width: ${\r\n    (\r\n        props: { showSecondSidebar: boolean }\r\n    ) => `calc(100vw - ${mainSidebarWidth}px - ${secondSidebarWidth * (props.showSecondSidebar ? 1 : 0)}px)`\r\n};\r\n        box-sizing: border-box;\r\n        overflow: auto;\r\n`\r\n\r\n//============== COMPONENT =================\r\nconst Workspace: React.FC<{}> = () => {\r\n    const {\r\n        leftPanelIsShow, size,\r\n        zoom, showSecondSidebar\r\n    } = useEditorWorkspace();\r\n\r\n    return (\r\n        <WorkspaceDiv showSecondSidebar={showSecondSidebar}>\r\n            <Row1>\r\n                <Div1/>\r\n                <Div2 width={size.width as number} zoom={zoom}/>\r\n                <Div1/>\r\n            </Row1>\r\n            <Row2>\r\n                <Div3 height={size.height as number} zoom={zoom}/>\r\n                <BannerCanvasWrapper/>\r\n                <Div3 height={size.height as number} zoom={zoom}/>\r\n            </Row2>\r\n            <Row1>\r\n                <Div1/>\r\n                <Div2 width={size.width as number} zoom={zoom}/>\r\n                <Div1/>\r\n            </Row1>\r\n\r\n            {\r\n                leftPanelIsShow &&\r\n                <LeftPanel/>\r\n            }\r\n        </WorkspaceDiv>\r\n    )\r\n};\r\n\r\nexport default Workspace;","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarText\\Text.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\ToolbarZoomMinus.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\ToolbarZoomPlus.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarTitle.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Image.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\DragAndDrop\\Dnd.ts",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCanvas\\BannerCanvasTexts.tsx",["250","251"],"import React, {ReactElement, useEffect, useRef} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSize} from \"../../../../../Store/selectors/editor-selectors\";\r\nimport {getTexts} from \"../../../../../Store/selectors/text-selectors\";\r\nimport {editorAC} from \"../../../../../Store/reducers/editor-reducer\";\r\nimport {getZoom} from \"../../../../../Store/selectors/workspace-selectors\";\r\n\r\n//============ CUSTOM HOOK ====================\r\nconst useBannerCanvasTexts = () => {\r\n    const classes = useStyles();\r\n    const size = useSelector(getSize);\r\n    const texts = useSelector(getTexts);\r\n    let canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    let canvasCtxRef = React.useRef<CanvasRenderingContext2D | null>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && size.width && size.height) {\r\n            canvasCtxRef.current = canvasRef.current.getContext('2d');\r\n            let ctx = canvasCtxRef.current;\r\n            ctx!.clearRect(0, 0, size.width, size.height);\r\n\r\n            for (let i = 0; i < texts.length; i++) {\r\n                let content = texts[i].content;\r\n                if (texts[i].lowerCase) {\r\n                    content = content.toLowerCase();\r\n                }\r\n                if (texts[i].upperCase) {\r\n                    content = content.toUpperCase();\r\n                }\r\n\r\n                ctx!.fillStyle = texts[i].color;\r\n                ctx!.font = `${texts[i].fontStyle} ${texts[i].fontSize}px ${texts[i].fontFamily}`;\r\n                ctx!.fillText(content, texts[i].position.left, texts[i].position.top);\r\n                ctx!.textBaseline = 'top';\r\n            }\r\n\r\n            dispatch(editorAC.setCanvasUrl('text', canvasRef.current.toDataURL()))\r\n        }\r\n    }, [texts]);\r\n\r\n    return {\r\n        classes, size, canvasRef\r\n    }\r\n}\r\n\r\n\r\n//============== COMPONENT =================\r\nconst BannerCanvasTexts: React.FC<{}> = (): ReactElement => {\r\n    const {\r\n        classes, size, canvasRef\r\n    } = useBannerCanvasTexts();\r\n    return (\r\n        <>\r\n            {\r\n                size.width && size.height &&\r\n                <canvas\r\n                    className={classes.bannerCanvasTexts}\r\n                    ref={canvasRef}\r\n                    width={size.width}\r\n                    height={size.height}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nconst BannerCanvasTextsMemo = React.memo(BannerCanvasTexts);\r\nexport default BannerCanvasTextsMemo;\r\n\r\n//======================== STYLES ========================\r\nconst useStyles = makeStyles({\r\n    bannerCanvasTexts: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0\r\n    }\r\n});","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Color\\SelectColorButton.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Color\\SetColorButton.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelText\\ButtonLowerCase.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCSS\\BannerTextForm.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\CreateNew\\CreateNewItemGraph.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Store\\reducers\\text-reducer.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\CreateNew\\CreateNewCustom.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Utils\\CONST.ts",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\DownloadDialog\\DownloadDialog.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Toolbar\\DownloadDialog\\LinkForm.tsx",["252"],"import React, {useEffect} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm, submit} from \"redux-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {workspaceAC} from \"../../../../../Store/reducers/workspace-reducer\";\r\nimport {getLink} from \"../../../../../Store/selectors/workspace-selectors\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {required, shouldNotBeEmpty} from \"../../../../../Utils/validators\";\r\nimport RenderTextFieldStartAdornment from \"../../../../common/RenderTextFieldStartAdornment\";\r\n\r\n//================= CUSTOM FORM HOOK =========================\r\nconst useForm = (valid: boolean) => {\r\n    const dispatch = useDispatch();\r\n    const onChangeHandler = () => {\r\n        setTimeout(() => dispatch(submit('link-form')));\r\n    };\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        dispatch(workspaceAC.setLinkFormIsValid(valid));\r\n    }, [valid]);\r\n    return {\r\n        onChangeHandler, classes\r\n    }\r\n};\r\n\r\n//========================== FORM =======================================\r\nconst Form: React.FC<FormPropsType> = ({handleSubmit, valid}) => {\r\n    const {\r\n        onChangeHandler, classes\r\n    } = useForm(valid);\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field name='link'\r\n                   autoFocus={true}\r\n                   component={RenderTextFieldStartAdornment}\r\n                   type=\"text\"\r\n                   size='small'\r\n                   className={classes.field}\r\n                   onChange={onChangeHandler}\r\n                   validate={[required, shouldNotBeEmpty]}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\n//================================== REDUX-FORM ======================================\r\nconst ReduxForm = reduxForm<FormParamsType, FormOwnPropsType>({\r\n    form: 'link-form',\r\n})(Form);\r\n\r\n//=========== CUSTOM COMPONENT HOOK =================\r\nconst useFileNameForm = () => {\r\n    const dispatch = useDispatch();\r\n    const onSubmitHandler = (value: FormParamsType) => {\r\n        dispatch(workspaceAC.setLink(value.link))\r\n    };\r\n    const link = useSelector(getLink)\r\n    const initialValues = {\r\n        link: link\r\n    };\r\n    return {\r\n        onSubmitHandler, initialValues\r\n    }\r\n};\r\n\r\n//================ COMPONENT =======================\r\nconst LinkForm: React.FC<{}> = () => {\r\n    const {\r\n        onSubmitHandler, initialValues\r\n    } = useFileNameForm();\r\n    return (\r\n        <ReduxForm onSubmit={onSubmitHandler}\r\n                   initialValues={initialValues}\r\n        />\r\n    )\r\n};\r\nexport default LinkForm;\r\n\r\n//=================== TYPE ==============\r\ntype FormPropsType =\r\n    InjectedFormProps<FormParamsType, FormOwnPropsType>\r\n    & FormOwnPropsType;\r\ntype FormParamsType = {\r\n    link: string\r\n}\r\ntype FormOwnPropsType = {};\r\n\r\n//================= STYLES ================\r\nconst useStyles = makeStyles({\r\n    field: {\r\n        width: '100%'\r\n    }\r\n});","D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Banner\\BannerCanvas\\BannerCanvasBackground.tsx",["253"],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\common\\SelectColorButtonCustom.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\ImageTabs.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\common\\SelectColorPopover.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\common\\PageNotFound.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Store\\selectors\\editor-selectors.ts",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\common\\Alarm.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanel.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelColor.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\BackgroundTabs.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Utils\\validators.ts",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\Workspace\\LeftPanel\\LeftPanelText\\ButtonFontStyle.tsx",[],"D:\\React\\projects\\Banner creator\\Banner-creator\\src\\Components\\Main\\Editor\\SecondarySidebar\\SecondarySidebarBackground\\Image\\Settings\\SettingsScaleMode.tsx",[],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":14},{"ruleId":"258","severity":1,"message":"262","line":3,"column":8,"nodeType":"260","messageId":"261","endLine":3,"endColumn":13},{"ruleId":"258","severity":1,"message":"263","line":4,"column":9,"nodeType":"260","messageId":"261","endLine":4,"endColumn":19},{"ruleId":"258","severity":1,"message":"264","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":19},{"ruleId":"258","severity":1,"message":"265","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":25},{"ruleId":"254","replacedBy":"266"},{"ruleId":"256","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":19,"column":8,"nodeType":"270","endLine":19,"endColumn":15,"suggestions":"271"},{"ruleId":"268","severity":1,"message":"269","line":31,"column":8,"nodeType":"270","endLine":31,"endColumn":27,"suggestions":"272"},{"ruleId":"268","severity":1,"message":"273","line":59,"column":11,"nodeType":"274","endLine":68,"endColumn":6},{"ruleId":"254","replacedBy":"275"},{"ruleId":"256","replacedBy":"276"},{"ruleId":"258","severity":1,"message":"277","line":2,"column":9,"nodeType":"260","messageId":"261","endLine":2,"endColumn":19},{"ruleId":"258","severity":1,"message":"278","line":7,"column":9,"nodeType":"260","messageId":"261","endLine":7,"endColumn":16},{"ruleId":"268","severity":1,"message":"279","line":41,"column":8,"nodeType":"270","endLine":41,"endColumn":15,"suggestions":"280"},{"ruleId":"268","severity":1,"message":"269","line":19,"column":8,"nodeType":"270","endLine":19,"endColumn":15,"suggestions":"281"},{"ruleId":"268","severity":1,"message":"269","line":246,"column":8,"nodeType":"270","endLine":250,"endColumn":6,"suggestions":"282"},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'Typography' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContentText' is defined but never used.",["283"],["284"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["285"],["286"],"The 'onOutsideClickHandler' function makes the dependencies of useEffect Hook (at line 78) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'onOutsideClickHandler' in its own useCallback() Hook.","VariableDeclarator",["283"],["284"],"'makeStyles' is defined but never used.","'getZoom' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'size.height', and 'size.width'. Either include them or remove the dependency array.",["287"],["288"],["289"],"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"290","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [dispatch, valid]",{"range":"299","text":"300"},"Update the dependencies array to be: [size, borderColor, dispatch]",{"range":"301","text":"302"},"Update the dependencies array to be: [dispatch, size.height, size.width, texts]",{"range":"303","text":"304"},{"range":"305","text":"300"},"Update the dependencies array to be: [size, backgroundStyle, backgroundStyleColor, gradientStyle, colorStart, colorEnd, currentImage, scaleMode, align, dispatch]",{"range":"306","text":"307"},[910,917],"[dispatch, valid]",[1362,1381],"[size, borderColor, dispatch]",[1846,1853],"[dispatch, size.height, size.width, texts]",[926,933],[12331,12479],"[size, backgroundStyle, backgroundStyleColor, gradientStyle, colorStart, colorEnd, currentImage, scaleMode, align, dispatch]"]